name: EC2 Deployment

on:
  push:
    branches: [ backup ]

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to AWS ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Docker image to ECR
      run: |
        export ECR_REPOSITORY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com/backend.docker
        export AWS_REGION=eu-north-1
        export IMAGE_TAG=latest  # Using 'latest' as a static tag for every build
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REPOSITORY:$IMAGE_TAG
      working-directory: ./server

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_SSH_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          export AWS_REGION=eu-north-1
          export ECR_REPOSITORY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com/backend.docker
          export IMAGE_TAG=latest 
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
          docker pull $ECR_REPOSITORY:$IMAGE_TAG
          docker stop my-container || true && docker rm my-container || true
          docker run -d --name my-container -p 5000:5000 --env-file /root/.env $ECR_REPOSITORY:$IMAGE_TAG
