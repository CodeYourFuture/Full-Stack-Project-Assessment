{"ast":null,"code":"var _jsxFileName = \"/home/howard/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction extractID(url) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[2].length === 11 ? match[2] : null;\n}\n\nfunction AddVideo(_ref) {\n  _s();\n\n  let {\n    onAdd\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\"); //const [id, setId] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = extractID(url);\n    onAdd({\n      title,\n      url,\n      id\n    });\n    setTitle(\"\");\n    setUrl(\"\"); //setId(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"YouTube URL\",\n      value: url,\n      onChange: e => setUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"YouTube URL\",\n      value: url,\n      onChange: e => setUrl(extractID(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVideo, \"2XkSbuFLNK1LOX3PsOenYC/bPt8=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["/home/howard/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddVideo.js"],"names":["React","useState","extractID","url","regExp","match","length","AddVideo","onAdd","title","setTitle","setUrl","handleSubmit","e","preventDefault","id","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,QAAMC,MAAM,GAAG,8DAAf;AACA,QAAMC,KAAK,GAAGF,GAAG,CAACE,KAAJ,CAAUD,MAAV,CAAd;AACA,SAAOC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,KAAoB,EAA7B,GAAkCD,KAAK,CAAC,CAAD,CAAvC,GAA6C,IAApD;AACD;;AAED,SAASE,QAAT,OAA6B;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACE,GAAD,EAAMQ,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B,CAF2B,CAG3B;;AAEA,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,EAAE,GAAGb,SAAS,CAACC,GAAD,CAApB;AACAK,IAAAA,KAAK,CAAC;AAAEC,MAAAA,KAAF;AAASN,MAAAA,GAAT;AAAcY,MAAAA;AAAd,KAAD,CAAL;AACAL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,IAAAA,MAAM,CAAC,EAAD,CAAN,CALuB,CAMvB;AACD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,KAAK,EAAEH,KAHT;AAIE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,KAAK,EAAEd,GAHT;AAIE,MAAA,QAAQ,EAAGU,CAAD,IAAOF,MAAM,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,KAAK,EAAEd,GAHT;AAIE,MAAA,QAAQ,EAAGU,CAAD,IAAOF,MAAM,CAACT,SAAS,CAACW,CAAC,CAACG,MAAF,CAASC,KAAV,CAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,YAbF,eAmBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GArCQV,Q;;KAAAA,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction extractID(url) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[2].length === 11 ? match[2] : null;\n}\n\nfunction AddVideo({ onAdd }) {\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  //const [id, setId] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = extractID(url);\n    onAdd({ title, url, id });\n    setTitle(\"\");\n    setUrl(\"\");\n    //setId(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"YouTube URL\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"YouTube URL\"\n        value={url}\n        onChange={(e) => setUrl(extractID(e.target.value))}\n      />\n      <button type=\"submit\">Add Video</button>\n    </form>\n  );\n}\nexport default AddVideo;\n"]},"metadata":{},"sourceType":"module"}