{"ast":null,"code":"// import React, { useState } from 'react';\n// import VideoItem from './VideoItem';\n// import AddVideoForm from './AddVideoForm';\n// const AllButtons = () => {\n//   const [videos, setVideos] = useState([]);\n//   const handleUpVote = (videoToUpdate) => {\n//     // Update the vote count for the video\n//     const updatedVideosUpVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: video.votes + 1 }\n//         : video\n//     );\n//     setVideos(updatedVideosUpVote);\n//   };\n//   const handleDownVote = (videoToUpdate) => {\n//     // Update the vote count for the video\n//     const updatedVideosDownVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: Math.max(video.votes - 1, 0) }\n//         : video\n//     );\n//     setVideos(updatedVideosDownVote);\n//   };\n//   const handleDelete = (videoToDelete) => {\n//     // Remove the video from the list\n//     const updatedVideos = videos.filter((video) => video.id !== videoToDelete.id);\n//     setVideos(updatedVideos);\n//   };\n//   const handleAddVideo = (newVideo) => {\n//     // Add a new video to the list\n//     const updatedVideos = [...videos, newVideo];\n//     setVideos(updatedVideos);\n//   };\n//   return (\n//       <div className=\"todo-list\">\n//       <h1>Video App</h1>\n//     <AddVideoForm onAddVideo={handleAddVideo} />\n//     <div className=\"video-list\">\n//         {videos.map((video) => (\n//           <VideoItem\n//             key={video.id}\n//             video={video}\n//             onUpVote={handleUpVote}\n//             onDownVote={handleDownVote}\n//             onDelete={handleDelete} />\n//         ))}\n//       </div>  \n//     </div>\n//   );\n// };\n// export default AllButtons;","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/AllButtons.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from 'react';\n// import VideoItem from './VideoItem';\n// import AddVideoForm from './AddVideoForm';\n\n// const AllButtons = () => {\n//   const [videos, setVideos] = useState([]);\n\n//   const handleUpVote = (videoToUpdate) => {\n\n//     // Update the vote count for the video\n//     const updatedVideosUpVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: video.votes + 1 }\n//         : video\n//     );\n//     setVideos(updatedVideosUpVote);\n//   };\n\n//   const handleDownVote = (videoToUpdate) => {\n//     // Update the vote count for the video\n//     const updatedVideosDownVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: Math.max(video.votes - 1, 0) }\n//         : video\n//     );\n//     setVideos(updatedVideosDownVote);\n//   };\n\n//   const handleDelete = (videoToDelete) => {\n//     // Remove the video from the list\n//     const updatedVideos = videos.filter((video) => video.id !== videoToDelete.id);\n//     setVideos(updatedVideos);\n//   };\n\n//   const handleAddVideo = (newVideo) => {\n//     // Add a new video to the list\n//     const updatedVideos = [...videos, newVideo];\n//     setVideos(updatedVideos);\n//   };\n\n//   return (\n//       <div className=\"todo-list\">\n//       <h1>Video App</h1>\n//     <AddVideoForm onAddVideo={handleAddVideo} />\n//     <div className=\"video-list\">\n//         {videos.map((video) => (\n//           <VideoItem\n//             key={video.id}\n//             video={video}\n//             onUpVote={handleUpVote}\n//             onDownVote={handleDownVote}\n//             onDelete={handleDelete} />\n//         ))}\n\n//       </div>  \n//     </div>\n//   );\n// };\n\n// export default AllButtons;\n"]},"metadata":{},"sourceType":"module"}