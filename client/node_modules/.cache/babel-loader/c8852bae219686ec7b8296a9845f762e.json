{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(props) {\n  _s();\n\n  const [videos, setVideos] = useState(props.result);\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  function deleteVideo(id) {\n    const updatedVideos = videos.filter(video => video.id !== id);\n    setVideos(updatedVideos);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShowingVideos\",\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: video.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"allVideos\",\n        width: \"300\",\n        height: \"220\",\n        src: convertToEmbedUrl(video.url),\n        title: video.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteVideo(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowingVideos, \"m5XAOzZ20O9i4mgZED0RSfJqLe4=\");\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","useState","ShowingVideos","props","videos","setVideos","result","convertToEmbedUrl","url","videoId","split","deleteVideo","id","updatedVideos","filter","video","map","title","rating"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAApC;;AAEA,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,UAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,WAAQ,iCAAgCD,OAAQ,EAAhD;AACD;;AAED,WAASE,WAAT,CAAqBC,EAArB,EAAyB;AACvB,UAAMC,aAAa,GAAGT,MAAM,CAACU,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACH,EAAN,KAAaA,EAAtC,CAAtB;AACAP,IAAAA,SAAS,CAACQ,aAAD,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGT,MAAM,CAACY,GAAP,CAAYD,KAAD,iBACV;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA,kBAAIA,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,GAAG,EAAEX,iBAAiB,CAACQ,KAAK,CAACP,GAAP,CAJxB;AAKE,QAAA,KAAK,EAAEO,KAAK,CAACE,KALf;AAME,QAAA,WAAW,EAAC,GANd;AAOE,QAAA,KAAK,EAAC,0FAPR;AAQE,QAAA,eAAe;AARjB;AAAA;AAAA;AAAA;AAAA,cARF,eAkBE;AAAQ,QAAA,OAAO,EAAE,MAAMN,WAAW,CAACI,KAAK,CAACH,EAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA,OAA6BG,KAAK,CAACH,EAAnC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAvCQV,a;;KAAAA,a;AAyCT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ShowingVideos(props) {\n  const [videos, setVideos] = useState(props.result);\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  function deleteVideo(id) {\n    const updatedVideos = videos.filter((video) => video.id !== id);\n    setVideos(updatedVideos);\n  }\n\n  return (\n    <div className=\"ShowingVideos\">\n      {videos.map((video) => (\n        <div className=\"videos\" key={video.id}>\n          <p>{video.title}</p>\n          <div className=\"buttons\">\n            <i className=\"fa-solid fa-thumbs-up\"></i>\n            <h4>{video.rating}</h4>\n            <i className=\"fa-solid fa-thumbs-down\"></i>\n          </div>\n\n          <iframe\n            className=\"allVideos\"\n            width=\"300\"\n            height=\"220\"\n            src={convertToEmbedUrl(video.url)}\n            title={video.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <button onClick={() => deleteVideo(video.id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}