{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(props) {\n  const videos = props.result;\n\n  const convertToEmbedUrl = url => {\n    // Extract the video ID from the \"watch\" URL\n    const videoId = url.split(\"v=\")[1]; // Construct the \"embed\" URL\n\n    return `https://www.youtube.com/embed/${videoId}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: convertToEmbedUrl(video.url),\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    }, video.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","ShowingVideos","props","videos","result","convertToEmbedUrl","url","videoId","split","map","video"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;;AAEA,QAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACjC;AACA,UAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB,CAFiC,CAGjC;;AACA,WAAQ,iCAAgCD,OAAQ,EAAhD;AACD,GALD;;AAOA,sBACE;AAAA,cACGJ,MAAM,CAACM,GAAP,CAAYC,KAAD,iBACV;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,MAAM,EAAC,KAHT;AAIE,MAAA,GAAG,EAAEL,iBAAiB,CAACK,KAAK,CAACJ,GAAP,CAJxB;AAKE,MAAA,KAAK,EAAC,sBALR;AAME,MAAA,WAAW,EAAC,GANd;AAOE,MAAA,KAAK,EAAC,0FAPR;AAQE,MAAA,eAAe;AARjB,OACOI,KAAK,CAACJ,GADb;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAgBD;;KA1BQL,a;AA4BT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\nfunction ShowingVideos(props) {\n  const videos = props.result;\n\n  const convertToEmbedUrl = (url) => {\n    // Extract the video ID from the \"watch\" URL\n    const videoId = url.split(\"v=\")[1];\n    // Construct the \"embed\" URL\n    return `https://www.youtube.com/embed/${videoId}`;\n  };\n\n  return (\n    <>\n      {videos.map((video) => (\n        <iframe\n          key={video.url}\n          width=\"560\"\n          height=\"315\"\n          src={convertToEmbedUrl(video.url)}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      ))}\n    </>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}