{"ast":null,"code":"var _jsxFileName = \"/home/natalie/Documents/CYF/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Video from \"./components/Video\";\nimport data from \"./exampleresponse.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //to delete, update the videos\n  const [listOfVideos, setLIstOfVideos] = useState(data);\n  const [score, setScore] = useState(data);\n\n  const handleDelete = async videoId => {\n    setLIstOfVideos(listOfVideos.filter(video => video.id !== videoId));\n    console.log(`Deleting video with ID ${videoId}`);\n  };\n\n  const handleScore = async (videoId, score) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: listOfVideos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n        video: video,\n        handleDelete: handleDelete\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6Rs+UX5bO4wOkohgMX/SdalbGxo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/natalie/Documents/CYF/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","Navbar","Video","data","App","listOfVideos","setLIstOfVideos","score","setScore","handleDelete","videoId","filter","video","id","console","log","handleScore","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACG,IAAD,CAAhD;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,IAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtCJ,IAAAA,eAAe,CAACD,YAAY,CAACM,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaH,OAA5C,CAAD,CAAf;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBL,OAAQ,EAA9C;AACD,GAHD;;AAKA,QAAMM,WAAW,GAAG,OAAON,OAAP,EAAgBH,KAAhB,KAA0B,CAE7C,CAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,gBAEGF,YAAY,CAACY,GAAb,CAAkBL,KAAD,iBAChB,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,YAAY,EAAEH;AAHhB,SACOG,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AAFH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA/BQT,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Video from \"./components/Video\";\nimport data from \"./exampleresponse.json\";\n\nfunction App() {\n  //to delete, update the videos\n  const [listOfVideos, setLIstOfVideos] = useState(data);\n  const [score, setScore] = useState(data);\n\n  const handleDelete = async (videoId) => {\n    setLIstOfVideos(listOfVideos.filter((video) => video.id !== videoId));\n    console.log(`Deleting video with ID ${videoId}`);\n  };\n\n  const handleScore = async (videoId, score) => {\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {/* <h1 className=\"text-3xl font-bold underline\">Hello world!</h1> */}\n      <div className=\"\">\n        {/* I use listOfVideos here to update the list of videos with new, and to delete them*/}\n        {listOfVideos.map((video) => (\n          <Video\n            key={video.id}\n            video={video}\n            handleDelete={handleDelete}\n           \n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}