{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(props) {\n  const videos = props.result;\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShowingVideos\",\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"340\",\n        height: \"220\",\n        src: convertToEmbedUrl(video.url),\n        title: video.title,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","ShowingVideos","props","videos","result","convertToEmbedUrl","url","videoId","split","map","video","title","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;;AAEA,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,UAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,WAAQ,iCAAgCD,OAAQ,EAAhD;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGJ,MAAM,CAACM,GAAP,CAAYC,KAAD,iBACV;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,GAAG,EAAEL,iBAAiB,CAACK,KAAK,CAACJ,GAAP,CAJxB;AAKE,QAAA,KAAK,EAAEI,KAAK,CAACC,KALf;AAME,QAAA,WAAW,EAAC,GANd;AAOE,QAAA,KAAK,EAAC,0FAPR;AAQE,QAAA,eAAe;AARjB,SACOD,KAAK,CAACE,EADb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KA1BQX,a;AA4BT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\nfunction ShowingVideos(props) {\n  const videos = props.result;\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  return (\n    <div className=\"ShowingVideos\">\n      {videos.map((video) => (\n        <div className=\"videos\">\n          <iframe\n            key={video.id}\n            width=\"340\"\n            height=\"220\"\n            src={convertToEmbedUrl(video.url)}\n            title={video.title}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}