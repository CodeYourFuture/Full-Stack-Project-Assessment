{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/AddVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddVideo(_ref) {\n  _s();\n\n  let {\n    onAddVideo\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const isYouTubeUrlValid = url => {\n    // Regular expression to validate YouTube URLs\n    const youtubeUrlRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/.+$/;\n    return youtubeUrlRegex.test(url);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (title.trim() === \"\") {\n      alert(\"Please provide a title.\");\n      return;\n    }\n\n    if (!isYouTubeUrlValid(url)) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      title,\n      url,\n      rating: 0\n    };\n    onAddVideo(newVideo);\n    setTitle(\"\");\n    setUrl(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddVideo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a YouTube Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url\",\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVideo, \"2XkSbuFLNK1LOX3PsOenYC/bPt8=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/AddVideo.jsx"],"names":["React","useState","AddVideo","onAddVideo","title","setTitle","url","setUrl","isYouTubeUrlValid","youtubeUrlRegex","test","handleSubmit","e","preventDefault","trim","alert","newVideo","id","Date","now","rating","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAAkC;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMO,iBAAiB,GAAIF,GAAD,IAAS;AACjC;AACA,UAAMG,eAAe,GACnB,sDADF;AAEA,WAAOA,eAAe,CAACC,IAAhB,CAAqBJ,GAArB,CAAP;AACD,GALD;;AAOA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIT,KAAK,CAACU,IAAN,OAAiB,EAArB,EAAyB;AACvBC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACA;AACD;;AAED,QAAI,CAACP,iBAAiB,CAACF,GAAD,CAAtB,EAA6B;AAC3BS,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AACD;;AAED,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADW;AAEff,MAAAA,KAFe;AAGfE,MAAAA,GAHe;AAIfc,MAAAA,MAAM,EAAE;AAJO,KAAjB;AAOAjB,IAAAA,UAAU,CAACa,QAAD,CAAV;AAEAX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAxBD;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAEP,KAHT;AAIE,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACS,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,KAFL;AAGE,UAAA,KAAK,EAAEhB,GAHT;AAIE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,MAAM,CAACK,CAAC,CAACS,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA/DQpB,Q;;KAAAA,Q;AAiET,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddVideo({ onAddVideo }) {\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const isYouTubeUrlValid = (url) => {\n    // Regular expression to validate YouTube URLs\n    const youtubeUrlRegex =\n      /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/.+$/;\n    return youtubeUrlRegex.test(url);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (title.trim() === \"\") {\n      alert(\"Please provide a title.\");\n      return;\n    }\n\n    if (!isYouTubeUrlValid(url)) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      title,\n      url,\n      rating: 0,\n    };\n\n    onAddVideo(newVideo);\n\n    setTitle(\"\");\n    setUrl(\"\");\n  };\n\n  return (\n    <div className=\"AddVideo\">\n      <h2>Add a YouTube Video</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"url\">URL:</label>\n          <input\n            type=\"text\"\n            id=\"url\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Add Video</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddVideo;\n"]},"metadata":{},"sourceType":"module"}