{"ast":null,"code":"// import React, { useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// import \"./App.css\";\n// function extractVideoId(url) {\n//   // Extract the video ID from the YouTube URL\n//   // Implement this function according to your requirements\n//   // Example implementation:\n//   const urlParts = url.split(\"/\");\n//   return urlParts[urlParts.length - 1];\n// }\n// function App() {\n//   const [videos, setVideos] = useState([\n//     {\n//       id: 1,\n//       title: \"Video 1\",\n//       url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n//       votes: 0,\n//     },\n//     {\n//       id: 2,\n//       title: \"Video 2\",\n//       url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n//       votes: 0,\n//     },\n//     {\n//       id: 3,\n//       title: \"Video 3\",\n//       url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n//       votes: 0,\n//     },\n//   ]);\n//   const handleAddVideo = (title, url) => {\n//     const videoId = extractVideoId(url);\n//     const newVideo = {\n//       id: videos.length + 1,\n//       title,\n//       url: `https://www.youtube.com/embed/${videoId}`,\n//       votes: 0,\n//     };\n//     setVideos([...videos, newVideo]);\n//   };\n//   const handleVote = (videoId, increment) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === videoId\n//           ? { ...video, votes: video.votes + increment }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemoveVideo = (videoId) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.filter((video) => video.id !== videoId)\n//     );\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <div className=\"container\">\n//         <VideoList\n//           videos={videos}\n//           handleVote={handleVote}\n//           handleRemove={handleRemoveVideo}\n//         />\n//         <AddVideoForm handleAddVideo={handleAddVideo} />\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// import \"./App.css\";\n\n// function extractVideoId(url) {\n//   // Extract the video ID from the YouTube URL\n//   // Implement this function according to your requirements\n//   // Example implementation:\n//   const urlParts = url.split(\"/\");\n//   return urlParts[urlParts.length - 1];\n// }\n\n// function App() {\n//   const [videos, setVideos] = useState([\n//     {\n//       id: 1,\n//       title: \"Video 1\",\n//       url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n//       votes: 0,\n//     },\n//     {\n//       id: 2,\n//       title: \"Video 2\",\n//       url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n//       votes: 0,\n//     },\n//     {\n//       id: 3,\n//       title: \"Video 3\",\n//       url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n//       votes: 0,\n//     },\n//   ]);\n\n//   const handleAddVideo = (title, url) => {\n//     const videoId = extractVideoId(url);\n//     const newVideo = {\n//       id: videos.length + 1,\n//       title,\n//       url: `https://www.youtube.com/embed/${videoId}`,\n//       votes: 0,\n//     };\n//     setVideos([...videos, newVideo]);\n//   };\n\n//   const handleVote = (videoId, increment) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === videoId\n//           ? { ...video, votes: video.votes + increment }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemoveVideo = (videoId) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.filter((video) => video.id !== videoId)\n//     );\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <div className=\"container\">\n//         <VideoList\n//           videos={videos}\n//           handleVote={handleVote}\n//           handleRemove={handleRemoveVideo}\n//         />\n//         <AddVideoForm handleAddVideo={handleAddVideo} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}