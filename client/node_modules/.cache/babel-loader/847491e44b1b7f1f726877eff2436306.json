{"ast":null,"code":"import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef((_ref, outerRef) => {\n  let {\n    children: overlay,\n    transition,\n    popperConfig = {},\n    ...outerProps\n  } = _ref;\n  const popperRef = useRef({});\n  const [firstRenderedState, setFirstRenderedState] = useState(null);\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  const handleFirstUpdate = useEventCallback(state => {\n    setFirstRenderedState(state);\n    popperConfig == null ? void 0 : popperConfig.onFirstUpdate == null ? void 0 : popperConfig.onFirstUpdate(state);\n  });\n  useIsomorphicEffect(() => {\n    if (firstRenderedState) {\n      popperRef.current.scheduleUpdate == null ? void 0 : popperRef.current.scheduleUpdate();\n    }\n  }, [firstRenderedState]);\n  useEffect(() => {\n    if (!outerProps.show) {\n      setFirstRenderedState(null);\n    }\n  }, [outerProps.show]);\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || []),\n      onFirstUpdate: handleFirstUpdate\n    },\n    transition: actualTransition,\n    children: (overlayProps, _ref2) => {\n      let {\n        arrowProps,\n        popper: popperObj,\n        show\n      } = _ref2;\n\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false,\n        strategy: popperConfig.strategy\n      });\n      const hasDoneInitialMeasure = !!firstRenderedState;\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps,\n        hasDoneInitialMeasure\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        hasDoneInitialMeasure,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","map":{"version":3,"sources":["C:/Users/meron/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/Overlay.js"],"names":["React","useEffect","useRef","useState","classNames","BaseOverlay","useEventCallback","useIsomorphicEffect","useMergedRefs","useOverlayOffset","Fade","safeFindDOMNode","jsx","_jsx","defaultProps","transition","rootClose","show","placement","wrapRefs","props","arrowProps","ref","aRef","__wrapped","r","Overlay","forwardRef","outerRef","children","overlay","popperConfig","outerProps","popperRef","firstRenderedState","setFirstRenderedState","modifiers","offset","mergedRef","actualTransition","undefined","handleFirstUpdate","state","onFirstUpdate","current","scheduleUpdate","concat","overlayProps","popper","popperObj","_popperObj$state","_popperObj$state$modi","updatedPlacement","Object","assign","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","strategy","hasDoneInitialMeasure","className","cloneElement","style","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [firstRenderedState, setFirstRenderedState] = useState(null);\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  const handleFirstUpdate = useEventCallback(state => {\n    setFirstRenderedState(state);\n    popperConfig == null ? void 0 : popperConfig.onFirstUpdate == null ? void 0 : popperConfig.onFirstUpdate(state);\n  });\n  useIsomorphicEffect(() => {\n    if (firstRenderedState) {\n      popperRef.current.scheduleUpdate == null ? void 0 : popperRef.current.scheduleUpdate();\n    }\n  }, [firstRenderedState]);\n  useEffect(() => {\n    if (!outerProps.show) {\n      setFirstRenderedState(null);\n    }\n  }, [outerProps.show]);\n  return /*#__PURE__*/_jsx(BaseOverlay, {\n    ...outerProps,\n    ref: mergedRef,\n    popperConfig: {\n      ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || []),\n      onFirstUpdate: handleFirstUpdate\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n      wrapRefs(overlayProps, arrowProps);\n      // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false,\n        strategy: popperConfig.strategy\n      });\n      const hasDoneInitialMeasure = !!firstRenderedState;\n      if (typeof overlay === 'function') return overlay({\n        ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps,\n        hasDoneInitialMeasure\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, {\n        ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        hasDoneInitialMeasure,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: {\n          ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}