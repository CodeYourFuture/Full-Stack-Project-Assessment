{"ast":null,"code":"import _asyncToGenerator from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function VideoComponent(_ref){var elements=_ref.elements;// Rest of your code remains unchanged\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"ascendingButton\",children:[/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-light customBackground1\",children:\"Ascending\"}),/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-light customBackground1\",children:\"Descending\"})]}),/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:/*#__PURE__*/_jsx(\"div\",{class:\"videoDisplayContainer\",children:elements.map(function(element,index){return/*#__PURE__*/_jsx(VideoDisplay,{element:element},index);})})})]});}function VideoDisplay(_ref2){var element=_ref2.element,onLike=_ref2.onLike,onDislike=_ref2.onDislike,onDelete=_ref2.onDelete;// Rest of your code remains unchanged\nreturn/*#__PURE__*/_jsxs(\"div\",{class:\"displayGrid\",children:[/*#__PURE__*/_jsx(\"h5\",{children:element.title}),/*#__PURE__*/_jsx(\"iframe\",{width:\"330\",height:\"200\",src:element.url,title:element.title,border:\"none\",\"border-radius\":\"103px\",frameborder:\"0\",allowfullscreen:true,align:\"center\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"likedislikeBtn\",children:[/*#__PURE__*/_jsx(\"button\",{videoId:element.id,class:\"btn btn-light customBackground5\",onClick:function onClick(){return onLike(element.id);}/*() => setScore((s) => s + 1)*/,children:\"Like\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Votes:\\xA0\",element.rating]}),/*#__PURE__*/_jsx(\"button\",{videoId:element.id,class:\"btn btn-light customBackground5\",onClick:function onClick(){return onDislike(element.id);}/*() => setScore((s) => s - 1)*/,children:\"Dislike\"})]}),/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-light deleteBtn\",onClick:function onClick(){return onDelete(element.id);},children:\"Delete\"})]},element.id);}export default function AllVideoDisplay(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videoData=_useState2[0],setVideoData=_useState2[1];useEffect(function(){fetch(\"/videos\").then(function(response){return response.json();}).then(function(updatedData){setVideoData(updatedData);}).catch(function(error){console.error(\"Error fetching data:\",error);});},[]);var handleLike=function handleLike(videoId){// Update frontend state optimistically\nvar updatedVideos=videoData.map(function(video){if(video.id===videoId){return _objectSpread(_objectSpread({},video),{},{rating:video.rating+1});}return video;});setVideoData(updatedVideos);// Send API request to update card's vote count\nfetch(\"/videos/\".concat(videoId,\"/like\"),{method:\"POST\"});};var handleDislike=function handleDislike(videoId){// Update frontend state optimistically\nvar updatedVideos=videoData.map(function(video){if(video.id===videoId){return _objectSpread(_objectSpread({},video),{},{rating:Math.max(video.rating-1,0)});}return video;});setVideoData(updatedVideos);// Send API request to update card's vote count\nfetch(\"/videos/\".concat(videoId,\"/dislike\"),{method:\"POST\"});};var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"/videos/\".concat(id),{method:\"DELETE\"});case 3:response=_context.sent;if(response.ok){setVideoData(videoData.filter(function(element){return element.id!==id;}));}else{console.error(\"Error deleting video:\");}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(\"Error deleting video:\",_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function handleDelete(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(VideoComponent,{elements:videoData.sort(function(a,b){return b.rating-a.rating;}),onLike:handleLike,onDislike:handleDislike,onDelete:handleDelete});}//console.log(dataVideo)\n/*function VideoComponent({ elements }) {\n  return (\n    <div>\n      <div id=\"ascendingButton\">\n        <button class=\"btn btn-light customBackground1\">Ascending</button>\n        <button class=\"btn btn-light customBackground1\">Descending</button>\n      </div>\n\n      <div class=\"container\">\n        <div class=\"videoDisplayContainer\">\n          {elements.map((element, index) => (\n            <VideoDisplay key={index} element={element} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction VideoDisplay({ element }) {\n  const [score, setScore] = useState(element.rating);\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n  // ///***************likedislike****************** */ /* const handleLike = (videoId) => {\n    // Update frontend state optimistically\n    const updatedVideos = videoData.map((video) => {\n      if (video.id === videoId) {\n        return { ...video, rating: video.rating + 1 };\n      }\n      return video;\n    });\n    setVideoData(updatedVideos);\n    console.log(updatedVideos);\n    // Send API request to update card's vote count\n    fetch(`/videos/${videoId}/like`, { method: \"POST\" });\n  };\n\n  const handleDislike = (videoId) => {\n    // Update frontend state optimistically\n    const updatedVideos = videoData.map((video) => {\n      if (video.id === videoId) {\n        return { ...video, rating: Math.max(video.rating - 1, 0) };\n      }\n      return video;\n    });\n    setVideoData(updatedVideos);\n\n    // Send API request to update card's vote count\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n  };\n\n  ///********************************* */ /*const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n      if (response.ok) {\n        setVideoData(videoData.filter((element) => element.id !== id));\n      } else {\n        console.error(\"Error deleting video:\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  };\n\n  return (\n    <div>\n      {\" \"}\n      {videoData.map((element) => (\n        <div key={element.id} class=\"displayGrid\">\n          <h5>{element.title}</h5>\n\n          <iframe\n            width=\"330\"\n            height=\"200\"\n            src={element.url}\n            title={element.title}\n            border=\"none\"\n            border-radius=\"103px\"\n            frameborder=\"0\"\n            allowfullscreen\n            align=\"center\"\n          ></iframe>\n          <div class=\"likedislikeBtn\">\n            <button\n              videoId={element.id}\n              class=\"btn btn-light customBackground5\"\n              onClick={\n                () => handleLike(element.id) /*() => setScore((s) => s + 1)*/ /*       }\n            >\n              Like\n            </button>\n            <span>Votes:&nbsp;{element.rating}</span>\n\n            <button\n              videoId={element.id}\n              class=\"btn btn-light customBackground5\"\n              onClick={\n                () => handleDislike(element.id) /*() => setScore((s) => s - 1)*/ /*      }\n            >\n              Dislike\n            </button>\n          </div>\n          <button\n            class=\"btn btn-light deleteBtn\"\n            onClick={() => handleDelete(element.id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function AllVideoDisplay() {\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  return (\n    <VideoComponent elements={videoData.sort((a, b) => b.rating - a.rating)} />\n  );\n}*/","map":{"version":3,"sources":["/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/src/AllVideoDisplay.js"],"names":["React","useEffect","useState","VideoComponent","elements","map","element","index","VideoDisplay","onLike","onDislike","onDelete","title","url","id","rating","AllVideoDisplay","videoData","setVideoData","fetch","then","response","json","updatedData","catch","error","console","handleLike","videoId","updatedVideos","video","method","handleDislike","Math","max","handleDelete","ok","filter","sort","a","b"],"mappings":"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CACD,MAAOe,CAAAA,KAAP,CACD,CALqB,CAAtB,CAMAZ,YAAY,CAACW,aAAD,CAAZ,CAEA;AACAV,KAAK,mBAAYS,OAAZ,aAA+B,CAAEG,MAAM,CAAE,MAAV,CAA/B,CAAL,CACD,CAZD,CAcA,GAAMI,CAAAA,YAAY,2FAAG,iBAAOrB,EAAP,qKAEMK,CAAAA,KAAK,mBAAYL,EAAZ,EAAkB,CAAEiB,MAAM,CAAE,QAAV,CAAlB,CAFX,QAEXV,QAFW,eAGjB,GAAIA,QAAQ,CAACe,EAAb,CAAiB,CACflB,YAAY,CAACD,SAAS,CAACoB,MAAV,CAAiB,SAAC/B,OAAD,QAAaA,CAAAA,OAAO,CAACQ,EAAR,GAAeA,EAA5B,EAAjB,CAAD,CAAZ,CACD,CAFD,IAEO,CACLY,OAAO,CAACD,KAAR,CAAc,uBAAd,EACD,CAPgB,+EASjBC,OAAO,CAACD,KAAR,CAAc,uBAAd,cATiB,oEAAH,kBAAZU,CAAAA,YAAY,6CAAlB,CAaA,mBACE,KAAC,cAAD,EACE,QAAQ,CAAElB,SAAS,CAACqB,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACzB,MAAF,CAAWwB,CAAC,CAACxB,MAAvB,EAAf,CADZ,CAEE,MAAM,CAAEY,UAFV,CAGE,SAAS,CAAEK,aAHb,CAIE,QAAQ,CAAEG,YAJZ,EADF,CAQD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gF,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nfunction VideoComponent({ elements }) {\n  // Rest of your code remains unchanged\n  return (\n    <div>\n      <div id=\"ascendingButton\">\n        <button class=\"btn btn-light customBackground1\">Ascending</button>\n        <button class=\"btn btn-light customBackground1\">Descending</button>\n      </div>\n\n      <div class=\"container\">\n        <div class=\"videoDisplayContainer\">\n          {elements.map((element, index) => (\n            <VideoDisplay key={index} element={element} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction VideoDisplay({ element, onLike, onDislike, onDelete }) {\n  // Rest of your code remains unchanged\n  return (\n    <div key={element.id} class=\"displayGrid\">\n      <h5>{element.title}</h5>\n\n      <iframe\n        width=\"330\"\n        height=\"200\"\n        src={element.url}\n        title={element.title}\n        border=\"none\"\n        border-radius=\"103px\"\n        frameborder=\"0\"\n        allowfullscreen\n        align=\"center\"\n      ></iframe>\n      <div class=\"likedislikeBtn\">\n        <button\n          videoId={element.id}\n          class=\"btn btn-light customBackground5\"\n          onClick={() => onLike(element.id) /*() => setScore((s) => s + 1)*/}\n        >\n          Like\n        </button>\n        <span>Votes:&nbsp;{element.rating}</span>\n\n        <button\n          videoId={element.id}\n          class=\"btn btn-light customBackground5\"\n          onClick={() => onDislike(element.id) /*() => setScore((s) => s - 1)*/}\n        >\n          Dislike\n        </button>\n      </div>\n      <button\n        class=\"btn btn-light deleteBtn\"\n        onClick={() => onDelete(element.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default function AllVideoDisplay() {\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleLike = (videoId) => {\n    // Update frontend state optimistically\n    const updatedVideos = videoData.map((video) => {\n      if (video.id === videoId) {\n        return { ...video, rating: video.rating + 1 };\n      }\n      return video;\n    });\n    setVideoData(updatedVideos);\n    // Send API request to update card's vote count\n    fetch(`/videos/${videoId}/like`, { method: \"POST\" });\n  };\n\n  const handleDislike = (videoId) => {\n    // Update frontend state optimistically\n    const updatedVideos = videoData.map((video) => {\n      if (video.id === videoId) {\n        return { ...video, rating: Math.max(video.rating - 1, 0) };\n      }\n      return video;\n    });\n    setVideoData(updatedVideos);\n\n    // Send API request to update card's vote count\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n      if (response.ok) {\n        setVideoData(videoData.filter((element) => element.id !== id));\n      } else {\n        console.error(\"Error deleting video:\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  };\n\n  return (\n    <VideoComponent\n      elements={videoData.sort((a, b) => b.rating - a.rating)}\n      onLike={handleLike}\n      onDislike={handleDislike}\n      onDelete={handleDelete}\n    />\n  );\n}\n\n//console.log(dataVideo)\n/*function VideoComponent({ elements }) {\n  return (\n    <div>\n      <div id=\"ascendingButton\">\n        <button class=\"btn btn-light customBackground1\">Ascending</button>\n        <button class=\"btn btn-light customBackground1\">Descending</button>\n      </div>\n\n      <div class=\"container\">\n        <div class=\"videoDisplayContainer\">\n          {elements.map((element, index) => (\n            <VideoDisplay key={index} element={element} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction VideoDisplay({ element }) {\n  const [score, setScore] = useState(element.rating);\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n  // ///***************likedislike****************** */\n/* const handleLike = (videoId) => {\n    // Update frontend state optimistically\n    const updatedVideos = videoData.map((video) => {\n      if (video.id === videoId) {\n        return { ...video, rating: video.rating + 1 };\n      }\n      return video;\n    });\n    setVideoData(updatedVideos);\n    console.log(updatedVideos);\n    // Send API request to update card's vote count\n    fetch(`/videos/${videoId}/like`, { method: \"POST\" });\n  };\n\n  const handleDislike = (videoId) => {\n    // Update frontend state optimistically\n    const updatedVideos = videoData.map((video) => {\n      if (video.id === videoId) {\n        return { ...video, rating: Math.max(video.rating - 1, 0) };\n      }\n      return video;\n    });\n    setVideoData(updatedVideos);\n\n    // Send API request to update card's vote count\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n  };\n\n  ///********************************* */\n/*const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n      if (response.ok) {\n        setVideoData(videoData.filter((element) => element.id !== id));\n      } else {\n        console.error(\"Error deleting video:\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  };\n\n  return (\n    <div>\n      {\" \"}\n      {videoData.map((element) => (\n        <div key={element.id} class=\"displayGrid\">\n          <h5>{element.title}</h5>\n\n          <iframe\n            width=\"330\"\n            height=\"200\"\n            src={element.url}\n            title={element.title}\n            border=\"none\"\n            border-radius=\"103px\"\n            frameborder=\"0\"\n            allowfullscreen\n            align=\"center\"\n          ></iframe>\n          <div class=\"likedislikeBtn\">\n            <button\n              videoId={element.id}\n              class=\"btn btn-light customBackground5\"\n              onClick={\n                () => handleLike(element.id) /*() => setScore((s) => s + 1)*/\n/*       }\n            >\n              Like\n            </button>\n            <span>Votes:&nbsp;{element.rating}</span>\n\n            <button\n              videoId={element.id}\n              class=\"btn btn-light customBackground5\"\n              onClick={\n                () => handleDislike(element.id) /*() => setScore((s) => s - 1)*/\n/*      }\n            >\n              Dislike\n            </button>\n          </div>\n          <button\n            class=\"btn btn-light deleteBtn\"\n            onClick={() => handleDelete(element.id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function AllVideoDisplay() {\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  return (\n    <VideoComponent elements={videoData.sort((a, b) => b.rating - a.rating)} />\n  );\n}*/\n"]},"metadata":{},"sourceType":"module"}