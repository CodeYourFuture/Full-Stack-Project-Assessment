{"ast":null,"code":"var _jsxFileName = \"/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/src/components/AddVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddVideo = _ref => {\n  _s();\n\n  let {\n    onAddVideo\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [nextId, setNextId] = useState(1); // Initialize a counter for generating IDs\n\n  const handleAddVideo = () => {\n    // Validate if the URL is a YouTube video URL and extract the video ID\n    const videoId = getYouTubeVideoIdFromUrl(url);\n\n    if (videoId) {\n      // Generate a unique ID using the counter\n      const newVideo = {\n        id: nextId,\n        // Use the counter as the ID\n        title,\n        youtubeVideoId: videoId,\n        // Extracted video ID\n        votes: 0\n      }; // Call the parent component's function to add the video\n\n      onAddVideo(newVideo); // Increment the counter for the next ID\n\n      setNextId(nextId + 1); // Reset the input fields\n\n      setTitle('');\n      setUrl('');\n    } else {\n      alert('Invalid YouTube video URL. Please enter a valid YouTube video URL.');\n    }\n  };\n\n  const getYouTubeVideoIdFromUrl = url => {\n    // Define patterns for different YouTube URL formats\n    const patterns = [/(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/watch\\?v=([a-zA-Z0-9_-]+)/, /(?:https?:\\/\\/)?(?:www\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/]; // Iterate through patterns and try to match with the given URL\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n\n      if (match && match[1]) {\n        return match[1]; // Return the video ID\n      }\n    } // If no match is found, return null\n\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"YouTube URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddVideo,\n      children: \"Add Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddVideo, \"aK2edibOhFXziKcVmXcGu1TMlfM=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/src/components/AddVideo.jsx"],"names":["React","useState","AddVideo","onAddVideo","title","setTitle","url","setUrl","nextId","setNextId","handleAddVideo","videoId","getYouTubeVideoIdFromUrl","newVideo","id","youtubeVideoId","votes","alert","patterns","pattern","match","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAD,CAApC,CAHmC,CAGM;;AAEzC,QAAMS,cAAc,GAAG,MAAM;AAC3B;AACA,UAAMC,OAAO,GAAGC,wBAAwB,CAACN,GAAD,CAAxC;;AAEA,QAAIK,OAAJ,EAAa;AACX;AACA,YAAME,QAAQ,GAAG;AACfC,QAAAA,EAAE,EAAEN,MADW;AACH;AACZJ,QAAAA,KAFe;AAGfW,QAAAA,cAAc,EAAEJ,OAHD;AAGU;AACzBK,QAAAA,KAAK,EAAE;AAJQ,OAAjB,CAFW,CASX;;AACAb,MAAAA,UAAU,CAACU,QAAD,CAAV,CAVW,CAYX;;AACAJ,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT,CAbW,CAeX;;AACAH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD,KAlBD,MAkBO;AACLU,MAAAA,KAAK,CAAC,oEAAD,CAAL;AACD;AACF,GAzBD;;AA2BA,QAAML,wBAAwB,GAAIN,GAAD,IAAS;AACxC;AACA,UAAMY,QAAQ,GAAG,CACf,mEADe,EAEf,uDAFe,CAAjB,CAFwC,CAOxC;;AACA,SAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC9B,YAAME,KAAK,GAAGd,GAAG,CAACc,KAAJ,CAAUD,OAAV,CAAd;;AACA,UAAIC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrB,eAAOA,KAAK,CAAC,CAAD,CAAZ,CADqB,CACJ;AAClB;AACF,KAbuC,CAexC;;;AACA,WAAO,IAAP;AACD,GAjBD;;AAmBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,wCAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEhB,KAA1B;AAAiC,QAAA,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8CAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEjB,GAA1B;AAA+B,QAAA,QAAQ,EAAGe,CAAD,IAAOd,MAAM,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAQ,MAAA,OAAO,EAAEb,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjED;;GAAMR,Q;;KAAAA,Q;AAmEN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AddVideo = ({ onAddVideo }) => {\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [nextId, setNextId] = useState(1); // Initialize a counter for generating IDs\n\n  const handleAddVideo = () => {\n    // Validate if the URL is a YouTube video URL and extract the video ID\n    const videoId = getYouTubeVideoIdFromUrl(url);\n\n    if (videoId) {\n      // Generate a unique ID using the counter\n      const newVideo = {\n        id: nextId, // Use the counter as the ID\n        title,\n        youtubeVideoId: videoId, // Extracted video ID\n        votes: 0,\n      };\n\n      // Call the parent component's function to add the video\n      onAddVideo(newVideo);\n\n      // Increment the counter for the next ID\n      setNextId(nextId + 1);\n\n      // Reset the input fields\n      setTitle('');\n      setUrl('');\n    } else {\n      alert('Invalid YouTube video URL. Please enter a valid YouTube video URL.');\n    }\n  };\n\n  const getYouTubeVideoIdFromUrl = (url) => {\n    // Define patterns for different YouTube URL formats\n    const patterns = [\n      /(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/watch\\?v=([a-zA-Z0-9_-]+)/,\n      /(?:https?:\\/\\/)?(?:www\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/,\n    ];\n\n    // Iterate through patterns and try to match with the given URL\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match && match[1]) {\n        return match[1]; // Return the video ID\n      }\n    }\n\n    // If no match is found, return null\n    return null;\n  };\n\n  return (\n    <div>\n      <h2>Add a New Video</h2>\n      <label>\n        Title:\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n      </label>\n      <label>\n        YouTube URL:\n        <input type=\"text\" value={url} onChange={(e) => setUrl(e.target.value)} />\n      </label>\n      <button onClick={handleAddVideo}>Add Video</button>\n    </div>\n  );\n};\n\nexport default AddVideo;\n"]},"metadata":{},"sourceType":"module"}