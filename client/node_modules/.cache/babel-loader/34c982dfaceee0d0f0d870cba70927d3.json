{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { traverseBreakpoints } from './traverseBreakpoints';\n\nfunction appendLevel(level) {\n  if (!level) {\n    return '';\n  }\n\n  return `Level${level}`;\n}\n\nfunction isNestedContainer(ownerState) {\n  return ownerState.unstable_level > 0 && ownerState.container;\n}\n\nfunction createGetSelfSpacing(ownerState) {\n  return function getSelfSpacing(axis) {\n    return `var(--Grid-${axis}Spacing${appendLevel(ownerState.unstable_level)})`;\n  };\n}\n\nfunction createGetParentSpacing(ownerState) {\n  return function getParentSpacing(axis) {\n    if (ownerState.unstable_level === 0) {\n      return `var(--Grid-${axis}Spacing)`;\n    }\n\n    return `var(--Grid-${axis}Spacing${appendLevel(ownerState.unstable_level - 1)})`;\n  };\n}\n\nfunction getParentColumns(ownerState) {\n  if (ownerState.unstable_level === 0) {\n    return `var(--Grid-columns)`;\n  }\n\n  return `var(--Grid-columns${appendLevel(ownerState.unstable_level - 1)})`;\n}\n\nexport const generateGridSizeStyles = _ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const getSelfSpacing = createGetSelfSpacing(ownerState);\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.gridSize, (appendStyle, value) => {\n    let style = {};\n\n    if (value === true) {\n      style = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    }\n\n    if (value === 'auto') {\n      style = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    }\n\n    if (typeof value === 'number') {\n      style = {\n        flexGrow: 0,\n        flexBasis: 'auto',\n        width: `calc(100% * ${value} / ${getParentColumns(ownerState)}${isNestedContainer(ownerState) ? ` + ${getSelfSpacing('column')}` : ''})`\n      };\n    }\n\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridOffsetStyles = _ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.gridOffset, (appendStyle, value) => {\n    let style = {};\n\n    if (value === 'auto') {\n      style = {\n        marginLeft: 'auto'\n      };\n    }\n\n    if (typeof value === 'number') {\n      style = {\n        marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / ${getParentColumns(ownerState)})`\n      };\n    }\n\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridColumnsStyles = _ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const styles = isNestedContainer(ownerState) ? {\n    [`--Grid-columns${appendLevel(ownerState.unstable_level)}`]: getParentColumns(ownerState)\n  } : {\n    '--Grid-columns': 12\n  };\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {\n    appendStyle(styles, {\n      [`--Grid-columns${appendLevel(ownerState.unstable_level)}`]: value\n    });\n  });\n  return styles;\n};\nexport const generateGridRowSpacingStyles = _ref4 => {\n  let {\n    theme,\n    ownerState\n  } = _ref4;\n\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const getParentSpacing = createGetParentSpacing(ownerState);\n  const styles = isNestedContainer(ownerState) ? {\n    // Set the default spacing as its parent spacing.\n    // It will be overridden if spacing props are provided\n    [`--Grid-rowSpacing${appendLevel(ownerState.unstable_level)}`]: getParentSpacing('row')\n  } : {};\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {\n    var _theme$spacing;\n\n    appendStyle(styles, {\n      [`--Grid-rowSpacing${appendLevel(ownerState.unstable_level)}`]: typeof value === 'string' ? value : (_theme$spacing = theme.spacing) == null ? void 0 : _theme$spacing.call(theme, value)\n    });\n  });\n  return styles;\n};\nexport const generateGridColumnSpacingStyles = _ref5 => {\n  let {\n    theme,\n    ownerState\n  } = _ref5;\n\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const getParentSpacing = createGetParentSpacing(ownerState);\n  const styles = isNestedContainer(ownerState) ? {\n    // Set the default spacing as its parent spacing.\n    // It will be overridden if spacing props are provided\n    [`--Grid-columnSpacing${appendLevel(ownerState.unstable_level)}`]: getParentSpacing('column')\n  } : {};\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {\n    var _theme$spacing2;\n\n    appendStyle(styles, {\n      [`--Grid-columnSpacing${appendLevel(ownerState.unstable_level)}`]: typeof value === 'string' ? value : (_theme$spacing2 = theme.spacing) == null ? void 0 : _theme$spacing2.call(theme, value)\n    });\n  });\n  return styles;\n};\nexport const generateGridDirectionStyles = _ref6 => {\n  let {\n    theme,\n    ownerState\n  } = _ref6;\n\n  if (!ownerState.container) {\n    return {};\n  }\n\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {\n    appendStyle(styles, {\n      flexDirection: value\n    });\n  });\n  return styles;\n};\nexport const generateGridStyles = _ref7 => {\n  let {\n    ownerState\n  } = _ref7;\n  const getSelfSpacing = createGetSelfSpacing(ownerState);\n  const getParentSpacing = createGetParentSpacing(ownerState);\n  return _extends({\n    minWidth: 0,\n    boxSizing: 'border-box'\n  }, ownerState.container && _extends({\n    display: 'flex',\n    flexWrap: 'wrap'\n  }, ownerState.wrap && ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  }, {\n    margin: `calc(${getSelfSpacing('row')} / -2) calc(${getSelfSpacing('column')} / -2)`\n  }, ownerState.disableEqualOverflow && {\n    margin: `calc(${getSelfSpacing('row')} * -1) 0px 0px calc(${getSelfSpacing('column')} * -1)`\n  }), (!ownerState.container || isNestedContainer(ownerState)) && _extends({\n    padding: `calc(${getParentSpacing('row')} / 2) calc(${getParentSpacing('column')} / 2)`\n  }, (ownerState.disableEqualOverflow || ownerState.parentDisableEqualOverflow) && {\n    padding: `${getParentSpacing('row')} 0px 0px ${getParentSpacing('column')}`\n  }));\n};\nexport const generateSizeClassNames = gridSize => {\n  const classNames = [];\n  Object.entries(gridSize).forEach(_ref8 => {\n    let [key, value] = _ref8;\n\n    if (value !== false && value !== undefined) {\n      classNames.push(`grid-${key}-${String(value)}`);\n    }\n  });\n  return classNames;\n};\nexport const generateSpacingClassNames = function (spacing) {\n  let smallestBreakpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'xs';\n\n  function isValidSpacing(val) {\n    if (val === undefined) {\n      return false;\n    }\n\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\n  }\n\n  if (isValidSpacing(spacing)) {\n    return [`spacing-${smallestBreakpoint}-${String(spacing)}`];\n  }\n\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\n    const classNames = [];\n    Object.entries(spacing).forEach(_ref9 => {\n      let [key, value] = _ref9;\n\n      if (isValidSpacing(value)) {\n        classNames.push(`spacing-${key}-${String(value)}`);\n      }\n    });\n    return classNames;\n  }\n\n  return [];\n};\nexport const generateDirectionClasses = direction => {\n  if (direction === undefined) {\n    return [];\n  }\n\n  if (typeof direction === 'object') {\n    return Object.entries(direction).map(_ref10 => {\n      let [key, value] = _ref10;\n      return `direction-${key}-${value}`;\n    });\n  }\n\n  return [`direction-xs-${String(direction)}`];\n};","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/system/esm/Unstable_Grid/gridGenerator.js"],"names":["_extends","traverseBreakpoints","appendLevel","level","isNestedContainer","ownerState","unstable_level","container","createGetSelfSpacing","getSelfSpacing","axis","createGetParentSpacing","getParentSpacing","getParentColumns","generateGridSizeStyles","theme","styles","breakpoints","gridSize","appendStyle","value","style","flexBasis","flexGrow","maxWidth","flexShrink","width","generateGridOffsetStyles","gridOffset","marginLeft","generateGridColumnsStyles","columns","generateGridRowSpacingStyles","rowSpacing","_theme$spacing","spacing","call","generateGridColumnSpacingStyles","columnSpacing","_theme$spacing2","generateGridDirectionStyles","direction","flexDirection","generateGridStyles","minWidth","boxSizing","display","flexWrap","wrap","margin","disableEqualOverflow","padding","parentDisableEqualOverflow","generateSizeClassNames","classNames","Object","entries","forEach","key","undefined","push","String","generateSpacingClassNames","smallestBreakpoint","isValidSpacing","val","Number","isNaN","Array","isArray","generateDirectionClasses","map"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { traverseBreakpoints } from './traverseBreakpoints';\r\nfunction appendLevel(level) {\r\n  if (!level) {\r\n    return '';\r\n  }\r\n  return `Level${level}`;\r\n}\r\nfunction isNestedContainer(ownerState) {\r\n  return ownerState.unstable_level > 0 && ownerState.container;\r\n}\r\nfunction createGetSelfSpacing(ownerState) {\r\n  return function getSelfSpacing(axis) {\r\n    return `var(--Grid-${axis}Spacing${appendLevel(ownerState.unstable_level)})`;\r\n  };\r\n}\r\nfunction createGetParentSpacing(ownerState) {\r\n  return function getParentSpacing(axis) {\r\n    if (ownerState.unstable_level === 0) {\r\n      return `var(--Grid-${axis}Spacing)`;\r\n    }\r\n    return `var(--Grid-${axis}Spacing${appendLevel(ownerState.unstable_level - 1)})`;\r\n  };\r\n}\r\nfunction getParentColumns(ownerState) {\r\n  if (ownerState.unstable_level === 0) {\r\n    return `var(--Grid-columns)`;\r\n  }\r\n  return `var(--Grid-columns${appendLevel(ownerState.unstable_level - 1)})`;\r\n}\r\nexport const generateGridSizeStyles = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  const getSelfSpacing = createGetSelfSpacing(ownerState);\r\n  const styles = {};\r\n  traverseBreakpoints(theme.breakpoints, ownerState.gridSize, (appendStyle, value) => {\r\n    let style = {};\r\n    if (value === true) {\r\n      style = {\r\n        flexBasis: 0,\r\n        flexGrow: 1,\r\n        maxWidth: '100%'\r\n      };\r\n    }\r\n    if (value === 'auto') {\r\n      style = {\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        maxWidth: 'none',\r\n        width: 'auto'\r\n      };\r\n    }\r\n    if (typeof value === 'number') {\r\n      style = {\r\n        flexGrow: 0,\r\n        flexBasis: 'auto',\r\n        width: `calc(100% * ${value} / ${getParentColumns(ownerState)}${isNestedContainer(ownerState) ? ` + ${getSelfSpacing('column')}` : ''})`\r\n      };\r\n    }\r\n    appendStyle(styles, style);\r\n  });\r\n  return styles;\r\n};\r\nexport const generateGridOffsetStyles = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  const styles = {};\r\n  traverseBreakpoints(theme.breakpoints, ownerState.gridOffset, (appendStyle, value) => {\r\n    let style = {};\r\n    if (value === 'auto') {\r\n      style = {\r\n        marginLeft: 'auto'\r\n      };\r\n    }\r\n    if (typeof value === 'number') {\r\n      style = {\r\n        marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / ${getParentColumns(ownerState)})`\r\n      };\r\n    }\r\n    appendStyle(styles, style);\r\n  });\r\n  return styles;\r\n};\r\nexport const generateGridColumnsStyles = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  if (!ownerState.container) {\r\n    return {};\r\n  }\r\n  const styles = isNestedContainer(ownerState) ? {\r\n    [`--Grid-columns${appendLevel(ownerState.unstable_level)}`]: getParentColumns(ownerState)\r\n  } : {\r\n    '--Grid-columns': 12\r\n  };\r\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {\r\n    appendStyle(styles, {\r\n      [`--Grid-columns${appendLevel(ownerState.unstable_level)}`]: value\r\n    });\r\n  });\r\n  return styles;\r\n};\r\nexport const generateGridRowSpacingStyles = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  if (!ownerState.container) {\r\n    return {};\r\n  }\r\n  const getParentSpacing = createGetParentSpacing(ownerState);\r\n  const styles = isNestedContainer(ownerState) ? {\r\n    // Set the default spacing as its parent spacing.\r\n    // It will be overridden if spacing props are provided\r\n    [`--Grid-rowSpacing${appendLevel(ownerState.unstable_level)}`]: getParentSpacing('row')\r\n  } : {};\r\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {\r\n    var _theme$spacing;\r\n    appendStyle(styles, {\r\n      [`--Grid-rowSpacing${appendLevel(ownerState.unstable_level)}`]: typeof value === 'string' ? value : (_theme$spacing = theme.spacing) == null ? void 0 : _theme$spacing.call(theme, value)\r\n    });\r\n  });\r\n  return styles;\r\n};\r\nexport const generateGridColumnSpacingStyles = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  if (!ownerState.container) {\r\n    return {};\r\n  }\r\n  const getParentSpacing = createGetParentSpacing(ownerState);\r\n  const styles = isNestedContainer(ownerState) ? {\r\n    // Set the default spacing as its parent spacing.\r\n    // It will be overridden if spacing props are provided\r\n    [`--Grid-columnSpacing${appendLevel(ownerState.unstable_level)}`]: getParentSpacing('column')\r\n  } : {};\r\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {\r\n    var _theme$spacing2;\r\n    appendStyle(styles, {\r\n      [`--Grid-columnSpacing${appendLevel(ownerState.unstable_level)}`]: typeof value === 'string' ? value : (_theme$spacing2 = theme.spacing) == null ? void 0 : _theme$spacing2.call(theme, value)\r\n    });\r\n  });\r\n  return styles;\r\n};\r\nexport const generateGridDirectionStyles = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  if (!ownerState.container) {\r\n    return {};\r\n  }\r\n  const styles = {};\r\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {\r\n    appendStyle(styles, {\r\n      flexDirection: value\r\n    });\r\n  });\r\n  return styles;\r\n};\r\nexport const generateGridStyles = ({\r\n  ownerState\r\n}) => {\r\n  const getSelfSpacing = createGetSelfSpacing(ownerState);\r\n  const getParentSpacing = createGetParentSpacing(ownerState);\r\n  return _extends({\r\n    minWidth: 0,\r\n    boxSizing: 'border-box'\r\n  }, ownerState.container && _extends({\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  }, ownerState.wrap && ownerState.wrap !== 'wrap' && {\r\n    flexWrap: ownerState.wrap\r\n  }, {\r\n    margin: `calc(${getSelfSpacing('row')} / -2) calc(${getSelfSpacing('column')} / -2)`\r\n  }, ownerState.disableEqualOverflow && {\r\n    margin: `calc(${getSelfSpacing('row')} * -1) 0px 0px calc(${getSelfSpacing('column')} * -1)`\r\n  }), (!ownerState.container || isNestedContainer(ownerState)) && _extends({\r\n    padding: `calc(${getParentSpacing('row')} / 2) calc(${getParentSpacing('column')} / 2)`\r\n  }, (ownerState.disableEqualOverflow || ownerState.parentDisableEqualOverflow) && {\r\n    padding: `${getParentSpacing('row')} 0px 0px ${getParentSpacing('column')}`\r\n  }));\r\n};\r\nexport const generateSizeClassNames = gridSize => {\r\n  const classNames = [];\r\n  Object.entries(gridSize).forEach(([key, value]) => {\r\n    if (value !== false && value !== undefined) {\r\n      classNames.push(`grid-${key}-${String(value)}`);\r\n    }\r\n  });\r\n  return classNames;\r\n};\r\nexport const generateSpacingClassNames = (spacing, smallestBreakpoint = 'xs') => {\r\n  function isValidSpacing(val) {\r\n    if (val === undefined) {\r\n      return false;\r\n    }\r\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\r\n  }\r\n  if (isValidSpacing(spacing)) {\r\n    return [`spacing-${smallestBreakpoint}-${String(spacing)}`];\r\n  }\r\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\r\n    const classNames = [];\r\n    Object.entries(spacing).forEach(([key, value]) => {\r\n      if (isValidSpacing(value)) {\r\n        classNames.push(`spacing-${key}-${String(value)}`);\r\n      }\r\n    });\r\n    return classNames;\r\n  }\r\n  return [];\r\n};\r\nexport const generateDirectionClasses = direction => {\r\n  if (direction === undefined) {\r\n    return [];\r\n  }\r\n  if (typeof direction === 'object') {\r\n    return Object.entries(direction).map(([key, value]) => `direction-${key}-${value}`);\r\n  }\r\n  return [`direction-xs-${String(direction)}`];\r\n};"]},"metadata":{},"sourceType":"module"}