{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/AddVideo.jsx\",\n    _s = $RefreshSig$();\n\n// AddVideo.js\n// AddVideo.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddVideo(_ref) {\n  _s();\n\n  let {\n    onAddVideo,\n    onSelectVideo\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (title.trim() === \"\" || url.trim() === \"\") {\n      alert(\"Please provide both a title and a URL.\");\n      return;\n    }\n\n    if (!isValidYouTubeUrl(url)) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      title,\n      url,\n      rating: 0\n    };\n    onAddVideo(newVideo);\n    onSelectVideo(newVideo);\n    setTitle(\"\");\n    setUrl(\"\");\n  };\n\n  const isValidYouTubeUrl = url => {\n    // Use decodeURIComponent to handle special characters in query parameters\n    try {\n      const decodedUrl = decodeURIComponent(url);\n      return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[A-Za-z0-9_-]+/.test(decodedUrl);\n    } catch (error) {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddVideo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a YouTube Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url\",\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVideo, \"2XkSbuFLNK1LOX3PsOenYC/bPt8=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/AddVideo.jsx"],"names":["React","useState","AddVideo","onAddVideo","onSelectVideo","title","setTitle","url","setUrl","handleSubmit","e","preventDefault","trim","alert","isValidYouTubeUrl","newVideo","id","Date","now","rating","decodedUrl","decodeURIComponent","test","error","target","value"],"mappings":";;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAAiD;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA+B;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIN,KAAK,CAACO,IAAN,OAAiB,EAAjB,IAAuBL,GAAG,CAACK,IAAJ,OAAe,EAA1C,EAA8C;AAC5CC,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACA;AACD;;AAED,QAAI,CAACC,iBAAiB,CAACP,GAAD,CAAtB,EAA6B;AAC3BM,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AACD;;AAED,UAAME,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADW;AAEfb,MAAAA,KAFe;AAGfE,MAAAA,GAHe;AAIfY,MAAAA,MAAM,EAAE;AAJO,KAAjB;AAOAhB,IAAAA,UAAU,CAACY,QAAD,CAAV;AACAX,IAAAA,aAAa,CAACW,QAAD,CAAb;AACAT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAxBD;;AA0BA,QAAMM,iBAAiB,GAAIP,GAAD,IAAS;AACjC;AACA,QAAI;AACF,YAAMa,UAAU,GAAGC,kBAAkB,CAACd,GAAD,CAArC;AACA,aAAO,4DAA4De,IAA5D,CACLF,UADK,CAAP;AAGD,KALD,CAKE,OAAOG,KAAP,EAAc;AACd,aAAO,KAAP;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEd,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAEJ,KAHT;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,KAFL;AAGE,UAAA,KAAK,EAAElB,GAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,MAAM,CAACE,CAAC,CAACc,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GApEQvB,Q;;KAAAA,Q;AAsET,eAAeA,QAAf","sourcesContent":["// AddVideo.js\n// AddVideo.js\nimport React, { useState } from \"react\";\n\nfunction AddVideo({ onAddVideo, onSelectVideo }) {\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (title.trim() === \"\" || url.trim() === \"\") {\n      alert(\"Please provide both a title and a URL.\");\n      return;\n    }\n\n    if (!isValidYouTubeUrl(url)) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      title,\n      url,\n      rating: 0,\n    };\n\n    onAddVideo(newVideo);\n    onSelectVideo(newVideo);\n    setTitle(\"\");\n    setUrl(\"\");\n  };\n\n  const isValidYouTubeUrl = (url) => {\n    // Use decodeURIComponent to handle special characters in query parameters\n    try {\n      const decodedUrl = decodeURIComponent(url);\n      return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[A-Za-z0-9_-]+/.test(\n        decodedUrl\n      );\n    } catch (error) {\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"AddVideo\">\n      <h2>Add a YouTube Video</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"url\">URL:</label>\n          <input\n            type=\"text\"\n            id=\"url\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Add Video</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddVideo;\n"]},"metadata":{},"sourceType":"module"}