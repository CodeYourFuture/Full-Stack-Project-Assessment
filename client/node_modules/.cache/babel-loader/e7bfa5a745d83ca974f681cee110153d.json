{"ast":null,"code":"var _jsxFileName = \"/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoItem = _ref => {\n  _s();\n\n  let {\n    video,\n    onDelete\n  } = _ref;\n  // const [videos, setVideos] = useState([]);\n  const [rating, setRating] = useState(video.rating); // const handleUpVote = (videoToUpdate) => {\n  // Update the vote count for the video\n  //   const updatedVideosUpVote = videos.map((video) =>\n  //     video.id === videoToUpdate.id\n  //       ? { ...video, votes: video.votes + 1 }\n  //       : video\n  //   );\n  //   setVideos(updatedVideosUpVote);\n  // };\n\n  const incRating = () => {\n    setRating(rating + 1);\n  }; // Update the vote count for the video\n  // const handleDownVote = (videoToUpdate) => {\n  //   const updatedVideosDownVote = videos.map((video) =>\n  //     video.id === videoToUpdate.id\n  //       ? { ...video, votes: Math.max(video.votes - 1, 0) }\n  //       : video\n  //   );\n  //   setVideos(updatedVideosDownVote);\n  // };\n\n\n  const decRating = () => {\n    if (rating < video.rating) {\n      setRating(rating - 1);\n    } else {\n      setRating(rating);\n    }\n  };\n\n  const videoId = video.url.split('v=')[1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videoId}`,\n      title: \"YouTube video player\" // frameborder=\"0\" \n      ,\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" // allowfullscreen\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes: \", video.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: incRating,\n      type: \"button\",\n      style: {\n        fontSize: '24px'\n      },\n      className: \"fa fa-thumbs-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decRating,\n      type: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n      style: {\n        fontSize: '24px'\n      },\n      className: \"fa fa-thumbs-down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(video.id),\n      type: \"button\",\n      className: \"btn btn-danger\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}; //}\n\n\n_s(VideoItem, \"f3jip8S1KSIla2q/dUmG55SMBOk=\");\n\n_c = VideoItem;\nexport default VideoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoItem\");","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx"],"names":["React","useState","VideoItem","video","onDelete","rating","setRating","incRating","decRating","videoId","url","split","title","fontSize","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACzC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACE,KAAK,CAACE,MAAP,CAApC,CAFyC,CAIzC;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAME,SAAS,GAAG,MAAM;AACtBD,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,GAFD,CAfyC,CAmBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMG,SAAS,GAAG,MAAM;AACtB,QAAIH,MAAM,GAAGF,KAAK,CAACE,MAAnB,EAA2B;AACzBC,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,KAFD,MAEM;AACJC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AAEF,GAPD;;AASA,QAAMI,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AACA,MAAA,KAAK,EAAC,KADN;AAEA,MAAA,MAAM,EAAC,KAFP;AAGA,MAAA,GAAG,EAAG,iCAAgCF,OAAQ,EAH9C;AAIA,MAAA,KAAK,EAAC,sBAJN,CAKA;AALA;AAMA,MAAA,KAAK,EAAC,0FANN,CAOA;;AAPA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,gBAAKN,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,4BAAWT,KAAK,CAACE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAG,MAAA,OAAO,EAAEE,SAAZ;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAqC,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAA5C;AAAmE,MAAA,SAAS,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,YAfF,eAiBE;AAAQ,MAAA,OAAO,EAAEL,SAAjB;AAA4B,MAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAjBF,oBAiBsD;AAAG,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAiC,MAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAjBtD,eAmBE;AACA,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAACD,KAAK,CAACW,EAAP,CADvB;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,SAAS,EAAC,gBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArED,C,CAsEA;;;GAtEMZ,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst VideoItem = ({ video, onDelete }) => {\n  // const [videos, setVideos] = useState([]);\n  const [rating, setRating] = useState(video.rating);\n\n  // const handleUpVote = (videoToUpdate) => {\n\n    // Update the vote count for the video\n  //   const updatedVideosUpVote = videos.map((video) =>\n  //     video.id === videoToUpdate.id\n  //       ? { ...video, votes: video.votes + 1 }\n  //       : video\n  //   );\n  //   setVideos(updatedVideosUpVote);\n  // };\n\n  const incRating = () => {\n    setRating(rating + 1);\n  }\n\n  // Update the vote count for the video\n  // const handleDownVote = (videoToUpdate) => {\n  //   const updatedVideosDownVote = videos.map((video) =>\n  //     video.id === videoToUpdate.id\n  //       ? { ...video, votes: Math.max(video.votes - 1, 0) }\n  //       : video\n  //   );\n  //   setVideos(updatedVideosDownVote);\n  // };\n\n  const decRating = () => {\n    if (rating < video.rating ){\n      setRating(rating - 1);\n    } else{\n      setRating(rating)\n    }\n    \n  }\n\n  const videoId = video.url.split('v=')[1];\n  \n  return (\n    <div className=\"video-item\">  \n      <iframe \n      width=\"560\" \n      height=\"315\" \n      src={`https://www.youtube.com/embed/${videoId}`} \n      title=\"YouTube video player\" \n      // frameborder=\"0\" \n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n      // allowfullscreen\n      >\n      </iframe>\n      <h5>{video.title}</h5>\n      <p>Votes: {video.rating}</p>\n\n      {/* <i onClick={() => handleUpVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i> */}\n      <i onClick={incRating} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i>\n      {/* <i onClick={() => handleDownVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i> */}\n      <button onClick={decRating} type='button'></button> <i style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i>\n      \n      <button\n      onClick={() => onDelete(video.id)}\n      type='button'\n      className='btn btn-danger'\n      >\n        Delete\n      </button>\n    </div>\n  ); \n}\n//}\n\n\nexport default VideoItem;\n"]},"metadata":{},"sourceType":"module"}