{"ast":null,"code":"import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1); // TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\n\n\nexport default function createWithBsPrefix(prefix) {\n  let {\n    displayName = pascalCase(prefix),\n    Component,\n    defaultProps\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const BsComponent = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n    let {\n      className,\n      bsPrefix,\n      as: Tag = Component || 'div',\n      ...props\n    } = _ref;\n    const componentProps = { ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"names":["classNames","camelize","React","useBootstrapPrefix","jsx","_jsx","pascalCase","str","toUpperCase","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","forwardRef","ref","className","bsPrefix","as","Tag","props","componentProps","resolvedPrefix"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,MAAMC,UAAU,GAAGC,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAH,CAAOC,WAAP,KAAuBP,QAAQ,CAACM,GAAD,CAAR,CAAcE,KAAd,CAAoB,CAApB,CAAjD,C,CACA;;;AACA,eAAe,SAASC,kBAAT,CAA4BC,MAA5B,EAIP;AAAA,MAJ2C;AACjDC,IAAAA,WAAW,GAAGN,UAAU,CAACK,MAAD,CADyB;AAEjDE,IAAAA,SAFiD;AAGjDC,IAAAA;AAHiD,GAI3C,uEAAJ,EAAI;AACN,QAAMC,WAAW,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,OAK/CC,GAL+C,KAKvC;AAAA,QALwC;AACjDC,MAAAA,SADiD;AAEjDC,MAAAA,QAFiD;AAGjDC,MAAAA,EAAE,EAAEC,GAAG,GAAGR,SAAS,IAAI,KAH0B;AAIjD,SAAGS;AAJ8C,KAKxC;AACT,UAAMC,cAAc,GAAG,EACrB,GAAGT,YADkB;AAErB,SAAGQ;AAFkB,KAAvB;AAIA,UAAME,cAAc,GAAGrB,kBAAkB,CAACgB,QAAD,EAAWR,MAAX,CAAzC;AACA,WAAO,aAAaN,IAAI,CAACgB,GAAD,EAAM;AAC5BJ,MAAAA,GAAG,EAAEA,GADuB;AAE5BC,MAAAA,SAAS,EAAElB,UAAU,CAACkB,SAAD,EAAYM,cAAZ,CAFO;AAG5B,SAAGD;AAHyB,KAAN,CAAxB;AAKD,GAhBgC,CAAjC;AAiBAR,EAAAA,WAAW,CAACH,WAAZ,GAA0BA,WAA1B;AACA,SAAOG,WAAP;AACD","sourcesContent":["import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"]},"metadata":{},"sourceType":"module"}