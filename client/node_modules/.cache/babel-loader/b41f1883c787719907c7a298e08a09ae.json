{"ast":null,"code":"var _jsxFileName = \"/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/SearchVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchVideo = _ref => {\n  _s();\n\n  let {\n    onSearch\n  } = _ref;\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  // const handleSearch = () => {\n  //   onSearch(searchTerm);\n  // };\n  // const handleInputChange = (event) => {\n  //   setSearchTerm(event.target.value);\n  // };\n  // const handleKeyPress = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     handleSearch();\n  //   }\n  // };\n  const [videos, setVideos] = useState([]);\n  const [filteredVideos, setFilteredVideos] = useState([]);\n  const [videoList, setVideoList] = useState([]);\n  const [sortedVideoList, setSortedVideoList] = useState([]); // const [ascending, setAscending] =useState(false)\n\n  const [isDesc, setIsDesc] = useState(true);\n\n  const searchVideos = searchTerm => {\n    const filtered = videos.filter(video => video.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredVideos(filtered);\n  };\n\n  const removeVideo = videoId => {\n    const updatedVideoList = videoList.filter(video => video.id !== videoId);\n    setVideos(updatedVideoList);\n    setSortedVideoList([...updatedVideoList].sort((a, b) => b.rating - a.rating));\n  };\n\n  async function fetchData() {\n    try {\n      const url = \"http://localhost:5000/videos\";\n      const fetchURL = `${url}`; // `http://localhost:5000/videos`;\n\n      const response = await fetch(fetchURL);\n\n      if (response.ok) {\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setVideos(data.videos);\n        const sortedList = [...data.videos].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"useEffect\");\n  }, [isDesc]);\n\n  const addVideo = newVideo => {\n    const time = moment().format(\"YYYY-MM-DD HH:mm\");\n    const addnewVideo = [...videos, { ...newVideo,\n      rating: 0,\n      time\n    }];\n    console.log(addnewVideo);\n    setVideos(addnewVideo);\n    setSortedVideoList([...addnewVideo].sort((a, b) => b.rating - a.rating));\n  };\n\n  const displayedVideos = filteredVideos.length > 0 ? filteredVideos : videos;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search videos\",\n      variant: \"outlined\",\n      value: searchTerm,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}; // function SearchVideo({ videos, searchTerm }) {\n//   const [searchTerm, setSearchterm] = useState(\"\");\n//   const [searchedVideos, setSearchedVideos] = useState([]);\n//   const handleSearch = (e) => {\n//     setSearchterm(e.target.value);\n//     setSearchedVideos(videos, searchTerm);\n//   };\n//   const searchVideos = ({videos,}) => {\n//     return videos.filtered((video) => {\n//       return video.title.toLowerCase().includes(videos.toLowerCase());\n//     });\n//   };\n//   return (\n//     <div className=\"Search videos\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search for videos...\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <ul>\n//         {searchedVideos.map((video) => (\n//           <li key={video.id}>{video.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n\n_s(SearchVideo, \"qpqx+/22g3w00S0T0fRulB/rFuo=\");\n\n_c = SearchVideo;\nexport default SearchVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchVideo\");","map":{"version":3,"sources":["/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/SearchVideo.jsx"],"names":["React","useState","SearchVideo","onSearch","videos","setVideos","filteredVideos","setFilteredVideos","videoList","setVideoList","sortedVideoList","setSortedVideoList","isDesc","setIsDesc","searchVideos","searchTerm","filtered","filter","video","title","toLowerCase","includes","removeVideo","videoId","updatedVideoList","id","sort","a","b","rating","fetchData","url","fetchURL","response","fetch","ok","console","log","data","json","sortedList","error","useEffect","addVideo","newVideo","time","moment","format","addnewVideo","displayedVideos","length","handleInputChange","handleKeyPress","handleSearch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n\nconst SearchVideo = ({onSearch}) => {\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // const handleSearch = () => {\n  //   onSearch(searchTerm);\n  // };\n\n  // const handleInputChange = (event) => {\n  //   setSearchTerm(event.target.value);\n  // };\n\n  // const handleKeyPress = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     handleSearch();\n  //   }\n  // };\nconst [videos, setVideos] = useState([]);\n   const [filteredVideos, setFilteredVideos] = useState([]);\n   const [videoList, setVideoList] = useState([]);\n   const [sortedVideoList, setSortedVideoList] = useState([]);\n  // const [ascending, setAscending] =useState(false)\n  \n\n   const [isDesc, setIsDesc] = useState(true);\n   const searchVideos = (searchTerm) => {\n     const filtered = videos.filter((video) =>\n       video.title.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n     setFilteredVideos(filtered);\n   };\n    const removeVideo = (videoId) => {\n      const updatedVideoList = videoList.filter(\n        (video) => video.id !== videoId\n      );\n      setVideos(updatedVideoList);\n      setSortedVideoList(\n        [...updatedVideoList].sort((a, b) => b.rating - a.rating)\n      );\n    };\n  \n   \n  async function fetchData() {\n    try {\n      const url = \"http://localhost:5000/videos\";\n      const fetchURL = `${url}`;\n      // `http://localhost:5000/videos`;\n      const response = await fetch(fetchURL );\n      if(response.ok){\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setVideos(data.videos);\n        const sortedList = [...(data.videos)].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      }\n    } catch (error) {\n      \n      console.log(error);\n    }\n  }\n   \n\n  useEffect(() => {\n    fetchData();\n    console.log(\"useEffect\");\n  }, [isDesc]);\n\n  const addVideo = (newVideo) => {\n    const time = moment().format(\"YYYY-MM-DD HH:mm\");\n    const addnewVideo = [...videos, { ...newVideo, rating: 0, time }];\n    console.log(addnewVideo);\n    setVideos(addnewVideo);\n    setSortedVideoList([...addnewVideo].sort((a, b) => b.rating - a.rating));\n  };\n     const displayedVideos =\n       filteredVideos.length > 0 ? filteredVideos : videos;\n  return (\n    <div className=\"search-container\">\n      <input\n        placeholder=\"Search videos\"\n        variant=\"outlined\"\n        value={searchTerm}\n        onChange={handleInputChange}\n        onKeyPress={handleKeyPress}\n      />\n      <button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n        Search\n      </button>\n    </div>\n  );\n};\n\n\n// function SearchVideo({ videos, searchTerm }) {\n//   const [searchTerm, setSearchterm] = useState(\"\");\n//   const [searchedVideos, setSearchedVideos] = useState([]);\n\n//   const handleSearch = (e) => {\n//     setSearchterm(e.target.value);\n//     setSearchedVideos(videos, searchTerm);\n//   };\n\n//   const searchVideos = ({videos,}) => {\n//     return videos.filtered((video) => {\n//       return video.title.toLowerCase().includes(videos.toLowerCase());\n//     });\n//   };\n//   return (\n//     <div className=\"Search videos\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search for videos...\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <ul>\n//         {searchedVideos.map((video) => (\n//           <li key={video.id}>{video.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\nexport default SearchVideo;\n"]},"metadata":{},"sourceType":"module"}