{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Portal } from '../Portal';\nimport { unstable_useModal as useModal } from '../unstable_useModal';\nimport { FocusTrap } from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var open = ownerState.open,\n      exited = ownerState.exited;\n  var slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\n * *   [Menu](https://mui.com/material-ui/api/menu/)\n * *   [Popover](https://mui.com/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/)\n *\n * API:\n *\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\n */\n\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _slots$root;\n\n  var children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      onBackdropClick = props.onBackdropClick,\n      open = props.open,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var propsWithDefaults = _extends({}, props, {\n    closeAfterTransition: closeAfterTransition,\n    disableAutoFocus: disableAutoFocus,\n    disableEnforceFocus: disableEnforceFocus,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    disablePortal: disablePortal,\n    disableRestoreFocus: disableRestoreFocus,\n    disableScrollLock: disableScrollLock,\n    hideBackdrop: hideBackdrop,\n    keepMounted: keepMounted\n  });\n\n  var _useModal = useModal(_extends({}, propsWithDefaults, {\n    rootRef: forwardedRef\n  })),\n      getRootProps = _useModal.getRootProps,\n      getBackdropProps = _useModal.getBackdropProps,\n      getTransitionProps = _useModal.getTransitionProps,\n      portalRef = _useModal.portalRef,\n      isTopModal = _useModal.isTopModal,\n      exited = _useModal.exited,\n      hasTransition = _useModal.hasTransition;\n\n  var ownerState = _extends({}, propsWithDefaults, {\n    exited: exited,\n    hasTransition: hasTransition\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    var _getTransitionProps = getTransitionProps(),\n        onEnter = _getTransitionProps.onEnter,\n        onExited = _getTransitionProps.onExited;\n\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n\n  var Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    getSlotProps: getRootProps,\n    className: classes.root,\n    ownerState: ownerState\n  });\n  var BackdropComponent = slots.backdrop;\n  var backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    getSlotProps: function getSlotProps(otherHandlers) {\n      return getBackdropProps(_extends({}, otherHandlers, {\n        onClick: function onClick(e) {\n          if (onBackdropClick) {\n            onBackdropClick(e);\n          }\n\n          if (otherHandlers != null && otherHandlers.onClick) {\n            otherHandlers.onClick(e);\n          }\n        }\n      }));\n    },\n    className: classes.backdrop,\n    ownerState: ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Modal };","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/Modal/Modal.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","useSlotProps","useClassNamesOverride","unstable_composeClasses","composeClasses","Portal","unstable_useModal","useModal","FocusTrap","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","slots","root","backdrop","Modal","forwardRef","props","forwardedRef","_slots$root","children","closeAfterTransition","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","slotProps","other","propsWithDefaults","rootRef","getRootProps","getBackdropProps","getTransitionProps","portalRef","isTopModal","hasTransition","classes","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","getSlotProps","className","BackdropComponent","backdropProps","otherHandlers","onClick","e","ref","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","bool","oneOfType","func","onClose","onTransitionEnter","onTransitionExited","shape","object"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Portal } from '../Portal';\nimport { unstable_useModal as useModal } from '../unstable_useModal';\nimport { FocusTrap } from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\n * *   [Menu](https://mui.com/material-ui/api/menu/)\n * *   [Popover](https://mui.com/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/)\n *\n * API:\n *\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      closeAfterTransition = false,\n      container,\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      onBackdropClick,\n      open,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const propsWithDefaults = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  });\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal(_extends({}, propsWithDefaults, {\n    rootRef: forwardedRef\n  }));\n  const ownerState = _extends({}, propsWithDefaults, {\n    exited,\n    hasTransition\n  });\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    getSlotProps: getRootProps,\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps(_extends({}, otherHandlers, {\n        onClick: e => {\n          if (onBackdropClick) {\n            onBackdropClick(e);\n          }\n          if (otherHandlers != null && otherHandlers.onClick) {\n            otherHandlers.onClick(e);\n          }\n        }\n      }));\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Modal };"]},"metadata":{},"sourceType":"module"}