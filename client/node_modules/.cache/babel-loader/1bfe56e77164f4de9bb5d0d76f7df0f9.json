{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/Row.js"],"names":["classNames","React","useBootstrapPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","jsx","_jsx","Row","forwardRef","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","breakpoints","minBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,EAAsDC,yBAAtD,QAAuF,iBAAvF;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,GAAG,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,OAMvCC,GANuC,KAM/B;AAAA,MANgC;AACzCC,IAAAA,QADyC;AAEzCC,IAAAA,SAFyC;AAGzC;AACAC,IAAAA,EAAE,EAAEC,SAAS,GAAG,KAJyB;AAKzC,OAAGC;AALsC,GAMhC;AACT,QAAMC,iBAAiB,GAAGb,kBAAkB,CAACQ,QAAD,EAAW,KAAX,CAA5C;AACA,QAAMM,WAAW,GAAGb,uBAAuB,EAA3C;AACA,QAAMc,aAAa,GAAGb,yBAAyB,EAA/C;AACA,QAAMc,UAAU,GAAI,GAAEH,iBAAkB,OAAxC;AACA,QAAMI,OAAO,GAAG,EAAhB;AACAH,EAAAA,WAAW,CAACI,OAAZ,CAAoBC,QAAQ,IAAI;AAC9B,UAAMC,SAAS,GAAGR,KAAK,CAACO,QAAD,CAAvB;AACA,WAAOP,KAAK,CAACO,QAAD,CAAZ;AACA,QAAIE,IAAJ;;AACA,QAAID,SAAS,IAAI,IAAb,IAAqB,OAAOA,SAAP,KAAqB,QAA9C,EAAwD;AACtD,OAAC;AACCC,QAAAA;AADD,UAEGD,SAFJ;AAGD,KAJD,MAIO;AACLC,MAAAA,IAAI,GAAGD,SAAP;AACD;;AACD,UAAME,KAAK,GAAGH,QAAQ,KAAKJ,aAAb,GAA8B,IAAGI,QAAS,EAA1C,GAA8C,EAA5D;AACA,QAAIE,IAAI,IAAI,IAAZ,EAAkBJ,OAAO,CAACM,IAAR,CAAc,GAAEP,UAAW,GAAEM,KAAM,IAAGD,IAAK,EAA3C;AACnB,GAbD;AAcA,SAAO,aAAajB,IAAI,CAACO,SAAD,EAAY;AAClCJ,IAAAA,GAAG,EAAEA,GAD6B;AAElC,OAAGK,KAF+B;AAGlCH,IAAAA,SAAS,EAAEX,UAAU,CAACW,SAAD,EAAYI,iBAAZ,EAA+B,GAAGI,OAAlC;AAHa,GAAZ,CAAxB;AAKD,CA/BwB,CAAzB;AAgCAZ,GAAG,CAACmB,WAAJ,GAAkB,KAAlB;AACA,eAAenB,GAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"]},"metadata":{},"sourceType":"module"}