{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport exampleresponse from \"../exampleresponse.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Video(prop) {\n  _s();\n\n  const videoId = getVideoIdFromUrl(prop.videoObj.url);\n  const [vid, setVid] = useState(exampleresponse);\n\n  const voteIncrease = () => {\n    setVote(prev => prev + 1);\n  };\n\n  const voteDecrease = () => {\n    setVote(prev => prev > 0 ? prev - 1 : 0);\n  }; // const updateVoteCount = (videoId, value) => {\n  //   setVid((prevVid) =>\n  //     prevVid.map((video) => (video.id === videoId ? { ...video, votes: (video.votes || 0) + value } : video))\n  //   );\n  // };\n\n\n  const newVideoAdd = newInput => {\n    const newId = vid.length + 1;\n    newInput.id = newId;\n    newInput.votes = 0;\n    setVid([...vid, newInput]);\n  };\n\n  const deleteVideo = videoId => {\n    const videoDeleted = vid.filter(el => el.id !== videoId);\n    setVid(videoDeleted);\n  };\n\n  let date = new Date().toDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${videoId}`,\n      frameborder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      title: \"YouTube video player\",\n      allowfullscreen: true,\n      height: '300px'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: prop.videoObj.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Requasted At: \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: voteIncrease,\n          className: \"btn btn-primary\",\n          children: \" \\uD83D\\uDC4D \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [prop.videoObj.rating, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateVoteCount,\n          className: \"btn btn-warning\",\n          children: \" \\uD83D\\uDC4E \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteVideo,\n          className: \"btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash-o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"CTfgcBxVaj5EK9YHzb37NbhPblY=\");\n\n_c = Video;\nexport default Video;\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx"],"names":["React","useState","exampleresponse","Video","prop","videoId","getVideoIdFromUrl","videoObj","url","vid","setVid","voteIncrease","setVote","prev","voteDecrease","newVideoAdd","newInput","newId","length","id","votes","deleteVideo","videoDeleted","filter","el","date","Date","toDateString","title","rating","updateVoteCount","split"],"mappings":"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","sourcesContent":["\nimport React , {useState} from \"react\";\nimport exampleresponse from \"../exampleresponse.json\";\n\n\nfunction Video(prop) {\n  const videoId = getVideoIdFromUrl(prop.videoObj.url);\n  const [vid, setVid] = useState(exampleresponse);\n\n\n  const voteIncrease = () => {\n      setVote((prev) => prev + 1);\n    };\n\n    const voteDecrease = () => {\n      setVote((prev) => (prev > 0 ? prev - 1 : 0));\n    };\n\n  // const updateVoteCount = (videoId, value) => {\n  //   setVid((prevVid) =>\n  //     prevVid.map((video) => (video.id === videoId ? { ...video, votes: (video.votes || 0) + value } : video))\n  //   );\n  // };\n\n  const newVideoAdd = (newInput) => {\n    const newId = vid.length + 1;\n    newInput.id = newId;\n    newInput.votes = 0;\n    setVid([...vid, newInput]);\n  };\n\n  const deleteVideo = (videoId) => {\n    const videoDeleted = vid.filter((el) => el.id !== videoId);\n    setVid(videoDeleted);\n  };\n\n  let date = new Date().toDateString();\n\n\n\n\n\n  return (\n\n    <div className=\"card\">\n      <iframe\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        title=\"YouTube video player\"\n        allowfullscreen height={'300px'}\n      ></iframe>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{prop.videoObj.title}</h5>\n        <p className=\"card-text\">Requasted At: {date}</p>\n        <div className=\"buttons\">\n          <button onClick = {voteIncrease} className=\"btn btn-primary\"> &#128077; </button>\n          <p>{prop.videoObj.rating} </p>\n          <button onClick = {updateVoteCount} className=\"btn btn-warning\"> &#128078; </button>\n          <button onClick = {deleteVideo} className=\"btn btn-danger\">\n            <i className=\"fa fa-trash-o\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Video;\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n"]},"metadata":{},"sourceType":"module"}