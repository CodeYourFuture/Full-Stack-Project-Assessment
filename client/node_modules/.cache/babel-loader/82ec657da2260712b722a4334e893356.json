{"ast":null,"code":"import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\n\nfunction useRafInterval(fn, ms) {\n  let paused = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let handle;\n  let start = new Date().getTime();\n  const fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n\n  const pausedRef = useCommittedRef(paused);\n\n  function loop() {\n    const current = new Date().getTime();\n    const delta = current - start;\n    if (pausedRef.current) return;\n\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n\n  useEffect(() => {\n    handle = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(handle);\n  }, []);\n}\n\nexport default useRafInterval;","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/@restart/hooks/esm/useRafInterval.js"],"names":["useEffect","useCommittedRef","useRafInterval","fn","ms","paused","handle","start","Date","getTime","fnRef","pausedRef","loop","current","delta","cancelAnimationFrame","requestAnimationFrame"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,EAA5B,EAAgD;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;AAC9C,MAAIC,MAAJ;AACA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,QAAMC,KAAK,GAAGT,eAAe,CAACE,EAAD,CAA7B,CAH8C,CAI9C;AACA;;AACA,QAAMQ,SAAS,GAAGV,eAAe,CAACI,MAAD,CAAjC;;AACA,WAASO,IAAT,GAAgB;AACd,UAAMC,OAAO,GAAG,IAAIL,IAAJ,GAAWC,OAAX,EAAhB;AACA,UAAMK,KAAK,GAAGD,OAAO,GAAGN,KAAxB;AACA,QAAII,SAAS,CAACE,OAAd,EAAuB;;AACvB,QAAIC,KAAK,IAAIV,EAAT,IAAeM,KAAK,CAACG,OAAzB,EAAkC;AAChCH,MAAAA,KAAK,CAACG,OAAN;AACAN,MAAAA,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAR;AACD;;AACDM,IAAAA,oBAAoB,CAACT,MAAD,CAApB;AACAA,IAAAA,MAAM,GAAGU,qBAAqB,CAACJ,IAAD,CAA9B;AACD;;AACDZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,GAAGU,qBAAqB,CAACJ,IAAD,CAA9B;AACA,WAAO,MAAMG,oBAAoB,CAACT,MAAD,CAAjC;AACD,GAHQ,EAGN,EAHM,CAAT;AAID;;AACD,eAAeJ,cAAf","sourcesContent":["import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\nfunction useRafInterval(fn, ms, paused = false) {\n  let handle;\n  let start = new Date().getTime();\n  const fnRef = useCommittedRef(fn);\n  // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n  const pausedRef = useCommittedRef(paused);\n  function loop() {\n    const current = new Date().getTime();\n    const delta = current - start;\n    if (pausedRef.current) return;\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n  useEffect(() => {\n    handle = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(handle);\n  }, []);\n}\nexport default useRafInterval;"]},"metadata":{},"sourceType":"module"}