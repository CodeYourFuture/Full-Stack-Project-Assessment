{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTabsContext } from '../Tabs';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../utils/useCompound';\nimport { useList } from '../useList';\nimport { tabsListReducer } from './tabsListReducer';\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useTabsList API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs-list)\r\n */\n\nfunction useTabsList(parameters) {\n  var _selectedValues$;\n\n  const {\n    rootRef: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    var _subitems$get;\n\n    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    var _subitems$get$ref$cur, _subitems$get2;\n\n    if (tabValue == null) {\n      return null;\n    }\n\n    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n\n  const handleChange = React.useCallback((event, newValue) => {\n    var _newValue$;\n\n    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => {\n    var _subitems$get$disable, _subitems$get3;\n\n    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;\n  }, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    },\n    rootRef: mergedRootRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    rootRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    } // when a value changes externally, the highlighted value should be synced to it\n\n\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, getListboxRootProps(otherHandlers), {\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    });\n  };\n\n  const contextValue = React.useMemo(() => _extends({}, compoundComponentContextValue, listContextValue), [compoundComponentContextValue, listContextValue]);\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    highlightedValue,\n    isRtl,\n    orientation,\n    rootRef: mergedRootRef,\n    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null\n  };\n}\n\nexport { useTabsList };","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useTabsList/useTabsList.js"],"names":["_extends","React","useTabsContext","TabsListActionTypes","useCompoundParent","useList","tabsListReducer","useTabsList","parameters","_selectedValues$","rootRef","externalRef","direction","onSelected","orientation","value","registerTabIdLookup","selectionFollowsFocus","subitems","contextValue","compoundComponentContextValue","tabIdLookup","useCallback","tabValue","_subitems$get","get","id","subitemKeys","useMemo","Array","from","keys","getTabElement","_subitems$get$ref$cur","_subitems$get2","ref","current","isRtl","listOrientation","handleChange","event","newValue","_newValue$","controlledProps","undefined","selectedValues","isItemDisabled","item","_subitems$get$disable","_subitems$get3","disabled","listContextValue","dispatch","getRootProps","getListboxRootProps","state","highlightedValue","mergedRootRef","disabledItemsFocusable","focusManagement","getItemDomElement","items","onChange","reducerActionContext","selectionMode","stateReducer","useEffect","type","valueChange","otherHandlers","role","selectedValue"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { useTabsContext } from '../Tabs';\r\nimport { TabsListActionTypes } from './useTabsList.types';\r\nimport { useCompoundParent } from '../utils/useCompound';\r\nimport { useList } from '../useList';\r\nimport { tabsListReducer } from './tabsListReducer';\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useTabsList API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs-list)\r\n */\r\nfunction useTabsList(parameters) {\r\n  var _selectedValues$;\r\n  const {\r\n    rootRef: externalRef\r\n  } = parameters;\r\n  const {\r\n    direction = 'ltr',\r\n    onSelected,\r\n    orientation = 'horizontal',\r\n    value,\r\n    registerTabIdLookup,\r\n    selectionFollowsFocus\r\n  } = useTabsContext();\r\n  const {\r\n    subitems,\r\n    contextValue: compoundComponentContextValue\r\n  } = useCompoundParent();\r\n  const tabIdLookup = React.useCallback(tabValue => {\r\n    var _subitems$get;\r\n    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;\r\n  }, [subitems]);\r\n  registerTabIdLookup(tabIdLookup);\r\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\r\n  const getTabElement = React.useCallback(tabValue => {\r\n    var _subitems$get$ref$cur, _subitems$get2;\r\n    if (tabValue == null) {\r\n      return null;\r\n    }\r\n    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;\r\n  }, [subitems]);\r\n  const isRtl = direction === 'rtl';\r\n  let listOrientation;\r\n  if (orientation === 'vertical') {\r\n    listOrientation = 'vertical';\r\n  } else {\r\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\r\n  }\r\n  const handleChange = React.useCallback((event, newValue) => {\r\n    var _newValue$;\r\n    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);\r\n  }, [onSelected]);\r\n  const controlledProps = React.useMemo(() => {\r\n    if (value === undefined) {\r\n      return {};\r\n    }\r\n    return value != null ? {\r\n      selectedValues: [value]\r\n    } : {\r\n      selectedValues: []\r\n    };\r\n  }, [value]);\r\n  const isItemDisabled = React.useCallback(item => {\r\n    var _subitems$get$disable, _subitems$get3;\r\n    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;\r\n  }, [subitems]);\r\n  const {\r\n    contextValue: listContextValue,\r\n    dispatch,\r\n    getRootProps: getListboxRootProps,\r\n    state: {\r\n      highlightedValue,\r\n      selectedValues\r\n    },\r\n    rootRef: mergedRootRef\r\n  } = useList({\r\n    controlledProps,\r\n    disabledItemsFocusable: !selectionFollowsFocus,\r\n    focusManagement: 'DOM',\r\n    getItemDomElement: getTabElement,\r\n    isItemDisabled,\r\n    items: subitemKeys,\r\n    rootRef: externalRef,\r\n    onChange: handleChange,\r\n    orientation: listOrientation,\r\n    reducerActionContext: React.useMemo(() => ({\r\n      selectionFollowsFocus: selectionFollowsFocus || false\r\n    }), [selectionFollowsFocus]),\r\n    selectionMode: 'single',\r\n    stateReducer: tabsListReducer\r\n  });\r\n  React.useEffect(() => {\r\n    if (value === undefined) {\r\n      return;\r\n    }\r\n\r\n    // when a value changes externally, the highlighted value should be synced to it\r\n    if (value != null) {\r\n      dispatch({\r\n        type: TabsListActionTypes.valueChange,\r\n        value\r\n      });\r\n    }\r\n  }, [dispatch, value]);\r\n  const getRootProps = (otherHandlers = {}) => {\r\n    return _extends({}, otherHandlers, getListboxRootProps(otherHandlers), {\r\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\r\n      role: 'tablist'\r\n    });\r\n  };\r\n  const contextValue = React.useMemo(() => _extends({}, compoundComponentContextValue, listContextValue), [compoundComponentContextValue, listContextValue]);\r\n  return {\r\n    contextValue,\r\n    dispatch,\r\n    getRootProps,\r\n    highlightedValue,\r\n    isRtl,\r\n    orientation,\r\n    rootRef: mergedRootRef,\r\n    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null\r\n  };\r\n}\r\nexport { useTabsList };"]},"metadata":{},"sourceType":"module"}