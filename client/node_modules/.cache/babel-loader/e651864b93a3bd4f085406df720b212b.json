{"ast":null,"code":"var elliptic = require('elliptic');\nvar BN = require('bn.js');\nmodule.exports = function createECDH(curve) {\n  return new ECDH(curve);\n};\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n};\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\nfunction ECDH(curve) {\n  this.curveType = aliases[curve];\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    };\n  }\n  this.curve = new elliptic.ec(this.curveType.name); // eslint-disable-line new-cap\n  this.keys = void 0;\n}\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair();\n  return this.getPublicKey(enc, format);\n};\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8';\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc);\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic();\n  var out = otherPub.mul(this.keys.getPrivate()).getX();\n  return formatReturnValue(out, enc, this.curveType.byteLength);\n};\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true);\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7;\n    } else {\n      key[0] = 6;\n    }\n  }\n  return formatReturnValue(key, enc);\n};\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc);\n};\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this.keys._importPublic(pub);\n  return this;\n};\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  var _priv = new BN(priv);\n  _priv = _priv.toString(16);\n  this.keys = this.curve.genKeyPair();\n  this.keys._importPrivate(_priv);\n  return this;\n};\nfunction formatReturnValue(bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray();\n  }\n  var buf = new Buffer(bn);\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length);\n    zeros.fill(0);\n    buf = Buffer.concat([zeros, buf]);\n  }\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}","map":{"version":3,"names":["elliptic","require","BN","module","exports","createECDH","curve","ECDH","aliases","secp256k1","name","byteLength","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","p224","p256","secp256r1","p192","secp192r1","p384","p521","curveType","ec","keys","prototype","generateKeys","enc","format","genKeyPair","getPublicKey","computeSecret","other","inenc","Buffer","isBuffer","otherPub","keyFromPublic","getPublic","out","mul","getPrivate","getX","formatReturnValue","key","length","getPrivateKey","setPublicKey","pub","_importPublic","setPrivateKey","priv","_priv","toString","_importPrivate","bn","len","Array","isArray","toArray","buf","zeros","fill","concat"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/create-ecdh/browser.js"],"sourcesContent":["var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}