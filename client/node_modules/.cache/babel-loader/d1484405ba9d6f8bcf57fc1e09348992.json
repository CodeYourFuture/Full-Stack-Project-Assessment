{"ast":null,"code":"var _jsxFileName = \"/Users/tairatodumosu/Documents/GitHub/HTML-CSS-Coursework-Week1/Full-Stack-Project-Assessment/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\n// import Input from \"./input\";\n// import VideoPage from \"./VideoPage\";\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <Input label = \"add video\"/>\n//       <Input label = \"add url\"/>\n//       <VideoPage />\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [jsonData, setJsonData] = useState([]);\n  useEffect(() => {\n    // Simulate fetching JSON data\n    fetch('exampleresponse.json').then(response => response.json()).then(data => setJsonData(data)).catch(error => console.error('Error:', error));\n  }, []);\n\n  const addNewObject = () => {\n    const newObject = {\n      \"id\": 999999,\n      \"title\": \"La carrière TUMULTUEUSE de Marco Verratti au PSG\",\n      \"url\": \"https://youtu.be/RgIH-wcxqic\",\n      \"rating\": 42\n    }; // Clone the existing JSON data and add the new object\n\n    const updatedData = [...jsonData, newObject]; // Update the state with the new data\n\n    setJsonData(updatedData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewObject,\n        children: \"Add New Object\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  };\n}\n\n_s(App, \"KDfCZXTEup/DB2Nj2a0XgZqHKYI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tairatodumosu/Documents/GitHub/HTML-CSS-Coursework-Week1/Full-Stack-Project-Assessment/client/src/App.jsx"],"names":["React","useState","useEffect","App","jsonData","setJsonData","fetch","then","response","json","data","catch","error","console","addNewObject","newObject","updatedData","JSON","stringify"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,KAAK,CAAC,sBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIL,WAAW,CAACK,IAAD,CAF3B,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAHlB;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,MAAM;AACzB,UAAMC,SAAS,GAAG;AAChB,YAAM,MADU;AAEhB,eAAS,kDAFO;AAGhB,aAAO,8BAHS;AAIhB,gBAAU;AAJM,KAAlB,CADyB,CAQzB;;AACA,UAAMC,WAAW,GAAG,CAAC,GAAGZ,QAAJ,EAAcW,SAAd,CAApB,CATyB,CAWzB;;AACAV,IAAAA,WAAW,CAACW,WAAD,CAAX;AAEF,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMG,IAAI,CAACC,SAAL,CAAed,QAAf,EAAyB,IAAzB,EAA+B,CAA/B;AAAN;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GApBC;AAoBA;;GA/BsBD,G;;KAAAA,G","sourcesContent":["// import \"./App.css\";\n// import Input from \"./input\";\n// import VideoPage from \"./VideoPage\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <Input label = \"add video\"/>\n//       <Input label = \"add url\"/>\n//       <VideoPage />\n//     </div>\n//   );\n// }\n\n\nimport React, { useState, useEffect } from 'react';\n\nexport default function App() {\n  const [jsonData, setJsonData] = useState([]);\n\n  useEffect(() => {\n    // Simulate fetching JSON data\n    fetch('exampleresponse.json')\n      .then(response => response.json())\n      .then(data => setJsonData(data))\n      .catch(error => console.error('Error:', error));\n  }, []);\n\n  const addNewObject = () => {\n    const newObject = {\n      \"id\": 999999,\n      \"title\": \"La carrière TUMULTUEUSE de Marco Verratti au PSG\",\n      \"url\": \"https://youtu.be/RgIH-wcxqic\",\n      \"rating\": 42\n    };\n\n    // Clone the existing JSON data and add the new object\n    const updatedData = [...jsonData, newObject];\n\n    // Update the state with the new data\n    setJsonData(updatedData);\n\n  return (\n    <div>\n      <button onClick={addNewObject}>Add New Object</button>\n      <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n    </div>\n  );\n}}"]},"metadata":{},"sourceType":"module"}