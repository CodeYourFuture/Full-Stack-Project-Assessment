{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.variant === 'filled' && {\n    // Styles applied to the root element if `variant=\"filled\"`.\n    [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n      marginTop: 16\n    }\n  }, ownerState.position === 'start' && {\n    // Styles applied to the root element if `position=\"start\"`.\n    marginRight: 8\n  }, ownerState.position === 'end' && {\n    // Styles applied to the root element if `position=\"end\"`.\n    marginLeft: 8\n  }, ownerState.disablePointerEvents === true && {\n    // Styles applied to the root element if `disablePointerEvents={true}`.\n    pointerEvents: 'none'\n  });\n});\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component, normally an `IconButton` or string.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * Disable pointer events on the root.\r\n   * This allows for the content of the adornment to focus the `input` on click.\r\n   * @default false\r\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\r\n   * If children is a string then disable wrapping in a Typography component.\r\n   * @default false\r\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\r\n   * The position this adornment should appear relative to the `Input`.\r\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\r\n   * The variant to use.\r\n   * Note: If you are using the `TextField` component or the `FormControl` component\r\n   * you do not have to set this manually.\r\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/InputAdornment/InputAdornment.js"],"names":["_objectWithoutPropertiesLoose","_extends","_span","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","capitalize","Typography","FormControlContext","useFormControl","styled","inputAdornmentClasses","getInputAdornmentUtilityClass","useThemeProps","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","ownerState","root","position","disablePointerEvents","variant","useUtilityClasses","classes","hiddenLabel","size","slots","InputAdornmentRoot","name","slot","theme","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","positionStart","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","forwardRef","inProps","ref","children","className","component","disableTypography","variantProp","other","muiFormControl","process","env","NODE_ENV","console","error","Provider","value","as","Fragment","propTypes","node","object","string","elementType","bool","oneOf","isRequired","sx","oneOfType","arrayOf","func"],"mappings":"AAAA;;AAEA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AACA,IAAIC,KAAJ;;AACA,MAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,WAA1B,EAAuC,sBAAvC,EAA+D,mBAA/D,EAAoF,UAApF,EAAgG,SAAhG,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,0BAA1D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,qBAAP,IAAgCC,6BAAhC,QAAqE,yBAArE;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,QAAM;AACJC,IAAAA;AADI,MAEFF,KAFJ;AAGA,SAAO,CAACC,MAAM,CAACE,IAAR,EAAcF,MAAM,CAAE,WAAUd,UAAU,CAACe,UAAU,CAACE,QAAZ,CAAsB,EAA5C,CAApB,EAAoEF,UAAU,CAACG,oBAAX,KAAoC,IAApC,IAA4CJ,MAAM,CAACI,oBAAvH,EAA6IJ,MAAM,CAACC,UAAU,CAACI,OAAZ,CAAnJ,CAAP;AACD,CALD;;AAMA,MAAMC,iBAAiB,GAAGL,UAAU,IAAI;AACtC,QAAM;AACJM,IAAAA,OADI;AAEJH,IAAAA,oBAFI;AAGJI,IAAAA,WAHI;AAIJL,IAAAA,QAJI;AAKJM,IAAAA,IALI;AAMJJ,IAAAA;AANI,MAOFJ,UAPJ;AAQA,QAAMS,KAAK,GAAG;AACZR,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASE,oBAAoB,IAAI,sBAAjC,EAAyDD,QAAQ,IAAK,WAAUjB,UAAU,CAACiB,QAAD,CAAW,EAArG,EAAwGE,OAAxG,EAAiHG,WAAW,IAAI,aAAhI,EAA+IC,IAAI,IAAK,OAAMvB,UAAU,CAACuB,IAAD,CAAO,EAA/K;AADM,GAAd;AAGA,SAAOxB,cAAc,CAACyB,KAAD,EAAQlB,6BAAR,EAAuCe,OAAvC,CAArB;AACD,CAbD;;AAcA,MAAMI,kBAAkB,GAAGrB,MAAM,CAAC,KAAD,EAAQ;AACvCsB,EAAAA,IAAI,EAAE,mBADiC;AAEvCC,EAAAA,IAAI,EAAE,MAFiC;AAGvCf,EAAAA;AAHuC,CAAR,CAAN,CAIxB;AAAA,MAAC;AACFgB,IAAAA,KADE;AAEFb,IAAAA;AAFE,GAAD;AAAA,SAGGvB,QAAQ,CAAC;AACbqC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,MAAM,EAAE,QAFK;AAGb;AACAC,IAAAA,SAAS,EAAE,KAJE;AAKbC,IAAAA,UAAU,EAAE,QALC;AAMbC,IAAAA,UAAU,EAAE,QANC;AAObC,IAAAA,KAAK,EAAE,CAACN,KAAK,CAACO,IAAN,IAAcP,KAAf,EAAsBQ,OAAtB,CAA8BC,MAA9B,CAAqCC;AAP/B,GAAD,EAQXvB,UAAU,CAACI,OAAX,KAAuB,QAAvB,IAAmC;AACpC;AACA,KAAE,KAAId,qBAAqB,CAACkC,aAAc,UAASlC,qBAAqB,CAACiB,WAAY,GAArF,GAA0F;AACxFkB,MAAAA,SAAS,EAAE;AAD6E;AAFtD,GARxB,EAaXzB,UAAU,CAACE,QAAX,KAAwB,OAAxB,IAAmC;AACpC;AACAwB,IAAAA,WAAW,EAAE;AAFuB,GAbxB,EAgBX1B,UAAU,CAACE,QAAX,KAAwB,KAAxB,IAAiC;AAClC;AACAyB,IAAAA,UAAU,EAAE;AAFsB,GAhBtB,EAmBX3B,UAAU,CAACG,oBAAX,KAAoC,IAApC,IAA4C;AAC7C;AACAyB,IAAAA,aAAa,EAAE;AAF8B,GAnBjC,CAHX;AAAA,CAJwB,CAA3B;AA8BA,MAAMC,cAAc,GAAG,aAAajD,KAAK,CAACkD,UAAN,CAAiB,SAASD,cAAT,CAAwBE,OAAxB,EAAiCC,GAAjC,EAAsC;AACzF,QAAMlC,KAAK,GAAGN,aAAa,CAAC;AAC1BM,IAAAA,KAAK,EAAEiC,OADmB;AAE1BpB,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAIA,QAAM;AACFsB,IAAAA,QADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,SAAS,GAAG,KAHV;AAIFhC,IAAAA,oBAAoB,GAAG,KAJrB;AAKFiC,IAAAA,iBAAiB,GAAG,KALlB;AAMFlC,IAAAA,QANE;AAOFE,IAAAA,OAAO,EAAEiC;AAPP,MAQAvC,KARN;AAAA,QASEwC,KAAK,GAAG9D,6BAA6B,CAACsB,KAAD,EAAQnB,SAAR,CATvC;;AAUA,QAAM4D,cAAc,GAAGnD,cAAc,MAAM,EAA3C;AACA,MAAIgB,OAAO,GAAGiC,WAAd;;AACA,MAAIA,WAAW,IAAIE,cAAc,CAACnC,OAAlC,EAA2C;AACzC,QAAIoC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIL,WAAW,KAAKE,cAAc,CAACnC,OAAnC,EAA4C;AAC1CuC,QAAAA,OAAO,CAACC,KAAR,CAAc,+DAA+D,iCAA7E;AACD;AACF;AACF;;AACD,MAAIL,cAAc,IAAI,CAACnC,OAAvB,EAAgC;AAC9BA,IAAAA,OAAO,GAAGmC,cAAc,CAACnC,OAAzB;AACD;;AACD,QAAMJ,UAAU,GAAGvB,QAAQ,CAAC,EAAD,EAAKqB,KAAL,EAAY;AACrCS,IAAAA,WAAW,EAAEgC,cAAc,CAAChC,WADS;AAErCC,IAAAA,IAAI,EAAE+B,cAAc,CAAC/B,IAFgB;AAGrCL,IAAAA,oBAHqC;AAIrCD,IAAAA,QAJqC;AAKrCE,IAAAA;AALqC,GAAZ,CAA3B;;AAOA,QAAME,OAAO,GAAGD,iBAAiB,CAACL,UAAD,CAAjC;AACA,SAAO,aAAaN,IAAI,CAACP,kBAAkB,CAAC0D,QAApB,EAA8B;AACpDC,IAAAA,KAAK,EAAE,IAD6C;AAEpDb,IAAAA,QAAQ,EAAE,aAAavC,IAAI,CAACgB,kBAAD,EAAqBjC,QAAQ,CAAC;AACvDsE,MAAAA,EAAE,EAAEZ,SADmD;AAEvDnC,MAAAA,UAAU,EAAEA,UAF2C;AAGvDkC,MAAAA,SAAS,EAAEpD,IAAI,CAACwB,OAAO,CAACL,IAAT,EAAeiC,SAAf,CAHwC;AAIvDF,MAAAA,GAAG,EAAEA;AAJkD,KAAD,EAKrDM,KALqD,EAK9C;AACRL,MAAAA,QAAQ,EAAE,OAAOA,QAAP,KAAoB,QAApB,IAAgC,CAACG,iBAAjC,GAAqD,aAAa1C,IAAI,CAACR,UAAD,EAAa;AAC3FiC,QAAAA,KAAK,EAAE,gBADoF;AAE3Fc,QAAAA,QAAQ,EAAEA;AAFiF,OAAb,CAAtE,GAGL,aAAarC,KAAK,CAAChB,KAAK,CAACoE,QAAP,EAAiB;AACtCf,QAAAA,QAAQ,EAAE,CAAC/B,QAAQ,KAAK,OAAb;AAAuB;AAAmFxB,QAAAA,KAAK,KAAKA,KAAK,GAAG,aAAagB,IAAI,CAAC,MAAD,EAAS;AAC/JwC,UAAAA,SAAS,EAAE,aADoJ;AAE/JD,UAAAA,QAAQ,EAAE;AAFqJ,SAAT,CAA9B,CAA/G,GAGL,IAHI,EAGEA,QAHF;AAD4B,OAAjB;AAJf,KAL8C,CAA7B;AAFyB,GAA9B,CAAxB;AAmBD,CAtDmC,CAApC;AAuDAO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,cAAc,CAACoB;AAAU;AAAzB,EAAkD;AACxF;AACA;AACA;AACA;;AACA;AACF;AACA;AACEhB,EAAAA,QAAQ,EAAEpD,SAAS,CAACqE,IARoE;;AASxF;AACF;AACA;AACE5C,EAAAA,OAAO,EAAEzB,SAAS,CAACsE,MAZqE;;AAaxF;AACF;AACA;AACEjB,EAAAA,SAAS,EAAErD,SAAS,CAACuE,MAhBmE;;AAiBxF;AACF;AACA;AACA;AACEjB,EAAAA,SAAS,EAAEtD,SAAS,CAACwE,WArBmE;;AAsBxF;AACF;AACA;AACA;AACA;AACElD,EAAAA,oBAAoB,EAAEtB,SAAS,CAACyE,IA3BwD;;AA4BxF;AACF;AACA;AACA;AACElB,EAAAA,iBAAiB,EAAEvD,SAAS,CAACyE,IAhC2D;;AAiCxF;AACF;AACA;AACEpD,EAAAA,QAAQ,EAAErB,SAAS,CAAC0E,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,CAAhB,EAAkCC,UApC4C;;AAqCxF;AACF;AACA;AACEC,EAAAA,EAAE,EAAE5E,SAAS,CAAC6E,SAAV,CAAoB,CAAC7E,SAAS,CAAC8E,OAAV,CAAkB9E,SAAS,CAAC6E,SAAV,CAAoB,CAAC7E,SAAS,CAAC+E,IAAX,EAAiB/E,SAAS,CAACsE,MAA3B,EAAmCtE,SAAS,CAACyE,IAA7C,CAApB,CAAlB,CAAD,EAA6FzE,SAAS,CAAC+E,IAAvG,EAA6G/E,SAAS,CAACsE,MAAvH,CAApB,CAxCoF;;AAyCxF;AACF;AACA;AACA;AACA;AACE/C,EAAAA,OAAO,EAAEvB,SAAS,CAAC0E,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,CAAhB;AA9C+E,CAA1F,GA+CI,KAAK,CA/CT;AAgDA,eAAe1B,cAAf","sourcesContent":["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _span;\r\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\r\nimport capitalize from '../utils/capitalize';\r\nimport Typography from '../Typography';\r\nimport FormControlContext from '../FormControl/FormControlContext';\r\nimport useFormControl from '../FormControl/useFormControl';\r\nimport styled from '../styles/styled';\r\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    ownerState\r\n  } = props;\r\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    disablePointerEvents,\r\n    hiddenLabel,\r\n    position,\r\n    size,\r\n    variant\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\r\n  };\r\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\r\n};\r\nconst InputAdornmentRoot = styled('div', {\r\n  name: 'MuiInputAdornment',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  display: 'flex',\r\n  height: '0.01em',\r\n  // Fix IE11 flexbox alignment. To remove at some point.\r\n  maxHeight: '2em',\r\n  alignItems: 'center',\r\n  whiteSpace: 'nowrap',\r\n  color: (theme.vars || theme).palette.action.active\r\n}, ownerState.variant === 'filled' && {\r\n  // Styles applied to the root element if `variant=\"filled\"`.\r\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\r\n    marginTop: 16\r\n  }\r\n}, ownerState.position === 'start' && {\r\n  // Styles applied to the root element if `position=\"start\"`.\r\n  marginRight: 8\r\n}, ownerState.position === 'end' && {\r\n  // Styles applied to the root element if `position=\"end\"`.\r\n  marginLeft: 8\r\n}, ownerState.disablePointerEvents === true && {\r\n  // Styles applied to the root element if `disablePointerEvents={true}`.\r\n  pointerEvents: 'none'\r\n}));\r\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiInputAdornment'\r\n  });\r\n  const {\r\n      children,\r\n      className,\r\n      component = 'div',\r\n      disablePointerEvents = false,\r\n      disableTypography = false,\r\n      position,\r\n      variant: variantProp\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const muiFormControl = useFormControl() || {};\r\n  let variant = variantProp;\r\n  if (variantProp && muiFormControl.variant) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (variantProp === muiFormControl.variant) {\r\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\r\n      }\r\n    }\r\n  }\r\n  if (muiFormControl && !variant) {\r\n    variant = muiFormControl.variant;\r\n  }\r\n  const ownerState = _extends({}, props, {\r\n    hiddenLabel: muiFormControl.hiddenLabel,\r\n    size: muiFormControl.size,\r\n    disablePointerEvents,\r\n    position,\r\n    variant\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\r\n    value: null,\r\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\r\n      as: component,\r\n      ownerState: ownerState,\r\n      className: clsx(classes.root, className),\r\n      ref: ref\r\n    }, other, {\r\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\r\n        color: \"text.secondary\",\r\n        children: children\r\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\r\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\r\n          className: \"notranslate\",\r\n          children: \"\\u200B\"\r\n        })) : null, children]\r\n      })\r\n    }))\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The content of the component, normally an `IconButton` or string.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Disable pointer events on the root.\r\n   * This allows for the content of the adornment to focus the `input` on click.\r\n   * @default false\r\n   */\r\n  disablePointerEvents: PropTypes.bool,\r\n  /**\r\n   * If children is a string then disable wrapping in a Typography component.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n  /**\r\n   * The position this adornment should appear relative to the `Input`.\r\n   */\r\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The variant to use.\r\n   * Note: If you are using the `TextField` component or the `FormControl` component\r\n   * you do not have to set this manually.\r\n   */\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\r\n} : void 0;\r\nexport default InputAdornment;"]},"metadata":{},"sourceType":"module"}