{"ast":null,"code":"'use client';\n\nimport _toConsumableArray from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nvar BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [_defineProperty({}, \"& .\".concat(breadcrumbsClasses.li), styles.li), styles.root];\n  }\n})({});\nvar BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.ol;\n  }\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nvar BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.separator;\n  }\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, \"separator-\".concat(index)));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var ownerState = _extends({}, props, {\n    component: component,\n    expanded: expanded,\n    expandText: expandText,\n    itemsAfterCollapse: itemsAfterCollapse,\n    itemsBeforeCollapse: itemsBeforeCollapse,\n    maxItems: maxItems,\n    separator: separator\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState: ownerState\n  });\n  var listRef = React.useRef(null);\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      var focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\")], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/_jsx(\"li\", {\n      className: classes.li,\n      children: child\n    }, \"child-\".concat(index));\n  });\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","isFragment","PropTypes","clsx","integerPropType","unstable_composeClasses","composeClasses","useSlotProps","styled","useThemeProps","Typography","BreadcrumbCollapsed","breadcrumbsClasses","getBreadcrumbsUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","li","ol","separator","BreadcrumbsRoot","name","slot","overridesResolver","props","styles","BreadcrumbsOl","display","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","marginLeft","marginRight","insertSeparators","items","className","reduce","acc","current","index","length","concat","children","push","Breadcrumbs","forwardRef","inProps","ref","component","slotProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","useState","expanded","setExpanded","collapsedIconSlotProps","elementType","CollapsedIcon","externalSlotProps","collapsedIcon","listRef","useRef","renderItemsBeforeAndAfter","allItems","handleClickExpand","focusable","querySelector","focus","process","env","NODE_ENV","console","error","join","slice","onClick","Children","toArray","filter","child","isValidElement","map","color","propTypes","node","object","string","shape","oneOfType","func","sx","arrayOf","bool"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"]},"metadata":{},"sourceType":"module"}