{"ast":null,"code":"/**\r\n * @param {number}\r\n * @return {number}\r\n */\nexport var abs = Math.abs;\n/**\r\n * @param {number}\r\n * @return {string}\r\n */\n\nexport var from = String.fromCharCode;\n/**\r\n * @param {object}\r\n * @return {object}\r\n */\n\nexport var assign = Object.assign;\n/**\r\n * @param {string} value\r\n * @param {number} length\r\n * @return {number}\r\n */\n\nexport function hash(value, length) {\n  return charat(value, 0) ^ 45 ? (((length << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;\n}\n/**\r\n * @param {string} value\r\n * @return {string}\r\n */\n\nexport function trim(value) {\n  return value.trim();\n}\n/**\r\n * @param {string} value\r\n * @param {RegExp} pattern\r\n * @return {string?}\r\n */\n\nexport function match(value, pattern) {\n  return (value = pattern.exec(value)) ? value[0] : value;\n}\n/**\r\n * @param {string} value\r\n * @param {(string|RegExp)} pattern\r\n * @param {string} replacement\r\n * @return {string}\r\n */\n\nexport function replace(value, pattern, replacement) {\n  return value.replace(pattern, replacement);\n}\n/**\r\n * @param {string} value\r\n * @param {string} search\r\n * @return {number}\r\n */\n\nexport function indexof(value, search) {\n  return value.indexOf(search);\n}\n/**\r\n * @param {string} value\r\n * @param {number} index\r\n * @return {number}\r\n */\n\nexport function charat(value, index) {\n  return value.charCodeAt(index) | 0;\n}\n/**\r\n * @param {string} value\r\n * @param {number} begin\r\n * @param {number} end\r\n * @return {string}\r\n */\n\nexport function substr(value, begin, end) {\n  return value.slice(begin, end);\n}\n/**\r\n * @param {string} value\r\n * @return {number}\r\n */\n\nexport function strlen(value) {\n  return value.length;\n}\n/**\r\n * @param {any[]} value\r\n * @return {number}\r\n */\n\nexport function sizeof(value) {\n  return value.length;\n}\n/**\r\n * @param {any} value\r\n * @param {any[]} array\r\n * @return {any}\r\n */\n\nexport function append(value, array) {\n  return array.push(value), value;\n}\n/**\r\n * @param {string[]} array\r\n * @param {function} callback\r\n * @return {string}\r\n */\n\nexport function combine(array, callback) {\n  return array.map(callback).join('');\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/stylis/src/Utility.js"],"names":["abs","Math","from","String","fromCharCode","assign","Object","hash","value","length","charat","trim","match","pattern","exec","replace","replacement","indexof","search","indexOf","index","charCodeAt","substr","begin","end","slice","strlen","sizeof","append","array","push","combine","callback","map","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,IAAIA,GAAG,GAAGC,IAAI,CAACD,GAAf;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAIE,IAAI,GAAGC,MAAM,CAACC,YAAlB;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAApB;AAEP;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,IAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA8B;AACpC,SAAOC,MAAM,CAACF,KAAD,EAAQ,CAAR,CAAN,GAAmB,EAAnB,GAAyB,CAAE,CAAE,CAAEC,MAAM,IAAI,CAAX,GAAgBC,MAAM,CAACF,KAAD,EAAQ,CAAR,CAAvB,KAAsC,CAAvC,GAA4CE,MAAM,CAACF,KAAD,EAAQ,CAAR,CAAnD,KAAkE,CAAnE,GAAwEE,MAAM,CAACF,KAAD,EAAQ,CAAR,CAA/E,KAA8F,CAA/F,GAAoGE,MAAM,CAACF,KAAD,EAAQ,CAAR,CAAlI,GAA+I,CAAtJ;AACA;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASG,IAAT,CAAeH,KAAf,EAAsB;AAC5B,SAAOA,KAAK,CAACG,IAAN,EAAP;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAgBJ,KAAhB,EAAuBK,OAAvB,EAAgC;AACtC,SAAO,CAACL,KAAK,GAAGK,OAAO,CAACC,IAAR,CAAaN,KAAb,CAAT,IAAgCA,KAAK,CAAC,CAAD,CAArC,GAA2CA,KAAlD;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,OAAT,CAAkBP,KAAlB,EAAyBK,OAAzB,EAAkCG,WAAlC,EAA+C;AACrD,SAAOR,KAAK,CAACO,OAAN,CAAcF,OAAd,EAAuBG,WAAvB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAkBT,KAAlB,EAAyBU,MAAzB,EAAiC;AACvC,SAAOV,KAAK,CAACW,OAAN,CAAcD,MAAd,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASR,MAAT,CAAiBF,KAAjB,EAAwBY,KAAxB,EAA+B;AACrC,SAAOZ,KAAK,CAACa,UAAN,CAAiBD,KAAjB,IAA0B,CAAjC;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,MAAT,CAAiBd,KAAjB,EAAwBe,KAAxB,EAA+BC,GAA/B,EAAoC;AAC1C,SAAOhB,KAAK,CAACiB,KAAN,CAAYF,KAAZ,EAAmBC,GAAnB,CAAP;AACA;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASE,MAAT,CAAiBlB,KAAjB,EAAwB;AAC9B,SAAOA,KAAK,CAACC,MAAb;AACA;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASkB,MAAT,CAAiBnB,KAAjB,EAAwB;AAC9B,SAAOA,KAAK,CAACC,MAAb;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASmB,MAAT,CAAiBpB,KAAjB,EAAwBqB,KAAxB,EAA+B;AACrC,SAAOA,KAAK,CAACC,IAAN,CAAWtB,KAAX,GAAmBA,KAA1B;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASuB,OAAT,CAAkBF,KAAlB,EAAyBG,QAAzB,EAAmC;AACzC,SAAOH,KAAK,CAACI,GAAN,CAAUD,QAAV,EAAoBE,IAApB,CAAyB,EAAzB,CAAP;AACA","sourcesContent":["/**\r\n * @param {number}\r\n * @return {number}\r\n */\r\nexport var abs = Math.abs\r\n\r\n/**\r\n * @param {number}\r\n * @return {string}\r\n */\r\nexport var from = String.fromCharCode\r\n\r\n/**\r\n * @param {object}\r\n * @return {object}\r\n */\r\nexport var assign = Object.assign\r\n\r\n/**\r\n * @param {string} value\r\n * @param {number} length\r\n * @return {number}\r\n */\r\nexport function hash (value, length) {\r\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @return {string}\r\n */\r\nexport function trim (value) {\r\n\treturn value.trim()\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {RegExp} pattern\r\n * @return {string?}\r\n */\r\nexport function match (value, pattern) {\r\n\treturn (value = pattern.exec(value)) ? value[0] : value\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {(string|RegExp)} pattern\r\n * @param {string} replacement\r\n * @return {string}\r\n */\r\nexport function replace (value, pattern, replacement) {\r\n\treturn value.replace(pattern, replacement)\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {string} search\r\n * @return {number}\r\n */\r\nexport function indexof (value, search) {\r\n\treturn value.indexOf(search)\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {number} index\r\n * @return {number}\r\n */\r\nexport function charat (value, index) {\r\n\treturn value.charCodeAt(index) | 0\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {number} begin\r\n * @param {number} end\r\n * @return {string}\r\n */\r\nexport function substr (value, begin, end) {\r\n\treturn value.slice(begin, end)\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @return {number}\r\n */\r\nexport function strlen (value) {\r\n\treturn value.length\r\n}\r\n\r\n/**\r\n * @param {any[]} value\r\n * @return {number}\r\n */\r\nexport function sizeof (value) {\r\n\treturn value.length\r\n}\r\n\r\n/**\r\n * @param {any} value\r\n * @param {any[]} array\r\n * @return {any}\r\n */\r\nexport function append (value, array) {\r\n\treturn array.push(value), value\r\n}\r\n\r\n/**\r\n * @param {string[]} array\r\n * @param {function} callback\r\n * @return {string}\r\n */\r\nexport function combine (array, callback) {\r\n\treturn array.map(callback).join('')\r\n}\r\n"]},"metadata":{},"sourceType":"module"}