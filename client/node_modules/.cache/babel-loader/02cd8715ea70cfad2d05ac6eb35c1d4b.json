{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"enableColorScheme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { html, body } from '../CssBaseline/CssBaseline';\nimport { getScopedCssBaselineUtilityClass } from './scopedCssBaselineClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes);\n};\n\nconst ScopedCssBaselineRoot = styled('div', {\n  name: 'MuiScopedCssBaseline',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const colorSchemeStyles = {};\n\n  if (ownerState.enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(_ref2 => {\n      let [key, scheme] = _ref2;\n\n      var _scheme$palette;\n\n      colorSchemeStyles[`&${theme.getColorSchemeSelector(key).replace(/\\s*&/, '')}`] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n\n  return _extends({}, html(theme, ownerState.enableColorScheme), body(theme), {\n    '& *, & *::before, & *::after': {\n      boxSizing: 'inherit'\n    },\n    '& strong, & b': {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  }, colorSchemeStyles);\n});\nconst ScopedCssBaseline = /*#__PURE__*/React.forwardRef(function ScopedCssBaseline(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiScopedCssBaseline'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ScopedCssBaselineRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ScopedCssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   */\n  enableColorScheme: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ScopedCssBaseline;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","useThemeProps","styled","html","body","getScopedCssBaselineUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","ScopedCssBaselineRoot","name","slot","overridesResolver","props","styles","theme","colorSchemeStyles","enableColorScheme","colorSchemes","Object","entries","forEach","key","scheme","_scheme$palette","getColorSchemeSelector","replace","colorScheme","palette","mode","boxSizing","fontWeight","typography","fontWeightBold","ScopedCssBaseline","forwardRef","inProps","ref","className","component","other","as","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","bool","sx","oneOfType","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"enableColorScheme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { html, body } from '../CssBaseline/CssBaseline';\nimport { getScopedCssBaselineUtilityClass } from './scopedCssBaselineClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes);\n};\nconst ScopedCssBaselineRoot = styled('div', {\n  name: 'MuiScopedCssBaseline',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  const colorSchemeStyles = {};\n  if (ownerState.enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[`&${theme.getColorSchemeSelector(key).replace(/\\s*&/, '')}`] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  return _extends({}, html(theme, ownerState.enableColorScheme), body(theme), {\n    '& *, & *::before, & *::after': {\n      boxSizing: 'inherit'\n    },\n    '& strong, & b': {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  }, colorSchemeStyles);\n});\nconst ScopedCssBaseline = /*#__PURE__*/React.forwardRef(function ScopedCssBaseline(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiScopedCssBaseline'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ScopedCssBaselineRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ScopedCssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   */\n  enableColorScheme: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ScopedCssBaseline;"]},"metadata":{},"sourceType":"module"}