{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n\nfunction tabPanelValueGenerator(otherTabPanelValues) {\n  return otherTabPanelValues.size;\n}\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabPanel API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab-panel)\n */\n\n\nfunction useTabPanel(parameters) {\n  const {\n    value: valueParam,\n    id: idParam,\n    rootRef: externalRef\n  } = parameters;\n  const context = useTabsContext();\n\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n\n  const {\n    value: selectedTabValue,\n    getTabId\n  } = context;\n  const id = useId(idParam);\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, externalRef);\n  const metadata = React.useMemo(() => ({\n    id,\n    ref\n  }), [id]);\n  const {\n    id: value\n  } = useCompoundItem(valueParam != null ? valueParam : tabPanelValueGenerator, metadata);\n  const hidden = value !== selectedTabValue;\n  const correspondingTabId = value !== undefined ? getTabId(value) : undefined;\n\n  const getRootProps = () => {\n    return {\n      'aria-labelledby': correspondingTabId != null ? correspondingTabId : undefined,\n      hidden,\n      id: id != null ? id : undefined,\n      ref: handleRef\n    };\n  };\n\n  return {\n    hidden,\n    getRootProps,\n    rootRef: handleRef\n  };\n}\n\nexport { useTabPanel };","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useTabPanel/useTabPanel.js"],"names":["React","unstable_useId","useId","unstable_useForkRef","useForkRef","useTabsContext","useCompoundItem","tabPanelValueGenerator","otherTabPanelValues","size","useTabPanel","parameters","value","valueParam","id","idParam","rootRef","externalRef","context","Error","selectedTabValue","getTabId","ref","useRef","handleRef","metadata","useMemo","hidden","correspondingTabId","undefined","getRootProps"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAc,IAAIC,KAA3B,EAAkCC,mBAAmB,IAAIC,UAAzD,QAA2E,YAA3E;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AACA,SAASC,sBAAT,CAAgCC,mBAAhC,EAAqD;AACnD,SAAOA,mBAAmB,CAACC,IAA3B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,UAArB,EAAiC;AAC/B,QAAM;AACJC,IAAAA,KAAK,EAAEC,UADH;AAEJC,IAAAA,EAAE,EAAEC,OAFA;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFN,UAJJ;AAKA,QAAMO,OAAO,GAAGb,cAAc,EAA9B;;AACA,MAAIa,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,QAAM;AACJP,IAAAA,KAAK,EAAEQ,gBADH;AAEJC,IAAAA;AAFI,MAGFH,OAHJ;AAIA,QAAMJ,EAAE,GAAGZ,KAAK,CAACa,OAAD,CAAhB;AACA,QAAMO,GAAG,GAAGtB,KAAK,CAACuB,MAAN,CAAa,IAAb,CAAZ;AACA,QAAMC,SAAS,GAAGpB,UAAU,CAACkB,GAAD,EAAML,WAAN,CAA5B;AACA,QAAMQ,QAAQ,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,OAAO;AACpCZ,IAAAA,EADoC;AAEpCQ,IAAAA;AAFoC,GAAP,CAAd,EAGb,CAACR,EAAD,CAHa,CAAjB;AAIA,QAAM;AACJA,IAAAA,EAAE,EAAEF;AADA,MAEFN,eAAe,CAACO,UAAU,IAAI,IAAd,GAAqBA,UAArB,GAAkCN,sBAAnC,EAA2DkB,QAA3D,CAFnB;AAGA,QAAME,MAAM,GAAGf,KAAK,KAAKQ,gBAAzB;AACA,QAAMQ,kBAAkB,GAAGhB,KAAK,KAAKiB,SAAV,GAAsBR,QAAQ,CAACT,KAAD,CAA9B,GAAwCiB,SAAnE;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAO;AACL,yBAAmBF,kBAAkB,IAAI,IAAtB,GAA6BA,kBAA7B,GAAkDC,SADhE;AAELF,MAAAA,MAFK;AAGLb,MAAAA,EAAE,EAAEA,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkBe,SAHjB;AAILP,MAAAA,GAAG,EAAEE;AAJA,KAAP;AAMD,GAPD;;AAQA,SAAO;AACLG,IAAAA,MADK;AAELG,IAAAA,YAFK;AAGLd,IAAAA,OAAO,EAAEQ;AAHJ,GAAP;AAKD;;AACD,SAASd,WAAT","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nfunction tabPanelValueGenerator(otherTabPanelValues) {\n  return otherTabPanelValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabPanel API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab-panel)\n */\nfunction useTabPanel(parameters) {\n  const {\n    value: valueParam,\n    id: idParam,\n    rootRef: externalRef\n  } = parameters;\n  const context = useTabsContext();\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n  const {\n    value: selectedTabValue,\n    getTabId\n  } = context;\n  const id = useId(idParam);\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, externalRef);\n  const metadata = React.useMemo(() => ({\n    id,\n    ref\n  }), [id]);\n  const {\n    id: value\n  } = useCompoundItem(valueParam != null ? valueParam : tabPanelValueGenerator, metadata);\n  const hidden = value !== selectedTabValue;\n  const correspondingTabId = value !== undefined ? getTabId(value) : undefined;\n  const getRootProps = () => {\n    return {\n      'aria-labelledby': correspondingTabId != null ? correspondingTabId : undefined,\n      hidden,\n      id: id != null ? id : undefined,\n      ref: handleRef\n    };\n  };\n  return {\n    hidden,\n    getRootProps,\n    rootRef: handleRef\n  };\n}\nexport { useTabPanel };"]},"metadata":{},"sourceType":"module"}