{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"onEnter\", \"onExited\"],\n    _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      anchorOrigin = ownerState.anchorOrigin;\n  var slots = {\n    root: ['root', \"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal))]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nvar SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[\"anchorOrigin\".concat(capitalize(ownerState.anchorOrigin.vertical)).concat(capitalize(ownerState.anchorOrigin.horizontal))]];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 24\n  } : {\n    bottom: 24\n  }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n    left: 24,\n    right: 'auto'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    right: 24,\n    left: 'auto'\n  })));\n});\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  var theme = useTheme();\n  var defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'left'\n  } : _props$anchorOrigin;\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      open = props.open,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEnter = _props$TransitionProp.onEnter,\n      onExited = _props$TransitionProp.onExited,\n      TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n      other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical: vertical,\n      horizontal: horizontal\n    },\n    autoHideDuration: autoHideDuration,\n    disableWindowBlurListener: disableWindowBlurListener,\n    TransitionComponent: TransitionComponent,\n    transitionDuration: transitionDuration\n  });\n\n  var classes = useUtilityClasses(ownerState);\n\n  var _useSnackbar = useSnackbar(_extends({}, ownerState)),\n      getRootProps = _useSnackbar.getRootProps,\n      onClickAway = _useSnackbar.onClickAway;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1];\n\n  var rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState: ownerState,\n    additionalProps: {\n      ref: ref\n    },\n    className: [classes.root, className]\n  });\n\n  var handleExited = function handleExited(node) {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  }; // So we only render active snackbars.\n\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: function key() {\n    return null;\n  },\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","unstable_composeClasses","composeClasses","useSlotProps","ClickAwayListener","useSnackbar","styled","useTheme","useThemeProps","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","anchorOrigin","slots","root","vertical","horizontal","SnackbarRoot","name","slot","overridesResolver","props","styles","theme","center","left","right","transform","zIndex","vars","snackbar","position","display","justifyContent","alignItems","top","bottom","breakpoints","up","Snackbar","forwardRef","inProps","ref","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","open","TransitionComponent","transitionDuration","TransitionProps","onEnter","onExited","other","getRootProps","onClickAway","useState","exited","setExited","rootProps","elementType","getSlotProps","externalForwardedProps","additionalProps","handleExited","node","handleEnter","isAppearing","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","onBlur","func","onClose","onFocus","onMouseEnter","onMouseLeave","resumeHideDuration","sx","oneOfType","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      open,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}