{"ast":null,"code":"export default function composeClasses(slots, getUtilityClass) {\n  let classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  const output = {};\n  Object.keys(slots).forEach( // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/utils/esm/composeClasses/composeClasses.js"],"names":["composeClasses","slots","getUtilityClass","classes","undefined","output","Object","keys","forEach","slot","reduce","acc","key","utilityClass","push","join"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,eAA/B,EAAqE;AAAA,MAArBC,OAAqB,uEAAXC,SAAW;AAClF,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,OAAnB,EACA;AACA;AACAC,EAAAA,IAAI,IAAI;AACNJ,IAAAA,MAAM,CAACI,IAAD,CAAN,GAAeR,KAAK,CAACQ,IAAD,CAAL,CAAYC,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9C,UAAIA,GAAJ,EAAS;AACP,cAAMC,YAAY,GAAGX,eAAe,CAACU,GAAD,CAApC;;AACA,YAAIC,YAAY,KAAK,EAArB,EAAyB;AACvBF,UAAAA,GAAG,CAACG,IAAJ,CAASD,YAAT;AACD;;AACD,YAAIV,OAAO,IAAIA,OAAO,CAACS,GAAD,CAAtB,EAA6B;AAC3BD,UAAAA,GAAG,CAACG,IAAJ,CAASX,OAAO,CAACS,GAAD,CAAhB;AACD;AACF;;AACD,aAAOD,GAAP;AACD,KAXc,EAWZ,EAXY,EAWRI,IAXQ,CAWH,GAXG,CAAf;AAYD,GAhBD;AAiBA,SAAOV,MAAP;AACD","sourcesContent":["export default function composeClasses(slots, getUtilityClass, classes = undefined) {\r\n  const output = {};\r\n  Object.keys(slots).forEach(\r\n  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\r\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\r\n  slot => {\r\n    output[slot] = slots[slot].reduce((acc, key) => {\r\n      if (key) {\r\n        const utilityClass = getUtilityClass(key);\r\n        if (utilityClass !== '') {\r\n          acc.push(utilityClass);\r\n        }\r\n        if (classes && classes[key]) {\r\n          acc.push(classes[key]);\r\n        }\r\n      }\r\n      return acc;\r\n    }, []).join(' ');\r\n  });\r\n  return output;\r\n}"]},"metadata":{},"sourceType":"module"}