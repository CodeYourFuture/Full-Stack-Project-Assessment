{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetomer/Documents/GitHub/Full-Stack-Project-Assessment/client/src/component/AddVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Addvideo() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    title: \"\",\n    url: \"\"\n  });\n  const [idCounter, setIdCounter] = useState(1);\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const fetchVideos = async () => {\n    try {\n      const response = await fetch(\"https://node-server-full-stack.onrender.com/videos\");\n\n      if (response.ok) {// const data = await response.json();\n        // setVideos(data);\n      } else {\n        console.error(\"Failed to fetch videos:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewVideo({ ...newVideo,\n      [name]: value\n    });\n  };\n\n  const getYouTubeVideoId = url => {\n    const videoIdMatch = url.match(/(?:\\/|v=)([A-Za-z0-9_-]{11})(?=&|$)/);\n\n    if (videoIdMatch) {\n      return videoIdMatch[1];\n    }\n\n    return null;\n  };\n\n  const addVideo = async () => {\n    if (newVideo.title && newVideo.url) {\n      const videoId = getYouTubeVideoId(newVideo.url);\n\n      if (videoId) {\n        const videoToAdd = { ...newVideo,\n          rating: 0,\n          id: idCounter,\n          timestamp: new Date().toISOString()\n        };\n\n        try {\n          const response = await fetch(\"https://node-server-full-stack.onrender.com/videos\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(videoToAdd)\n          });\n\n          if (response.ok) {\n            // const responseData = await response.json();\n            // setVideos([...videos, responseData]);\n            setNewVideo({\n              title: \"\",\n              url: \"\"\n            });\n            setIdCounter(idCounter + 1);\n          } else {\n            console.error(\"Failed to add video:\", response.statusText);\n          }\n        } catch (error) {\n          console.error(\"Error adding video:\", error);\n        }\n      } else {\n        alert(\"Invalid YouTube URL. Please enter a valid YouTube video URL.\");\n      }\n    }\n  };\n\n  const upvoteVideo = id => {\n    const updatedVideos = videos.map(video => video.id === id ? { ...video,\n      rating: video.rating + 1\n    } : video);\n    setVideos(updatedVideos);\n\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: console.log(\"line 211\", updatedVideos)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this);\n  };\n\n  const downvoteVideo = id => {\n    const updatedVideos = videos.map(video => video.id === id && video.rating > 0 ? { ...video,\n      rating: video.rating - 1\n    } : video);\n\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: console.log(\"line 220\", updatedVideos)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this);\n\n    setVideos(updatedVideos);\n  };\n\n  const removeVideo = id => {\n    const updatedVideos = videos.filter(video => video.id !== id);\n    setVideos(updatedVideos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: newVideo.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"url\",\n        placeholder: \"URL\",\n        value: newVideo.url,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addVideo,\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ShowingVideos\",\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videos\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-thumbs-up\",\n                onClick: () => upvoteVideo(video.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: video.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-thumbs-down\",\n                onClick: () => downvoteVideo(video.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              className: \"allVideos\",\n              title: video.title,\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${getYouTubeVideoId(video.url)}`,\n              frameBorder: \"0\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Posted at: \", new Date(video.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeVideo(video.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Addvideo, \"tSBERDyWmvZ1WMmRw4cJkWoA5Lg=\");\n\n_c = Addvideo;\nexport default Addvideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addvideo\");","map":{"version":3,"sources":["/Users/mehmetomer/Documents/GitHub/Full-Stack-Project-Assessment/client/src/component/AddVideo.jsx"],"names":["React","useState","useEffect","Addvideo","videos","setVideos","newVideo","setNewVideo","title","url","idCounter","setIdCounter","fetchVideos","response","fetch","ok","console","error","statusText","handleInputChange","event","name","value","target","getYouTubeVideoId","videoIdMatch","match","addVideo","videoId","videoToAdd","rating","id","timestamp","Date","toISOString","method","headers","body","JSON","stringify","alert","upvoteVideo","updatedVideos","map","video","log","downvoteVideo","removeVideo","filter","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Addvideo() {\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({ title: \"\", url: \"\" });\n  const [idCounter, setIdCounter] = useState(1);\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const fetchVideos = async () => {\n    try {\n      const response = await fetch(\n        \"https://node-server-full-stack.onrender.com/videos\"\n      );\n      if (response.ok) {\n        // const data = await response.json();\n        // setVideos(data);\n      } else {\n        console.error(\"Failed to fetch videos:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setNewVideo({ ...newVideo, [name]: value });\n  };\n\n  const getYouTubeVideoId = (url) => {\n    const videoIdMatch = url.match(/(?:\\/|v=)([A-Za-z0-9_-]{11})(?=&|$)/);\n    if (videoIdMatch) {\n      return videoIdMatch[1];\n    }\n    return null;\n  };\n\n  const addVideo = async () => {\n    if (newVideo.title && newVideo.url) {\n      const videoId = getYouTubeVideoId(newVideo.url);\n\n      if (videoId) {\n        const videoToAdd = {\n          ...newVideo,\n          rating: 0,\n          id: idCounter,\n          timestamp: new Date().toISOString(),\n        };\n\n        try {\n          const response = await fetch(\n            \"https://node-server-full-stack.onrender.com/videos\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(videoToAdd),\n            }\n          );\n\n          if (response.ok) {\n            // const responseData = await response.json();\n            // setVideos([...videos, responseData]);\n            setNewVideo({ title: \"\", url: \"\" });\n            setIdCounter(idCounter + 1);\n          } else {\n            console.error(\"Failed to add video:\", response.statusText);\n          }\n        } catch (error) {\n          console.error(\"Error adding video:\", error);\n        }\n      } else {\n        alert(\"Invalid YouTube URL. Please enter a valid YouTube video URL.\");\n      }\n    }\n  };\n\n  const upvoteVideo = (id) => {\n    const updatedVideos = videos.map((video) =>\n      video.id === id ? { ...video, rating: video.rating + 1 } : video\n    );\n    setVideos(updatedVideos);\n    <p>{console.log(\"line 211\", updatedVideos)}</p>;\n  };\n\n  const downvoteVideo = (id) => {\n    const updatedVideos = videos.map((video) =>\n      video.id === id && video.rating > 0\n        ? { ...video, rating: video.rating - 1 }\n        : video\n    );\n    <p>{console.log(\"line 220\", updatedVideos)}</p>;\n\n    setVideos(updatedVideos);\n  };\n\n  const removeVideo = (id) => {\n    const updatedVideos = videos.filter((video) => video.id !== id);\n    setVideos(updatedVideos);\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Add a Video</h2>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={newVideo.title}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"url\"\n          placeholder=\"URL\"\n          value={newVideo.url}\n          onChange={handleInputChange}\n        />\n        <button onClick={addVideo}>Add Video</button>\n      </div>\n      <div>\n        <h2>Videos</h2>\n        <ul className=\"ShowingVideos\">\n          {videos.map((video) => (\n            <div className=\"videos\" key={video.id}>\n              <li>\n                <h3>{video.title}</h3>\n                <div className=\"buttons\">\n                  <i\n                    className=\"fa-solid fa-thumbs-up\"\n                    onClick={() => upvoteVideo(video.id)}\n                  ></i>\n                  <h4>{video.rating}</h4>\n                  <i\n                    className=\"fa-solid fa-thumbs-down\"\n                    onClick={() => downvoteVideo(video.id)}\n                  ></i>\n                </div>\n                <iframe\n                  className=\"allVideos\"\n                  title={video.title}\n                  width=\"560\"\n                  height=\"315\"\n                  src={`https://www.youtube.com/embed/${getYouTubeVideoId(\n                    video.url\n                  )}`}\n                  frameBorder=\"0\"\n                  allowFullScreen\n                ></iframe>\n                <p>Posted at: {new Date(video.timestamp).toLocaleString()}</p>\n                <button onClick={() => removeVideo(video.id)}>Delete</button>\n              </li>\n            </div>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Addvideo;"]},"metadata":{},"sourceType":"module"}