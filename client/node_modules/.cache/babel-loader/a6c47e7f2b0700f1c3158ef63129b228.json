{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _styled;\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      focusVisible = ownerState.focusVisible,\n      focusVisibleClassName = ownerState.focusVisibleClassName,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  var composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += \" \".concat(focusVisibleClassName);\n  }\n\n  return composedClasses;\n};\n\nexport var ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})((_styled = {\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  }\n}, _defineProperty(_styled, \"&.\".concat(buttonBaseClasses.disabled), {\n  pointerEvents: 'none',\n  // Disable link interactions\n  cursor: 'default'\n}), _defineProperty(_styled, '@media print', {\n  colorAdjust: 'exact'\n}), _styled));\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  var action = props.action,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      _props$LinkComponent = props.LinkComponent,\n      LinkComponent = _props$LinkComponent === void 0 ? 'a' : _props$LinkComponent,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onContextMenu = props.onContextMenu,\n      onDragLeave = props.onDragLeave,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      touchRippleRef = props.touchRippleRef,\n      type = props.type,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var buttonRef = React.useRef(null);\n  var rippleRef = React.useRef(null);\n  var handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n      handleFocusVisible = _useIsFocusVisible.onFocus,\n      handleBlurVisible = _useIsFocusVisible.onBlur,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusVisible = _React$useState2[0],\n      setFocusVisible = _React$useState2[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mountedState = _React$useState4[0],\n      setMountedState = _React$useState4[1];\n\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleContextMenu = useRippleHandler('stop', onContextMenu);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  var handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  var ownerState = _extends({}, props, {\n    centerRipple: centerRipple,\n    component: component,\n    disabled: disabled,\n    disableRipple: disableRipple,\n    disableTouchRipple: disableTouchRipple,\n    focusRipple: focusRipple,\n    tabIndex: tabIndex,\n    focusVisible: focusVisible\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementTypeAcceptingRef","refType","unstable_composeClasses","composeClasses","styled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","buttonBaseClasses","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","disabled","focusVisible","focusVisibleClassName","classes","slots","root","composedClasses","ButtonBaseRoot","name","slot","overridesResolver","props","styles","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","centerRipple","children","className","component","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type","other","buttonRef","useRef","rippleRef","handleRippleRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","useState","setFocusVisible","useImperativeHandle","current","focus","mountedState","setMountedState","useEffect","enableTouchRipple","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","undefined","role","handleRef","process","env","NODE_ENV","console","error","join","as","center","propTypes","bool","node","object","string","any","elementType","func","sx","oneOfType","arrayOf","number","shape","isRequired","oneOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n  return composedClasses;\n};\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n  },\n\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n  const {\n      action,\n      centerRipple = false,\n      children,\n      className,\n      component = 'button',\n      disabled = false,\n      disableRipple = false,\n      disableTouchRipple = false,\n      focusRipple = false,\n      LinkComponent = 'a',\n      onBlur,\n      onClick,\n      onContextMenu,\n      onDragLeave,\n      onFocus,\n      onFocusVisible,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseLeave,\n      onMouseUp,\n      onTouchEnd,\n      onTouchMove,\n      onTouchStart,\n      tabIndex = 0,\n      TouchRippleProps,\n      touchRippleRef,\n      type\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n      const ignore = skipRippleAction;\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n  const buttonProps = {};\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"]},"metadata":{},"sourceType":"module"}