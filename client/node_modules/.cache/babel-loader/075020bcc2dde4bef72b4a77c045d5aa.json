{"ast":null,"code":"'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'];\n\n// Public methods list\nconst methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags);\n\n// Overrided methods list\nconst overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n  state.name = name;\n  state.enc = enc;\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\nconst stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function (child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) return arg;\n      const res = {};\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n    assert(state.tag === null);\n    state.tag = tag;\n    this._useArgs(args);\n    return this;\n  };\n});\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n  assert(state.use === null);\n  state.use = item;\n  return this;\n};\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n  state.optional = true;\n  return this;\n};\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n  return this;\n};\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n  return this;\n};\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n  return this;\n};\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n  state.obj = true;\n  if (args.length !== 0) this._useArgs(args);\n  return this;\n};\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n  assert(state.key === null);\n  state.key = newKey;\n  return this;\n};\nNode.prototype.any = function any() {\n  const state = this._baseState;\n  state.any = true;\n  return this;\n};\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key];\n  }));\n  return this;\n};\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n  assert(state.use === null);\n  state.contains = item;\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null) return input.wrapResult(state.children[0]._decode(input, options));\n  let result = state['default'];\n  let present = true;\n  let prevKey = null;\n  if (state.key !== null) prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null) tag = state.explicit;else if (state.implicit !== null) tag = state.implicit;else if (state.tag !== null) tag = state.tag;\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null) this._decodeGeneric(state.tag, input, options);else this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n      if (input.isError(present)) return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present) prevObj = input.enterObject();\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit)) return explicit;\n      input = explicit;\n    }\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any) save = input.save();\n      const body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n      if (input.isError(body)) return body;\n      if (state.any) result = input.raw(save);else input = body;\n    }\n    if (options && options.track && state.tag !== null) options.track(input.path(), start, input.length, 'tagged');\n    if (options && options.track && state.tag !== null) options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n    if (input.isError(result)) return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present) result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true)) input.leaveKey(prevKey, state.key, result);else if (prevKey !== null) input.exitKey(prevKey);\n  return result;\n};\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n  if (tag === 'seq' || tag === 'set') return null;\n  if (tag === 'seqof' || tag === 'setof') return this._decodeList(input, tag, state.args[0], options);else if (/str$/.test(tag)) return this._decodeStr(input, tag, options);else if (tag === 'objid' && state.args) return this._decodeObjid(input, state.args[0], state.args[1], options);else if (tag === 'objid') return this._decodeObjid(input, null, null, options);else if (tag === 'gentime' || tag === 'utctime') return this._decodeTime(input, tag, options);else if (tag === 'null_') return this._decodeNull(input, options);else if (tag === 'bool') return this._decodeBool(input, options);else if (tag === 'objDesc') return this._decodeStr(input, tag, options);else if (tag === 'int' || tag === 'enum') return this._decodeInt(input, state.args && state.args[0], options);\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\nNode.prototype._getUse = function _getUse(entity, obj) {\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value)) return false;\n      result = {\n        type: key,\n        value: value\n      };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n  if (!match) return input.error('Choice not matched');\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data) return;\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined) return;\n  if (this._skipDefault(result, reporter, parent)) return;\n  return result;\n};\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null) return state.children[0]._encode(data, reporter || new Reporter());\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null) data = state['default'];else return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') return child._encode(null, reporter, data);\n      if (child._baseState.key === null) return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n      if (typeof data !== 'object') return reporter.error('Child expected, but input is not object');\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n      return res;\n    }, this).filter(function (child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1)) return reporter.error('Too many args for : ' + state.tag);\n      if (!Array.isArray(data)) return reporter.error('seqof/setof, but data is not Array');\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState;\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n    if (tag === null) {\n      if (state.use === null) reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null) result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null) result = this._encodeComposite(state.explicit, false, 'context', result);\n  return result;\n};\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n  if (/str$/.test(tag)) return this._encodeStr(data, tag);else if (tag === 'objid' && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);else if (tag === 'objid') return this._encodeObjid(data, null, null);else if (tag === 'gentime' || tag === 'utctime') return this._encodeTime(data, tag);else if (tag === 'null_') return this._encodeNull();else if (tag === 'int' || tag === 'enum') return this._encodeInt(data, state.args && state.reverseArgs[0]);else if (tag === 'bool') return this._encodeBool(data);else if (tag === 'objDesc') return this._encodeStr(data, tag);else throw new Error('Unsupported tag: ' + tag);\n};\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};","map":{"version":3,"names":["Reporter","require","EncoderBuffer","DecoderBuffer","assert","tags","methods","concat","overrided","Node","enc","parent","name","state","_baseState","children","tag","args","reverseArgs","choice","optional","any","obj","use","useDecoder","key","explicit","implicit","contains","_wrap","module","exports","stateProps","prototype","clone","cstate","forEach","prop","res","constructor","wrap","method","_wrappedMethod","push","apply","arguments","_init","init","body","call","filter","child","equal","length","_useArgs","useArgs","arg","map","Object","keys","value","_overrided","Error","_tagMethod","Array","slice","item","def","val","num","newKey","_decode","decode","input","options","wrapResult","result","present","prevKey","enterKey","save","_decodeGeneric","_decodeChoice","e","restore","_peekTag","isError","prevObj","enterObject","_decodeTag","start","offset","raw","track","path","decodeChildren","data","_getUse","_reporterState","leaveObject","leaveKey","exitKey","decodeGeneric","_decodeList","test","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","error","entity","_use","decodeChoice","match","some","node","type","_createEncoderBuffer","createEncoderBuffer","reporter","_encode","encode","_encodeValue","undefined","_skipDefault","content","primitive","_encodeChoice","isArray","_encodePrimitive","cls","_encodeComposite","encodeChoice","JSON","stringify","encodePrimitive","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool","_isNumstr","isNumstr","str","_isPrintstr","isPrintstr"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/asn1.js/lib/asn1/base/node.js"],"sourcesContent":["'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}