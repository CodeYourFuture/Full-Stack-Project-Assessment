{"ast":null,"code":"// import \"./App.css\";\n// import React, { useState } from 'react';\n// import AddVideoForm from './AddVideoForm';\n// import videosData from './videosData'; // Import your local video data\n// import Upvote from \"./handleUpVote\";\n// import Downvote from \"./handleDownVote\";\n// import VideoList from './VideoList';\n// import VideoItem from './VideoItem';\n// function App({ video, onUpVote, onDownVote, onDelete }) {\n//   // const [videos, setVideos] = useState(videosData);\n//   const [deletedVideos, setDeletedVideos] = useState([]);\n//   const handleDelete = (videoId) => {\n//     // Update the deleted videos list\n//     setDeletedVideos((prevDeletedVideos) => [...prevDeletedVideos, videoId]);\n//   };\n//   // Filter out deleted videos from the original data\n//   const videosToShow = videosData.filter((video) => !deletedVideos.includes(video.id));\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h4>Video Recommendation</h4>\n//       </header>\n//       <Upvote />\n//       <Downvote />\n//       <VideoItem />\n//       <VideoList videos={videosToShow} onDelete={handleDelete} />\n//       <AddVideoForm />\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import \"./App.css\";\n// import React, { useState } from 'react';\n// import AddVideoForm from './AddVideoForm';\n// import videosData from './videosData'; // Import your local video data\n// import Upvote from \"./handleUpVote\";\n// import Downvote from \"./handleDownVote\";\n// import VideoList from './VideoList';\n// import VideoItem from './VideoItem';\n\n// function App({ video, onUpVote, onDownVote, onDelete }) {\n//   // const [videos, setVideos] = useState(videosData);\n//   const [deletedVideos, setDeletedVideos] = useState([]);\n\n//   const handleDelete = (videoId) => {\n//     // Update the deleted videos list\n//     setDeletedVideos((prevDeletedVideos) => [...prevDeletedVideos, videoId]);\n//   };\n\n//   // Filter out deleted videos from the original data\n//   const videosToShow = videosData.filter((video) => !deletedVideos.includes(video.id));\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h4>Video Recommendation</h4>\n//       </header>\n//       <Upvote />\n//       <Downvote />\n//       <VideoItem />\n//       <VideoList videos={videosToShow} onDelete={handleDelete} />\n//       <AddVideoForm />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}