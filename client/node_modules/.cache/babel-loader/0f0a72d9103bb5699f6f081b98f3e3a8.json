{"ast":null,"code":"var _jsxFileName = \"/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/src/Videos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ShowVideos from \"./ShowVideos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Videos(props) {\n  _s();\n\n  const [loadData, setLoadData] = useState([]);\n  const [titleData, setTitleData] = useState(\"\");\n  const [urlData, setUrlData] = useState(\"\"); // fetch(\"http://localhost:3000/videos\")\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //     return setLoadData(data);\n  //   });\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/videos\");\n\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n\n        const data = await response.json();\n        return setLoadData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    getData();\n  }, [setLoadData]);\n\n  function cancelBtnHandler(e) {\n    props.setShow(false);\n  }\n\n  function addClickHandeler(e) {\n    e.preventDefault();\n    const newVideo = {\n      title: titleData,\n      url: urlData\n    };\n    fetch(\"http://localhost:3000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVideo)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setLoadData(data);\n      setTitleData(\"\");\n      setUrlData(\"\");\n    }).catch(error => {\n      console.error(\"Error adding video:\", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.show && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formDiv\",\n      onSubmit: addClickHandeler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          onChange: e => setTitleData(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url\",\n          children: \"Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"url\",\n          onChange: e => setUrlData(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCancelBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelBtnHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), loadData.length > 0 ? loadData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showVideo\",\n        children: item.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletBtnHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No video yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Videos, \"hRwQAw4RCy89ad7Ui5yFZvkGOYc=\");\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/src/Videos.js"],"names":["React","useEffect","useState","ShowVideos","Videos","props","loadData","setLoadData","titleData","setTitleData","urlData","setUrlData","getData","response","fetch","ok","Error","data","json","error","console","cancelBtnHandler","e","setShow","addClickHandeler","preventDefault","newVideo","title","url","method","headers","body","JSON","stringify","then","log","catch","show","target","value","length","map","item","deletBtnHandler","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CAHqB,CAKrB;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;AACA,YAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,cAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,eAAOX,WAAW,CAACU,IAAD,CAAlB;AACD,OAPD,CAOE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,KAXD;;AAYAP,IAAAA,OAAO;AACR,GAdQ,EAcP,CAACL,WAAD,CAdO,CAAT;;AAgBA,WAASc,gBAAT,CAA0BC,CAA1B,EAA6B;AAE3BjB,IAAAA,KAAK,CAACkB,OAAN,CAAc,KAAd;AACD;;AAED,WAASC,gBAAT,CAA0BF,CAA1B,EAA6B;AAC3BA,IAAAA,CAAC,CAACG,cAAF;AACA,UAAMC,QAAQ,GAAG;AAAEC,MAAAA,KAAK,EAAEnB,SAAT;AAAoBoB,MAAAA,GAAG,EAAElB;AAAzB,KAAjB;AAEAI,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCe,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAL8B,KAAjC,CAAL,CAQGQ,IARH,CAQSrB,QAAD,IAAcA,QAAQ,CAACK,IAAT,EARtB,EASGgB,IATH,CASSjB,IAAD,IAAU;AACdG,MAAAA,OAAO,CAACe,GAAR,CAAYlB,IAAZ;AACAV,MAAAA,WAAW,CAACU,IAAD,CAAX;AAEAR,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAfH,EAgBCyB,KAhBD,CAgBQjB,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KAlBD;AAqBD;;AAGD,sBACE;AAAA,eACGd,KAAK,CAACgC,IAAN,iBACC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEb,gBAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,OADL;AAIE,UAAA,QAAQ,EAAGF,CAAD,IAAOb,YAAY,CAACa,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJ/B;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,KADL;AAGE,UAAA,QAAQ,EAAGjB,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACgB,MAAF,CAASC,KAAV,CAH7B;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAElB,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EA+BGf,QAAQ,CAACkC,MAAT,GAAkB,CAAlB,GACClC,QAAQ,CAACmC,GAAT,CAAcC,IAAD,iBACX;AAAA,8BACE;AAAA,kBAAIA,IAAI,CAACf;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4Be,IAAI,CAACd;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEe,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUD,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA,kBADF;AA6CD;;GAzGQxC,M;;KAAAA,M;AA0GT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport ShowVideos from \"./ShowVideos\";\n\nfunction Videos(props) {\n  const [loadData, setLoadData] = useState([]);\n  const [titleData, setTitleData] = useState(\"\");\n  const [urlData, setUrlData] = useState(\"\");\n\n  // fetch(\"http://localhost:3000/videos\")\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //     return setLoadData(data);\n  //   });\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/videos\");\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n        const data = await response.json();\n        return setLoadData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    getData();\n  },[setLoadData]);\n\n  function cancelBtnHandler(e) {\n   \n    props.setShow(false);\n  }\n\n  function addClickHandeler(e) {\n    e.preventDefault();\n    const newVideo = { title: titleData, url: urlData };\n    \n    fetch(\"http://localhost:3000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVideo),\n      \n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setLoadData(data);\n        \n        setTitleData(\"\");\n        setUrlData(\"\");\n      })\n    .catch((error) => {\n      console.error(\"Error adding video:\", error);\n    });\n\n\n  }\n\n  \n  return (\n    <>\n      {props.show && (\n        <form className=\"formDiv\" onSubmit={addClickHandeler}>\n          <div className=\"input-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              id=\"title\"\n              \n\n              onChange={(e) => setTitleData(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"url\">Url</label>\n            <input\n              id=\"url\"\n             \n              onChange={(e) => setUrlData(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"addCancelBtn\">\n            <button type=\"button\" onClick={cancelBtnHandler}>\n              Cancel\n            </button>\n            <button type=\"submit\">Add</button>\n          </div>\n        </form>\n      )}\n      {loadData.length > 0 ? (\n        loadData.map((item) => (\n          <div key={item.id}>\n            <p>{item.title}</p>\n            <div className=\"showVideo\">{item.url}</div>\n            <button onClick={deletBtnHandler}>Delete</button>\n          </div>\n        ))\n      ) : (\n        <p>No video yet.</p>\n      )}\n    </>\n  );\n}\nexport default Videos;\n"]},"metadata":{},"sourceType":"module"}