{"ast":null,"code":"var _jsxFileName = \"/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from 'react';\n// const VideoItem = ({ video, onDelete }) => {\n//   const [videos, setVideos] = useState([]);\n//   const handleUpVote = (videoToUpdate) => {\n//     // Update the vote count for the video\n//     const updatedVideosUpVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: video.votes + 1 }\n//         : video\n//     );\n//     setVideos(updatedVideosUpVote);\n//   };\n//   // Update the vote count for the video\n//   const handleDownVote = (videoToUpdate) => {\n//     const updatedVideosDownVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: Math.max(video.votes - 1, 0) }\n//         : video\n//     );\n//     setVideos(updatedVideosDownVote);\n//   };\n//   const videoId = video.url.split('v=')[1];\n//   return (\n//     <div className=\"video-item\">  \n//       <iframe \n//       width=\"560\" \n//       height=\"315\" \n//       src={`https://www.youtube.com/embed/${videoId}`} \n//       title=\"YouTube video player\" \n//       // frameborder=\"0\" \n//       allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n//       // allowfullscreen\n//       >\n//       </iframe>\n//       <h5>{video.title}</h5>\n//       <p>Votes: {video.rating}</p>\n//       <i onClick={() => handleUpVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i>\n//       <i onClick={() => handleDownVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i>\n//       <button\n//       onClick={() => onDelete(video.id)}\n//       type='button'\n//       className='btn btn-danger'\n//       >\n//         Delete\n//       </button>\n//     </div>\n//   ); \n// }\n// export default VideoItem;\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoItem = _ref => {\n  _s();\n\n  let {\n    video,\n    onDelete\n  } = _ref;\n  const [rating, setRating] = useState(video.rating);\n\n  const handleUpVote = () => {\n    // video.rating = video.rating + 1;\n    setRating(rating + 1);\n  };\n\n  const handleDownVote = () => {\n    video.rating = Math.max(video.rating - 1, 0);\n  };\n\n  const videoId = video.url.split('v=')[1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videoId}`,\n      title: \"YouTube video player\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes: \", video.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpVote(),\n      type: \"button\",\n      style: {\n        fontSize: '24px'\n      },\n      className: \"fa fa-thumbs-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownVote(),\n      type: \"button\",\n      style: {\n        fontSize: '24px'\n      },\n      className: \"fa fa-thumbs-down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(video.id),\n      type: \"button\",\n      className: \"btn btn-danger\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoItem, \"f3jip8S1KSIla2q/dUmG55SMBOk=\");\n\n_c = VideoItem;\nexport default VideoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoItem\");","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx"],"names":["React","useState","VideoItem","video","onDelete","rating","setRating","handleUpVote","handleDownVote","Math","max","videoId","url","split","title","fontSize","id"],"mappings":";;;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAsCA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACE,KAAK,CAACE,MAAP,CAApC;;AACA,QAAME,YAAY,GAAG,MAAM;AACzB;AACAD,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,GAHD;;AAKA,QAAMG,cAAc,GAAG,MAAM;AAC3BL,IAAAA,KAAK,CAACE,MAAN,GAAeI,IAAI,CAACC,GAAL,CAASP,KAAK,CAACE,MAAN,GAAe,CAAxB,EAA2B,CAA3B,CAAf;AACD,GAFD;;AAIA,QAAMM,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,MAAM,EAAC,KAFT;AAGE,MAAA,GAAG,EAAG,iCAAgCF,OAAQ,EAHhD;AAIE,MAAA,KAAK,EAAC,sBAJR;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBAAKR,KAAK,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,4BAAWX,KAAK,CAACE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAWE;AACE,MAAA,OAAO,EAAEE,YAAY,EADvB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE;AAAZ,OAHT;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE;AACE,MAAA,OAAO,EAAEP,cAAc,EADzB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAHT;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,YAnBF,eA2BE;AACE,MAAA,OAAO,EAAE,MAAMX,QAAQ,CAACD,KAAK,CAACa,EAAP,CADzB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAlDD;;GAAMd,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["// import React, {useState} from 'react';\n\n// const VideoItem = ({ video, onDelete }) => {\n//   const [videos, setVideos] = useState([]);\n\n//   const handleUpVote = (videoToUpdate) => {\n\n//     // Update the vote count for the video\n//     const updatedVideosUpVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: video.votes + 1 }\n//         : video\n//     );\n//     setVideos(updatedVideosUpVote);\n//   };\n\n//   // Update the vote count for the video\n//   const handleDownVote = (videoToUpdate) => {\n//     const updatedVideosDownVote = videos.map((video) =>\n//       video.id === videoToUpdate.id\n//         ? { ...video, votes: Math.max(video.votes - 1, 0) }\n//         : video\n//     );\n//     setVideos(updatedVideosDownVote);\n//   };\n\n\n//   const videoId = video.url.split('v=')[1];\n  \n//   return (\n//     <div className=\"video-item\">  \n//       <iframe \n//       width=\"560\" \n//       height=\"315\" \n//       src={`https://www.youtube.com/embed/${videoId}`} \n//       title=\"YouTube video player\" \n//       // frameborder=\"0\" \n//       allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n//       // allowfullscreen\n//       >\n//       </iframe>\n//       <h5>{video.title}</h5>\n//       <p>Votes: {video.rating}</p>\n\n//       <i onClick={() => handleUpVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i>\n\n//       <i onClick={() => handleDownVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i>\n      \n//       <button\n//       onClick={() => onDelete(video.id)}\n//       type='button'\n//       className='btn btn-danger'\n//       >\n//         Delete\n//       </button>\n//     </div>\n//   ); \n// }\n\n\n\n// export default VideoItem;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, {useState} from 'react';\n\nconst VideoItem = ({ video, onDelete }) => {\n  const [rating, setRating] = useState(video.rating)\n  const handleUpVote = () => {\n    // video.rating = video.rating + 1;\n    setRating(rating + 1)\n  };\n\n  const handleDownVote = () => {\n    video.rating = Math.max(video.rating - 1, 0);\n  };\n\n  const videoId = video.url.split('v=')[1];\n\n  return (\n    <div className=\"video-item\">\n      <iframe\n        width=\"560\"\n        height=\"315\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        title=\"YouTube video player\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      ></iframe>\n      <h5>{video.title}</h5>\n      <p>Votes: {video.rating}</p>\n\n      <button\n        onClick={handleUpVote()}\n        type=\"button\"\n        style={{ fontSize: '24px' }}\n        className=\"fa fa-thumbs-up\"\n      >\n      </button>\n\n      <button\n        onClick={handleDownVote()}\n        type=\"button\"\n        style={{ fontSize: '24px' }}\n        className=\"fa fa-thumbs-down\"\n      >\n      </button>\n\n      <button\n        onClick={() => onDelete(video.id)}\n        type=\"button\"\n        className=\"btn btn-danger\"\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default VideoItem;\n\n\n"]},"metadata":{},"sourceType":"module"}