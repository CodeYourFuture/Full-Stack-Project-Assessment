{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","map":{"version":3,"sources":["/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/node_modules/uuid/dist/commonjs-browser/stringify.js"],"names":["Object","defineProperty","exports","value","default","unsafeStringify","_validate","_interopRequireDefault","require","obj","__esModule","byteToHex","i","push","toString","slice","arr","offset","toLowerCase","stringify","uuid","TypeError","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACAF,OAAO,CAACG,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAtC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;;;AACA,MAAME,SAAS,GAAG,EAAlB;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyB,EAAEA,CAA3B,EAA8B;AAC5BD,EAAAA,SAAS,CAACE,IAAV,CAAe,CAACD,CAAC,GAAG,KAAL,EAAYE,QAAZ,CAAqB,EAArB,EAAyBC,KAAzB,CAA+B,CAA/B,CAAf;AACD;;AAED,SAASV,eAAT,CAAyBW,GAAzB,EAA0C;AAAA,MAAZC,MAAY,uEAAH,CAAG;AACxC;AACA;AACA,SAAO,CAACN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAT,GAA6BN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAtC,GAA0DN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAnE,GAAuFN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAhG,GAAoH,GAApH,GAA0HN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAnI,GAAuJN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAhK,GAAoL,GAApL,GAA0LN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAnM,GAAuNN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAhO,GAAoP,GAApP,GAA0PN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAnQ,GAAuRN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,CAAV,CAAJ,CAAhS,GAAoT,GAApT,GAA0TN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAAnU,GAAwVN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAAjW,GAAsXN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAA/X,GAAoZN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAA7Z,GAAkbN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAA3b,GAAgdN,SAAS,CAACK,GAAG,CAACC,MAAM,GAAG,EAAV,CAAJ,CAA1d,EAA8eC,WAA9e,EAAP;AACD;;AAED,SAASC,SAAT,CAAmBH,GAAnB,EAAoC;AAAA,MAAZC,MAAY,uEAAH,CAAG;AAClC,QAAMG,IAAI,GAAGf,eAAe,CAACW,GAAD,EAAMC,MAAN,CAA5B,CADkC,CACS;AAC3C;AACA;AACA;AACA;;AAEA,MAAI,CAAC,CAAC,GAAGX,SAAS,CAACF,OAAd,EAAuBgB,IAAvB,CAAL,EAAmC;AACjC,UAAMC,SAAS,CAAC,6BAAD,CAAf;AACD;;AAED,SAAOD,IAAP;AACD;;AAED,IAAIE,QAAQ,GAAGH,SAAf;AACAjB,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}