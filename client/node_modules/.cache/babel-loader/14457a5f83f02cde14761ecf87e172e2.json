{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n      _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    open,\n    TransitionComponent = Grow,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  }; // So we only render active snackbars.\n\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The anchor of the `Snackbar`.\r\n   * On smaller screens, the component grows to occupy all the available width,\r\n   * the horizontal alignment is ignored.\r\n   * @default { vertical: 'bottom', horizontal: 'left' }\r\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\r\n   * Replace the `SnackbarContent` component.\r\n   */\n  children: PropTypes.element,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Props applied to the `ClickAwayListener` element.\r\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\r\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\r\n   */\n  ContentProps: PropTypes.object,\n\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\r\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\r\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\r\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\r\n   * features such as autoHideDuration may be canceled.\r\n   */\n  key: () => null,\n\n  /**\r\n   * The message to display.\r\n   */\n  message: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Grow\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default {\r\n   *   enter: theme.transitions.duration.enteringScreen,\r\n   *   exit: theme.transitions.duration.leavingScreen,\r\n   * }\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\r\n   * @default {}\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","unstable_composeClasses","composeClasses","useSlotProps","ClickAwayListener","useSnackbar","styled","useTheme","useThemeProps","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","anchorOrigin","slots","root","vertical","horizontal","SnackbarRoot","name","slot","overridesResolver","props","styles","theme","center","left","right","transform","zIndex","vars","snackbar","position","display","justifyContent","alignItems","top","bottom","breakpoints","up","Snackbar","forwardRef","inProps","ref","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","open","TransitionComponent","transitionDuration","TransitionProps","onEnter","onExited","other","getRootProps","onClickAway","exited","setExited","useState","rootProps","elementType","getSlotProps","externalForwardedProps","additionalProps","handleExited","node","handleEnter","isAppearing","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","onBlur","func","onClose","onFocus","onMouseEnter","onMouseLeave","resumeHideDuration","sx","oneOfType","arrayOf"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"onEnter\", \"onExited\"],\r\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\r\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\r\nimport { useSnackbar } from '@mui/base/useSnackbar';\r\nimport styled from '../styles/styled';\r\nimport useTheme from '../styles/useTheme';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport capitalize from '../utils/capitalize';\r\nimport Grow from '../Grow';\r\nimport SnackbarContent from '../SnackbarContent';\r\nimport { getSnackbarUtilityClass } from './snackbarClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    anchorOrigin\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\r\n  };\r\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\r\n};\r\nconst SnackbarRoot = styled('div', {\r\n  name: 'MuiSnackbar',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  const center = {\r\n    left: '50%',\r\n    right: 'auto',\r\n    transform: 'translateX(-50%)'\r\n  };\r\n  return _extends({\r\n    zIndex: (theme.vars || theme).zIndex.snackbar,\r\n    position: 'fixed',\r\n    display: 'flex',\r\n    left: 8,\r\n    right: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\r\n    top: 8\r\n  } : {\r\n    bottom: 8\r\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\r\n    justifyContent: 'flex-start'\r\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\r\n    justifyContent: 'flex-end'\r\n  }, {\r\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\r\n      top: 24\r\n    } : {\r\n      bottom: 24\r\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\r\n      left: 24,\r\n      right: 'auto'\r\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\r\n      right: 24,\r\n      left: 'auto'\r\n    })\r\n  });\r\n});\r\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiSnackbar'\r\n  });\r\n  const theme = useTheme();\r\n  const defaultTransitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen\r\n  };\r\n  const {\r\n      action,\r\n      anchorOrigin: {\r\n        vertical,\r\n        horizontal\r\n      } = {\r\n        vertical: 'bottom',\r\n        horizontal: 'left'\r\n      },\r\n      autoHideDuration = null,\r\n      children,\r\n      className,\r\n      ClickAwayListenerProps,\r\n      ContentProps,\r\n      disableWindowBlurListener = false,\r\n      message,\r\n      open,\r\n      TransitionComponent = Grow,\r\n      transitionDuration = defaultTransitionDuration,\r\n      TransitionProps: {\r\n        onEnter,\r\n        onExited\r\n      } = {}\r\n    } = props,\r\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\r\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\r\n  const ownerState = _extends({}, props, {\r\n    anchorOrigin: {\r\n      vertical,\r\n      horizontal\r\n    },\r\n    autoHideDuration,\r\n    disableWindowBlurListener,\r\n    TransitionComponent,\r\n    transitionDuration\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const {\r\n    getRootProps,\r\n    onClickAway\r\n  } = useSnackbar(_extends({}, ownerState));\r\n  const [exited, setExited] = React.useState(true);\r\n  const rootProps = useSlotProps({\r\n    elementType: SnackbarRoot,\r\n    getSlotProps: getRootProps,\r\n    externalForwardedProps: other,\r\n    ownerState,\r\n    additionalProps: {\r\n      ref\r\n    },\r\n    className: [classes.root, className]\r\n  });\r\n  const handleExited = node => {\r\n    setExited(true);\r\n    if (onExited) {\r\n      onExited(node);\r\n    }\r\n  };\r\n  const handleEnter = (node, isAppearing) => {\r\n    setExited(false);\r\n    if (onEnter) {\r\n      onEnter(node, isAppearing);\r\n    }\r\n  };\r\n\r\n  // So we only render active snackbars.\r\n  if (!open && exited) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\r\n    onClickAway: onClickAway\r\n  }, ClickAwayListenerProps, {\r\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\r\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\r\n        appear: true,\r\n        in: open,\r\n        timeout: transitionDuration,\r\n        direction: vertical === 'top' ? 'down' : 'up',\r\n        onEnter: handleEnter,\r\n        onExited: handleExited\r\n      }, TransitionProps, {\r\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\r\n          message: message,\r\n          action: action\r\n        }, ContentProps))\r\n      }))\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\r\n  action: PropTypes.node,\r\n  /**\r\n   * The anchor of the `Snackbar`.\r\n   * On smaller screens, the component grows to occupy all the available width,\r\n   * the horizontal alignment is ignored.\r\n   * @default { vertical: 'bottom', horizontal: 'left' }\r\n   */\r\n  anchorOrigin: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\r\n  }),\r\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\r\n  autoHideDuration: PropTypes.number,\r\n  /**\r\n   * Replace the `SnackbarContent` component.\r\n   */\r\n  children: PropTypes.element,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Props applied to the `ClickAwayListener` element.\r\n   */\r\n  ClickAwayListenerProps: PropTypes.object,\r\n  /**\r\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\r\n   */\r\n  ContentProps: PropTypes.object,\r\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\r\n  disableWindowBlurListener: PropTypes.bool,\r\n  /**\r\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\r\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\r\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\r\n   * features such as autoHideDuration may be canceled.\r\n   */\r\n  key: () => null,\r\n  /**\r\n   * The message to display.\r\n   */\r\n  message: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseEnter: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseLeave: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\r\n  resumeHideDuration: PropTypes.number,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Grow\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default {\r\n   *   enter: theme.transitions.duration.enteringScreen,\r\n   *   exit: theme.transitions.duration.leavingScreen,\r\n   * }\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\r\n   * @default {}\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}