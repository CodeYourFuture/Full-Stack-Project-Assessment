{"ast":null,"code":"var _jsxFileName = \"/home/cyf/Documents/GitHub/Full-Stack-Project-Assessment/client/src/SingleVideoCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport exampleResponse from \"./exampleResponse.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleVideoCard(_ref) {\n  _s();\n\n  let {\n    title,\n    url,\n    videoId\n  } = _ref;\n  const [count, setCount] = useState(0);\n  const [filterVideos, setFilterVideos] = useState(exampleResponse);\n\n  function minusCount() {\n    setCount(prevCount => prevCount - 1);\n  }\n\n  function plusCount() {\n    setCount(prevCount => prevCount + 1);\n  }\n\n  if (!url) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No video URL provided.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  function handleDelete(videoId) {\n    const updatedVideo = filterVideos.filter(video => video.id !== videoId);\n    setFilterVideos(updatedVideo);\n    console.log(\"Im working\");\n  }\n\n  const urlId = url.split(\"v=\")[1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"card-thumb\",\n        width: \"320\",\n        height: \"320\",\n        src: `https://www.youtube.com/embed/${urlId}`,\n        title: \"YouTube video player\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: minusCount,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: plusCount,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Paragraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => handleDelete(videoId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleVideoCard, \"C9sGiXMP+ZYnfUzyemXSXXrrT6k=\");\n\n_c = SingleVideoCard;\nexport default SingleVideoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleVideoCard\");","map":{"version":3,"sources":["/home/cyf/Documents/GitHub/Full-Stack-Project-Assessment/client/src/SingleVideoCard.js"],"names":["React","useState","exampleResponse","SingleVideoCard","title","url","videoId","count","setCount","filterVideos","setFilterVideos","minusCount","prevCount","plusCount","handleDelete","updatedVideo","filter","video","id","console","log","urlId","split"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;;AAEA,SAASC,eAAT,OAAkD;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,GAAyB;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAACC,eAAD,CAAhD;;AAEA,WAASS,UAAT,GAAsB;AACpBH,IAAAA,QAAQ,CAAEI,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAR;AACD;;AAED,WAASC,SAAT,GAAqB;AACnBL,IAAAA,QAAQ,CAAEI,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAR;AACD;;AACD,MAAI,CAACP,GAAL,EAAU;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,WAASS,YAAT,CAAsBR,OAAtB,EAA+B;AAC7B,UAAMS,YAAY,GAAGN,YAAY,CAACO,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaZ,OAA5C,CAArB;AACAI,IAAAA,eAAe,CAACK,YAAD,CAAf;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;;AAED,QAAMC,KAAK,GAAGhB,GAAG,CAACiB,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAd;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,GAAG,EAAG,iCAAgCD,KAAM,EAJ9C;AAKE,QAAA,KAAK,EAAC,sBALR;AAME,QAAA,KAAK,EAAC,0FANR;AAOE,QAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEV,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,OAAO,EAAE,MAAMU,YAAY,CAACR,OAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAlDQH,e;;KAAAA,e;AAmDT,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport exampleResponse from \"./exampleResponse.json\";\n\nfunction SingleVideoCard({ title, url, videoId }) {\n  const [count, setCount] = useState(0);\n  const [filterVideos, setFilterVideos] = useState(exampleResponse);\n\n  function minusCount() {\n    setCount((prevCount) => prevCount - 1);\n  }\n\n  function plusCount() {\n    setCount((prevCount) => prevCount + 1);\n  }\n  if (!url) {\n    return <div>No video URL provided.</div>;\n  }\n\n  function handleDelete(videoId) {\n    const updatedVideo = filterVideos.filter((video) => video.id !== videoId);\n    setFilterVideos(updatedVideo);\n    console.log(\"Im working\");\n  }\n\n  const urlId = url.split(\"v=\")[1];\n  return (\n    <div className=\"card-container\">\n      <div className=\"card\">\n        <iframe\n          className=\"card-thumb\"\n          width=\"320\"\n          height=\"320\"\n          src={`https://www.youtube.com/embed/${urlId}`}\n          title=\"YouTube video player\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n        <div className=\"card-body\">\n          <button onClick={minusCount}>-</button>\n          <span>{count}</span>\n          <button onClick={plusCount}>+</button>\n          <h2>{title}</h2>\n          <p>Paragraph</p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => handleDelete(videoId)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default SingleVideoCard;\n"]},"metadata":{},"sourceType":"module"}