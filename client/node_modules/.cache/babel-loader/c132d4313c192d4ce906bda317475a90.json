{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\levil\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\components\\\\VideosComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AddAndSearchVideo from './AddAndSearchVideo';\nimport Videos from './Videos'; // import data from '../exampleresponse.json'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainVideosComponent = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n\n  const fetchVideosData = async () => {\n    const url = 'https://omer-cyf-video-recommendation.herokuapp.com'; //https://omer-cyf-video-recommendation.herokuapp.com/\n    //http://127.0.0.1:5000\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status === 200) {\n        const json = await response.json();\n        setVideos(json);\n      } else {\n        const json = response.json();\n        alert(json.msg);\n      }\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideosData();\n  }, []);\n\n  const search = searchVal => {\n    searchVal = searchVal.toLowerCase();\n    const searchedVideos = videos.filter(video => video.title.toLowerCase().includes(searchVal));\n    setVideos(searchedVideos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(AddAndSearchVideo, {\n      videos: videos,\n      setVideos: setVideos,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Videos, {\n      videos: videos,\n      setVideos: setVideos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MainVideosComponent, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = MainVideosComponent;\nexport default MainVideosComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainVideosComponent\");","map":{"version":3,"sources":["C:/Users/levil/Documents/GitHub/Full-Stack-Project-Assessment/client/src/components/VideosComponent.js"],"names":["React","useState","useEffect","AddAndSearchVideo","Videos","MainVideosComponent","videos","setVideos","fetchVideosData","url","response","fetch","status","json","alert","msg","error","console","log","search","searchVal","toLowerCase","searchedVideos","filter","video","title","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMO,eAAe,GAAG,YAAY;AACnC,UAAMC,GAAG,GAAG,qDAAZ,CADmC,CAEnC;AACA;;AACA,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AACA,UAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,cAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAN,QAAAA,SAAS,CAACM,IAAD,CAAT;AACA,OAHD,MAGO;AACN,cAAMA,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAb;AACAC,QAAAA,KAAK,CAACD,IAAI,CAACE,GAAN,CAAL;AACA;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA;AACD,GAhBD;;AAiBAd,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,eAAe;AACf,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMW,MAAM,GAAIC,SAAD,IAAe;AAC7BA,IAAAA,SAAS,GAAGA,SAAS,CAACC,WAAV,EAAZ;AACA,UAAMC,cAAc,GAAGhB,MAAM,CAACiB,MAAP,CAAeC,KAAD,IACpCA,KAAK,CAACC,KAAN,CAAYJ,WAAZ,GAA0BK,QAA1B,CAAmCN,SAAnC,CADsB,CAAvB;AAGAb,IAAAA,SAAS,CAACe,cAAD,CAAT;AACA,GAND;;AAOA,sBACC;AAAA,4BACC,QAAC,iBAAD;AACC,MAAA,MAAM,EAAEhB,MADT;AAEC,MAAA,SAAS,EAAEC,SAFZ;AAGC,MAAA,MAAM,EAAEY;AAHT;AAAA;AAAA;AAAA;AAAA,YADD,eAMC,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEb,MAAhB;AAAwB,MAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAvCD;;GAAMF,mB;;KAAAA,mB;AAyCN,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AddAndSearchVideo from './AddAndSearchVideo';\r\nimport Videos from './Videos';\r\n// import data from '../exampleresponse.json'\r\n\r\nconst MainVideosComponent = () => {\r\n\tconst [videos, setVideos] = useState([]);\r\n\tconst fetchVideosData = async () => {\r\n\t\tconst url = 'https://omer-cyf-video-recommendation.herokuapp.com';\r\n\t\t//https://omer-cyf-video-recommendation.herokuapp.com/\r\n\t\t//http://127.0.0.1:5000\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tconst json = await response.json();\r\n\t\t\t\tsetVideos(json);\r\n\t\t\t} else {\r\n\t\t\t\tconst json = response.json();\r\n\t\t\t\talert(json.msg);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error);\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchVideosData();\r\n\t}, []);\r\n\tconst search = (searchVal) => {\r\n\t\tsearchVal = searchVal.toLowerCase();\r\n\t\tconst searchedVideos = videos.filter((video) =>\r\n\t\t\tvideo.title.toLowerCase().includes(searchVal),\r\n\t\t);\r\n\t\tsetVideos(searchedVideos);\r\n\t};\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<AddAndSearchVideo\r\n\t\t\t\tvideos={videos}\r\n\t\t\t\tsetVideos={setVideos}\r\n\t\t\t\tsearch={search}\r\n\t\t\t/>\r\n\t\t\t<Videos videos={videos} setVideos={setVideos} />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MainVideosComponent;\r\n"]},"metadata":{},"sourceType":"module"}