{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useOption API](https://mui.com/base-ui/react-select/hooks-api/#use-option)\n */\n\nexport function useOption(params) {\n  var value = params.value,\n      label = params.label,\n      disabled = params.disabled,\n      optionRefParam = params.rootRef,\n      idParam = params.id;\n\n  var _useListItem = useListItem({\n    item: value\n  }),\n      getListItemProps = _useListItem.getRootProps,\n      listItemRefHandler = _useListItem.rootRef,\n      highlighted = _useListItem.highlighted,\n      selected = _useListItem.selected;\n\n  var id = useId(idParam);\n  var optionRef = React.useRef(null);\n  var selectOption = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      label: label,\n      value: value,\n      ref: optionRef,\n      id: id\n    };\n  }, [disabled, label, value, id]);\n\n  var _useCompoundItem = useCompoundItem(value, selectOption),\n      index = _useCompoundItem.index;\n\n  var handleRef = useForkRef(optionRefParam, optionRef, listItemRefHandler);\n  return {\n    getRootProps: function getRootProps() {\n      var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({}, otherHandlers, getListItemProps(otherHandlers), {\n        id: id,\n        ref: handleRef,\n        role: 'option',\n        'aria-selected': selected\n      });\n    },\n    highlighted: highlighted,\n    index: index,\n    selected: selected,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useOption/useOption.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","useListItem","useCompoundItem","useOption","params","value","label","disabled","optionRefParam","rootRef","idParam","id","item","getListItemProps","getRootProps","listItemRefHandler","highlighted","selected","optionRef","useRef","selectOption","useMemo","ref","index","handleRef","otherHandlers","role"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAmB,IAAIC,UAAhC,EAA4CC,cAAc,IAAIC,KAA9D,QAA2E,YAA3E;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAChC,MACEC,KADF,GAMID,MANJ,CACEC,KADF;AAAA,MAEEC,KAFF,GAMIF,MANJ,CAEEE,KAFF;AAAA,MAGEC,QAHF,GAMIH,MANJ,CAGEG,QAHF;AAAA,MAIWC,cAJX,GAMIJ,MANJ,CAIEK,OAJF;AAAA,MAKMC,OALN,GAMIN,MANJ,CAKEO,EALF;;AAOA,qBAKIV,WAAW,CAAC;AACdW,IAAAA,IAAI,EAAEP;AADQ,GAAD,CALf;AAAA,MACgBQ,gBADhB,gBACEC,YADF;AAAA,MAEWC,kBAFX,gBAEEN,OAFF;AAAA,MAGEO,WAHF,gBAGEA,WAHF;AAAA,MAIEC,QAJF,gBAIEA,QAJF;;AAQA,MAAMN,EAAE,GAAGX,KAAK,CAACU,OAAD,CAAhB;AACA,MAAMQ,SAAS,GAAGtB,KAAK,CAACuB,MAAN,CAAa,IAAb,CAAlB;AACA,MAAMC,YAAY,GAAGxB,KAAK,CAACyB,OAAN,CAAc;AAAA,WAAO;AACxCd,MAAAA,QAAQ,EAARA,QADwC;AAExCD,MAAAA,KAAK,EAALA,KAFwC;AAGxCD,MAAAA,KAAK,EAALA,KAHwC;AAIxCiB,MAAAA,GAAG,EAAEJ,SAJmC;AAKxCP,MAAAA,EAAE,EAAFA;AALwC,KAAP;AAAA,GAAd,EAMjB,CAACJ,QAAD,EAAWD,KAAX,EAAkBD,KAAlB,EAAyBM,EAAzB,CANiB,CAArB;;AAOA,yBAEIT,eAAe,CAACG,KAAD,EAAQe,YAAR,CAFnB;AAAA,MACEG,KADF,oBACEA,KADF;;AAGA,MAAMC,SAAS,GAAG1B,UAAU,CAACU,cAAD,EAAiBU,SAAjB,EAA4BH,kBAA5B,CAA5B;AACA,SAAO;AACLD,IAAAA,YAAY,EAAE;AAAA,UAACW,aAAD,uEAAiB,EAAjB;AAAA,aAAwB9B,QAAQ,CAAC,EAAD,EAAK8B,aAAL,EAAoBZ,gBAAgB,CAACY,aAAD,CAApC,EAAqD;AACjGd,QAAAA,EAAE,EAAFA,EADiG;AAEjGW,QAAAA,GAAG,EAAEE,SAF4F;AAGjGE,QAAAA,IAAI,EAAE,QAH2F;AAIjG,yBAAiBT;AAJgF,OAArD,CAAhC;AAAA,KADT;AAOLD,IAAAA,WAAW,EAAXA,WAPK;AAQLO,IAAAA,KAAK,EAALA,KARK;AASLN,IAAAA,QAAQ,EAARA,QATK;AAULR,IAAAA,OAAO,EAAEe;AAVJ,GAAP;AAYD","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { useListItem } from '../useList';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useOption API](https://mui.com/base-ui/react-select/hooks-api/#use-option)\n */\nexport function useOption(params) {\n  const {\n    value,\n    label,\n    disabled,\n    rootRef: optionRefParam,\n    id: idParam\n  } = params;\n  const {\n    getRootProps: getListItemProps,\n    rootRef: listItemRefHandler,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const id = useId(idParam);\n  const optionRef = React.useRef(null);\n  const selectOption = React.useMemo(() => ({\n    disabled,\n    label,\n    value,\n    ref: optionRef,\n    id\n  }), [disabled, label, value, id]);\n  const {\n    index\n  } = useCompoundItem(value, selectOption);\n  const handleRef = useForkRef(optionRefParam, optionRef, listItemRefHandler);\n  return {\n    getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getListItemProps(otherHandlers), {\n      id,\n      ref: handleRef,\n      role: 'option',\n      'aria-selected': selected\n    }),\n    highlighted,\n    index,\n    selected,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}