{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div')(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  }, ownerState.anchor === 'left' && {\n    right: 'auto'\n  }, ownerState.anchor === 'right' && {\n    left: 'auto',\n    right: 0\n  }, ownerState.anchor === 'top' && {\n    bottom: 'auto',\n    right: 0\n  }, ownerState.anchor === 'bottom' && {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  });\n});\n/**\r\n * @ignore - internal component.\r\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: _extends({\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }, style),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\r\n   * Side on which to attach the discovery area.\r\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  style: PropTypes.object,\n\n  /**\r\n   * The width of the left most (or right most) area in `px` where the\r\n   * drawer can be swiped open from.\r\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/SwipeableDrawer/SwipeArea.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","styled","capitalize","isHorizontal","jsx","_jsx","SwipeAreaRoot","theme","ownerState","position","top","left","bottom","zIndex","drawer","anchor","right","SwipeArea","forwardRef","props","ref","classes","className","width","style","other","root","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styled from '../styles/styled';\r\nimport capitalize from '../utils/capitalize';\r\nimport { isHorizontal } from '../Drawer/Drawer';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst SwipeAreaRoot = styled('div')(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  zIndex: theme.zIndex.drawer - 1\r\n}, ownerState.anchor === 'left' && {\r\n  right: 'auto'\r\n}, ownerState.anchor === 'right' && {\r\n  left: 'auto',\r\n  right: 0\r\n}, ownerState.anchor === 'top' && {\r\n  bottom: 'auto',\r\n  right: 0\r\n}, ownerState.anchor === 'bottom' && {\r\n  top: 'auto',\r\n  bottom: 0,\r\n  right: 0\r\n}));\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\r\n  const {\r\n      anchor,\r\n      classes = {},\r\n      className,\r\n      width,\r\n      style\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const ownerState = props;\r\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\r\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\r\n    ref: ref,\r\n    style: _extends({\r\n      [isHorizontal(anchor) ? 'width' : 'height']: width\r\n    }, style),\r\n    ownerState: ownerState\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\r\n  /**\r\n   * Side on which to attach the discovery area.\r\n   */\r\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object,\r\n  /**\r\n   * The width of the left most (or right most) area in `px` where the\r\n   * drawer can be swiped open from.\r\n   */\r\n  width: PropTypes.number.isRequired\r\n} : void 0;\r\nexport default SwipeArea;"]},"metadata":{},"sourceType":"module"}