{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n//   const fetchVideos = () => {\n//     fetch(\"http://localhost:5000/videos\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setVideos(data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   const handleAddVideo = (title, url) => {\n//     const video = {\n//       title: title,\n//       url: url,\n//     };\n//     fetch(\"http://localhost:5000/videos\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(video),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video added successfully\n//           fetchVideos(); // Fetch the updated list of videos\n//         } else {\n//           // Failed to add video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   const handleVote = (videoId, increment) => {\n//     const updatedVideos = videos.map((video) => {\n//       if (video.id === videoId) {\n//         return { ...video, votes: video.votes + increment };\n//       }\n//       return video;\n//     });\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         votes: updatedVideos.find((video) => video.id === videoId).votes,\n//       }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Vote updated successfully\n//           setVideos(updatedVideos);\n//         } else {\n//           // Failed to update vote\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   const handleRemoveVideo = (videoId) => {\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video removed successfully\n//           setVideos(videos.filter((video) => video.id !== videoId));\n//         } else {\n//           // Failed to remove video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   return (\n//     <div>\n//       <h1>Video Website</h1>\n//       <VideoList\n//         videos={videos}\n//         handleVote={handleVote}\n//         handleRemove={handleRemoveVideo}\n//       />\n//       <AddVideoForm handleAddVideo={handleAddVideo} />\n//     </div>\n//   );\n// };\n// export default App;\nimport React, { useEffect, useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const fetchVideos = () => {\n    fetch(\"http://localhost:5000/videos\").then(response => response.json()).then(data => {\n      setVideos(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const handleAddVideo = (title, url) => {\n    const video = {\n      title: title,\n      url: url\n    };\n    fetch(\"http://localhost:5000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(video)\n    }).then(response => response.json()).then(data => {\n      if (data.id) {\n        fetchVideos();\n      } else {\n        console.error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddVideoForm, {\n      handleAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useEffect","useState","VideoList","AddVideoForm","App","videos","setVideos","fetchVideos","fetch","then","response","json","data","catch","error","console","handleAddVideo","title","url","video","method","headers","body","JSON","stringify","id"],"mappingsgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdN,MAAAA,SAAS,CAACM,IAAD,CAAT;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAPH;AAQD,GATD;;AAWA,QAAME,cAAc,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrC,UAAMC,KAAK,GAAG;AACZF,MAAAA,KAAK,EAAEA,KADK;AAEZC,MAAAA,GAAG,EAAEA;AAFO,KAAd;AAKAV,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCY,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAL8B,KAAjC,CAAL,CAOGV,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACd,UAAIA,IAAI,CAACa,EAAT,EAAa;AACXlB,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLQ,QAAAA,OAAO,CAACD,KAAR,CAAcF,IAAI,CAACE,KAAnB;AACD;AACF,KAdH,EAeGD,KAfH,CAeUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAjBH;AAkBD,GAxBD;;AA0BA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAET;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,cAAc,EAAEW;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnDD;;GAAMZ,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n\n//   const fetchVideos = () => {\n//     fetch(\"http://localhost:5000/videos\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setVideos(data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleAddVideo = (title, url) => {\n//     const video = {\n//       title: title,\n//       url: url,\n//     };\n\n//     fetch(\"http://localhost:5000/videos\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(video),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video added successfully\n//           fetchVideos(); // Fetch the updated list of videos\n//         } else {\n//           // Failed to add video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleVote = (videoId, increment) => {\n//     const updatedVideos = videos.map((video) => {\n//       if (video.id === videoId) {\n//         return { ...video, votes: video.votes + increment };\n//       }\n//       return video;\n//     });\n\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         votes: updatedVideos.find((video) => video.id === videoId).votes,\n//       }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Vote updated successfully\n//           setVideos(updatedVideos);\n//         } else {\n//           // Failed to update vote\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleRemoveVideo = (videoId) => {\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video removed successfully\n//           setVideos(videos.filter((video) => video.id !== videoId));\n//         } else {\n//           // Failed to remove video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Video Website</h1>\n//       <VideoList\n//         videos={videos}\n//         handleVote={handleVote}\n//         handleRemove={handleRemoveVideo}\n//       />\n//       <AddVideoForm handleAddVideo={handleAddVideo} />\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useEffect, useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const fetchVideos = () => {\n    fetch(\"http://localhost:5000/videos\")\n      .then((response) => response.json())\n      .then((data) => {\n        setVideos(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleAddVideo = (title, url) => {\n    const video = {\n      title: title,\n      url: url,\n    };\n\n    fetch(\"http://localhost:5000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(video),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.id) {\n          fetchVideos();\n        } else {\n          console.error(data.error);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Video Website</h1>\n      <VideoList videos={videos} />\n      <AddVideoForm handleAddVideo={handleAddVideo} />\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}