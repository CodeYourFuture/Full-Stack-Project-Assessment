{"ast":null,"code":"var _objectSpread = require(\"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _require = require('util'),\n  promisify = _require.promisify;\nvar fs = require('fs');\nvar optsArg = function optsArg(opts) {\n  if (!opts) opts = {\n    mode: 511,\n    fs: fs\n  };else if (typeof opts === 'object') opts = _objectSpread({\n    mode: 511,\n    fs: fs\n  }, opts);else if (typeof opts === 'number') opts = {\n    mode: opts,\n    fs: fs\n  };else if (typeof opts === 'string') opts = {\n    mode: parseInt(opts, 8),\n    fs: fs\n  };else throw new TypeError('invalid options argument');\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir;\n  opts.mkdirAsync = promisify(opts.mkdir);\n  opts.stat = opts.stat || opts.fs.stat || fs.stat;\n  opts.statAsync = promisify(opts.stat);\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync;\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync;\n  return opts;\n};\nmodule.exports = optsArg;","map":null,"metadata":{},"sourceType":"script"}