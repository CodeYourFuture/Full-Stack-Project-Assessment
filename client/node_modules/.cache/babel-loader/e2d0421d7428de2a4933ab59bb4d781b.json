{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onura\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\VideoTable.js\";\nimport React from 'react'; // Function to convert watch link to embed link\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction convertWatchToEmbedLink(watchLink) {\n  const watchPattern = /https:\\/\\/www\\.youtube\\.com\\/watch\\?v=([A-Za-z0-9_-]+)/;\n  const match = watchLink.match(watchPattern);\n\n  if (match && match.length === 2) {\n    const videoId = match[1];\n    const embedLink = `https://www.youtube.com/embed/${videoId}`;\n    return embedLink;\n  } else {\n    return watchLink;\n  }\n} // Rating component\n\n\nconst Rating = _ref => {// Your Rating component code here\n\n  let {\n    video,\n    handleVote,\n    handleRemove\n  } = _ref;\n};\n\n_c = Rating;\n\nconst VideoTable = _ref2 => {\n  let {\n    videos,\n    handleVote,\n    handleRemove\n  } = _ref2;\n  // Your VideoTable component code here\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-cards\",\n    children: videos.map(video => {\n      const uploadDate = new Date(Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000);\n      const videoUrl = video.url.startsWith('https://www.youtube.com/watch?v=') ? convertWatchToEmbedLink(video.url) : video.url;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"anything\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: videoUrl,\n            title: video.title,\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          video: video,\n          handleVote: handleVote,\n          handleRemove: handleRemove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Uploaded: \", uploadDate.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = VideoTable;\nexport default VideoTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Rating\");\n$RefreshReg$(_c2, \"VideoTable\");","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoTable.js"],"names":["React","convertWatchToEmbedLink","watchLink","watchPattern","match","length","videoId","embedLink","Rating","video","handleVote","handleRemove","VideoTable","videos","map","uploadDate","Date","now","Math","floor","random","videoUrl","url","startsWith","title","toLocaleString","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,SAASC,uBAAT,CAAiCC,SAAjC,EAA4C;AAC1C,QAAMC,YAAY,GAAG,wDAArB;AACA,QAAMC,KAAK,GAAGF,SAAS,CAACE,KAAV,CAAgBD,YAAhB,CAAd;;AAEA,MAAIC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAA9B,EAAiC;AAC/B,UAAMC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAArB;AACA,UAAMG,SAAS,GAAI,iCAAgCD,OAAQ,EAA3D;AACA,WAAOC,SAAP;AACD,GAJD,MAIO;AACL,WAAOL,SAAP;AACD;AACF,C,CAGD;;;AACA,MAAMM,MAAM,GAAG,QAAyC,CACtD;;AADsD,MAAxC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,GAAwC;AAEvD,CAFD;;KAAMH,M;;AAIN,MAAMI,UAAU,GAAG,SAA0C;AAAA,MAAzC;AAAEC,IAAAA,MAAF;AAAUH,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,GAAyC;AAC3D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGE,MAAM,CAACC,GAAP,CAAYL,KAAD,IAAW;AACrB,YAAMM,UAAU,GAAG,IAAIC,IAAJ,CACjBA,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAjC,GAAsC,EAAtC,GAA2C,EAA3C,GAAgD,IAD5C,CAAnB;AAIA,YAAMC,QAAQ,GAAGZ,KAAK,CAACa,GAAN,CAAUC,UAAV,CAAqB,kCAArB,IACbtB,uBAAuB,CAACQ,KAAK,CAACa,GAAP,CADV,GAEbb,KAAK,CAACa,GAFV;AAIA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA,oBAAKb,KAAK,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAQ,YAAA,GAAG,EAAEH,QAAb;AAAuB,YAAA,KAAK,EAAEZ,KAAK,CAACe,KAApC;AAA2C,YAAA,eAAe;AAA1D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEf,KAAf;AAAsB,UAAA,UAAU,EAAEC,UAAlC;AAA8C,UAAA,YAAY,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE;AAAA,mCAAcI,UAAU,CAACU,cAAX,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAA4BhB,KAAK,CAACiB,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAtBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9BD;;MAAMd,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\n\r\n// Function to convert watch link to embed link\r\nfunction convertWatchToEmbedLink(watchLink) {\r\n  const watchPattern = /https:\\/\\/www\\.youtube\\.com\\/watch\\?v=([A-Za-z0-9_-]+)/;\r\n  const match = watchLink.match(watchPattern);\r\n\r\n  if (match && match.length === 2) {\r\n    const videoId = match[1];\r\n    const embedLink = `https://www.youtube.com/embed/${videoId}`;\r\n    return embedLink;\r\n  } else {\r\n    return watchLink;\r\n  }\r\n}\r\n\r\n\r\n// Rating component\r\nconst Rating = ({ video, handleVote, handleRemove }) => {\r\n  // Your Rating component code here\r\n};\r\n\r\nconst VideoTable = ({ videos, handleVote, handleRemove }) => {\r\n  // Your VideoTable component code here\r\n\r\n  return (\r\n    <div className=\"video-cards\">\r\n      {videos.map((video) => {\r\n        const uploadDate = new Date(\r\n          Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000\r\n        );\r\n\r\n        const videoUrl = video.url.startsWith('https://www.youtube.com/watch?v=')\r\n          ? convertWatchToEmbedLink(video.url)\r\n          : video.url;\r\n\r\n        return (\r\n          <div className=\"video\" key={video.id}>\r\n            <h2>{video.title}</h2>\r\n            <div className=\"anything\">\r\n              <iframe src={videoUrl} title={video.title} allowFullScreen />\r\n            </div>\r\n\r\n            {/* Render Rating component */}\r\n            <Rating video={video} handleVote={handleVote} handleRemove={handleRemove} />\r\n\r\n            <p>Uploaded: {uploadDate.toLocaleString()}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoTable;\r\n"]},"metadata":{},"sourceType":"module"}