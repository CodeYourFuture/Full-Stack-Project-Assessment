{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"BackdropComponent\", \"BackdropProps\", \"classes\", \"className\", \"closeAfterTransition\", \"children\", \"container\", \"component\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"open\", \"slotProps\", \"slots\", \"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport { useSlotProps } from '@mui/base';\nimport { unstable_useModal as useModal } from '@mui/base/unstable_useModal';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport FocusTrap from '../Unstable_TrapFocus';\nimport Portal from '../Portal';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nimport { getModalUtilityClass } from './modalClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var open = ownerState.open,\n      exited = ownerState.exited,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nvar ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme,\n      ownerState = _ref3.ownerState;\n  return _extends({\n    position: 'fixed',\n    zIndex: (theme.vars || theme).zIndex.modal,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0\n  }, !ownerState.open && ownerState.exited && {\n    visibility: 'hidden'\n  });\n});\nvar ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$backdrop, _slotProps$root, _slotProps$backdrop;\n\n  var props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? ModalBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      className = props.className,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      children = props.children,\n      container = props.container,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      onBackdropClick = props.onBackdropClick,\n      open = props.open,\n      slotProps = props.slotProps,\n      slots = props.slots,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var propsWithDefaults = _extends({}, props, {\n    closeAfterTransition: closeAfterTransition,\n    disableAutoFocus: disableAutoFocus,\n    disableEnforceFocus: disableEnforceFocus,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    disablePortal: disablePortal,\n    disableRestoreFocus: disableRestoreFocus,\n    disableScrollLock: disableScrollLock,\n    hideBackdrop: hideBackdrop,\n    keepMounted: keepMounted\n  });\n\n  var _useModal = useModal(_extends({}, propsWithDefaults, {\n    rootRef: ref\n  })),\n      getRootProps = _useModal.getRootProps,\n      getBackdropProps = _useModal.getBackdropProps,\n      getTransitionProps = _useModal.getTransitionProps,\n      portalRef = _useModal.portalRef,\n      isTopModal = _useModal.isTopModal,\n      exited = _useModal.exited,\n      hasTransition = _useModal.hasTransition;\n\n  var ownerState = _extends({}, propsWithDefaults, {\n    exited: exited\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    var _getTransitionProps = getTransitionProps(),\n        onEnter = _getTransitionProps.onEnter,\n        onExited = _getTransitionProps.onExited;\n\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n\n  var RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : ModalRoot;\n  var BackdropSlot = (_ref2 = (_slots$backdrop = slots == null ? void 0 : slots.backdrop) != null ? _slots$backdrop : components.Backdrop) != null ? _ref2 : BackdropComponent;\n  var rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  var backdropSlotProps = (_slotProps$backdrop = slotProps == null ? void 0 : slotProps.backdrop) != null ? _slotProps$backdrop : componentsProps.backdrop;\n  var rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    getSlotProps: getRootProps,\n    additionalProps: {\n      ref: ref,\n      as: component\n    },\n    ownerState: ownerState,\n    className: clsx(className, rootSlotProps == null ? void 0 : rootSlotProps.className, classes == null ? void 0 : classes.root, !ownerState.open && ownerState.exited && (classes == null ? void 0 : classes.hidden))\n  });\n  var backdropProps = useSlotProps({\n    elementType: BackdropSlot,\n    externalSlotProps: backdropSlotProps,\n    additionalProps: BackdropProps,\n    getSlotProps: function getSlotProps(otherHandlers) {\n      return getBackdropProps(_extends({}, otherHandlers, {\n        onClick: function onClick(e) {\n          if (onBackdropClick) {\n            onBackdropClick(e);\n          }\n\n          if (otherHandlers != null && otherHandlers.onClick) {\n            otherHandlers.onClick(e);\n          }\n        }\n      }));\n    },\n    className: clsx(backdropSlotProps == null ? void 0 : backdropSlotProps.className, BackdropProps == null ? void 0 : BackdropProps.className, classes == null ? void 0 : classes.backdrop),\n    ownerState: ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Modal/Modal.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","elementAcceptingRef","HTMLElementType","useSlotProps","unstable_useModal","useModal","unstable_composeClasses","composeClasses","FocusTrap","Portal","styled","useThemeProps","Backdrop","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","backdrop","ModalRoot","name","slot","overridesResolver","props","styles","hidden","theme","position","zIndex","vars","modal","right","bottom","top","left","visibility","ModalBackdrop","Modal","forwardRef","inProps","ref","_ref","_slots$root","_ref2","_slots$backdrop","_slotProps$root","_slotProps$backdrop","BackdropComponent","BackdropProps","className","closeAfterTransition","children","container","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","slotProps","other","propsWithDefaults","rootRef","getRootProps","getBackdropProps","getTransitionProps","portalRef","isTopModal","hasTransition","childProps","tabIndex","undefined","onEnter","onExited","RootSlot","Root","BackdropSlot","rootSlotProps","backdropSlotProps","rootProps","elementType","externalSlotProps","externalForwardedProps","getSlotProps","additionalProps","as","backdropProps","otherHandlers","onClick","e","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","object","isRequired","string","bool","shape","oneOfType","func","onClose","onTransitionEnter","onTransitionExited","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"classes\", \"className\", \"closeAfterTransition\", \"children\", \"container\", \"component\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"open\", \"slotProps\", \"slots\", \"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport { useSlotProps } from '@mui/base';\nimport { unstable_useModal as useModal } from '@mui/base/unstable_useModal';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport FocusTrap from '../Unstable_TrapFocus';\nimport Portal from '../Portal';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nimport { getModalUtilityClass } from './modalClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  zIndex: (theme.vars || theme).zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !ownerState.open && ownerState.exited && {\n  visibility: 'hidden'\n}));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$backdrop, _slotProps$root, _slotProps$backdrop;\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n  const {\n      BackdropComponent = ModalBackdrop,\n      BackdropProps,\n      className,\n      closeAfterTransition = false,\n      children,\n      container,\n      component,\n      components = {},\n      componentsProps = {},\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      onBackdropClick,\n      open,\n      slotProps,\n      slots\n      // eslint-disable-next-line react/prop-types\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const propsWithDefaults = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  });\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal(_extends({}, propsWithDefaults, {\n    rootRef: ref\n  }));\n  const ownerState = _extends({}, propsWithDefaults, {\n    exited\n  });\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : ModalRoot;\n  const BackdropSlot = (_ref2 = (_slots$backdrop = slots == null ? void 0 : slots.backdrop) != null ? _slots$backdrop : components.Backdrop) != null ? _ref2 : BackdropComponent;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const backdropSlotProps = (_slotProps$backdrop = slotProps == null ? void 0 : slotProps.backdrop) != null ? _slotProps$backdrop : componentsProps.backdrop;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    getSlotProps: getRootProps,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(className, rootSlotProps == null ? void 0 : rootSlotProps.className, classes == null ? void 0 : classes.root, !ownerState.open && ownerState.exited && (classes == null ? void 0 : classes.hidden))\n  });\n  const backdropProps = useSlotProps({\n    elementType: BackdropSlot,\n    externalSlotProps: backdropSlotProps,\n    additionalProps: BackdropProps,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps(_extends({}, otherHandlers, {\n        onClick: e => {\n          if (onBackdropClick) {\n            onBackdropClick(e);\n          }\n          if (otherHandlers != null && otherHandlers.onClick) {\n            otherHandlers.onClick(e);\n          }\n        }\n      }));\n    },\n    className: clsx(backdropSlotProps == null ? void 0 : backdropSlotProps.className, BackdropProps == null ? void 0 : BackdropProps.className, classes == null ? void 0 : classes.backdrop),\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}