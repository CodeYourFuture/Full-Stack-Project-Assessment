{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nimport THEME_ID from './identifier';\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n\n    return newTheme;\n  },\n  excludeVariablesFromRoot\n});\nexport { useColorScheme, getInitColorSchemeScript, CssVarsProvider as Experimental_CssVarsProvider };","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/styles/CssVarsProvider.js"],"names":["_extends","unstable_createCssVarsProvider","createCssVarsProvider","unstable_styleFunctionSx","styleFunctionSx","experimental_extendTheme","createTypography","excludeVariablesFromRoot","THEME_ID","defaultTheme","CssVarsProvider","useColorScheme","getInitColorSchemeScript","themeId","theme","attribute","modeStorageKey","colorSchemeStorageKey","defaultColorScheme","light","dark","resolveTheme","newTheme","typography","palette","unstable_sx","sx","props","Experimental_CssVarsProvider"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,8BAA8B,IAAIC,qBAA3C,EAAkEC,wBAAwB,IAAIC,eAA9F,QAAqH,aAArH;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,MAAMC,YAAY,GAAGJ,wBAAwB,EAA7C;AACA,MAAM;AACJK,EAAAA,eADI;AAEJC,EAAAA,cAFI;AAGJC,EAAAA;AAHI,IAIFV,qBAAqB,CAAC;AACxBW,EAAAA,OAAO,EAAEL,QADe;AAExBM,EAAAA,KAAK,EAAEL,YAFiB;AAGxBM,EAAAA,SAAS,EAAE,uBAHa;AAIxBC,EAAAA,cAAc,EAAE,UAJQ;AAKxBC,EAAAA,qBAAqB,EAAE,kBALC;AAMxBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,KAAK,EAAE,OADW;AAElBC,IAAAA,IAAI,EAAE;AAFY,GANI;AAUxBC,EAAAA,YAAY,EAAEP,KAAK,IAAI;AACrB,UAAMQ,QAAQ,GAAGtB,QAAQ,CAAC,EAAD,EAAKc,KAAL,EAAY;AACnCS,MAAAA,UAAU,EAAEjB,gBAAgB,CAACQ,KAAK,CAACU,OAAP,EAAgBV,KAAK,CAACS,UAAtB;AADO,KAAZ,CAAzB;;AAGAD,IAAAA,QAAQ,CAACG,WAAT,GAAuB,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AACxC,aAAOvB,eAAe,CAAC;AACrBsB,QAAAA,EAAE,EAAEC,KADiB;AAErBb,QAAAA,KAAK,EAAE;AAFc,OAAD,CAAtB;AAID,KALD;;AAMA,WAAOQ,QAAP;AACD,GArBuB;AAsBxBf,EAAAA;AAtBwB,CAAD,CAJzB;AA4BA,SAASI,cAAT,EAAyBC,wBAAzB,EAAmDF,eAAe,IAAIkB,4BAAtE","sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { unstable_createCssVarsProvider as createCssVarsProvider, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\r\nimport experimental_extendTheme from './experimental_extendTheme';\r\nimport createTypography from './createTypography';\r\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\r\nimport THEME_ID from './identifier';\r\nconst defaultTheme = experimental_extendTheme();\r\nconst {\r\n  CssVarsProvider,\r\n  useColorScheme,\r\n  getInitColorSchemeScript\r\n} = createCssVarsProvider({\r\n  themeId: THEME_ID,\r\n  theme: defaultTheme,\r\n  attribute: 'data-mui-color-scheme',\r\n  modeStorageKey: 'mui-mode',\r\n  colorSchemeStorageKey: 'mui-color-scheme',\r\n  defaultColorScheme: {\r\n    light: 'light',\r\n    dark: 'dark'\r\n  },\r\n  resolveTheme: theme => {\r\n    const newTheme = _extends({}, theme, {\r\n      typography: createTypography(theme.palette, theme.typography)\r\n    });\r\n    newTheme.unstable_sx = function sx(props) {\r\n      return styleFunctionSx({\r\n        sx: props,\r\n        theme: this\r\n      });\r\n    };\r\n    return newTheme;\r\n  },\r\n  excludeVariablesFromRoot\r\n});\r\nexport { useColorScheme, getInitColorSchemeScript, CssVarsProvider as Experimental_CssVarsProvider };"]},"metadata":{},"sourceType":"module"}