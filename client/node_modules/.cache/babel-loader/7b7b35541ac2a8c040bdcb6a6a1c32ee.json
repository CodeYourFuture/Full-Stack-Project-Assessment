{"ast":null,"code":"var _jsxFileName = \"/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddVideoForm from './AddVideoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoItem = _ref => {\n  _s();\n\n  let {\n    video,\n    onDelete\n  } = _ref;\n  const [videos, setVideos] = useState([]); // Add a new video to the list\n\n  const handleAddVideo = newVideo => {\n    const updatedVideos = [...videos, newVideo];\n    setVideos(updatedVideos);\n  }; // Update the vote count for the video\n\n\n  const handleUpVote = videoToUpdate => {\n    const updatedVideosUpVote = videos.map(video => video.id === videoToUpdate.id ? { ...video,\n      votes: video.votes + 1\n    } : video);\n    setVideos(updatedVideosUpVote);\n  }; // Update the vote count for the video\n\n\n  const handleDownVote = videoToUpdate => {\n    const updatedVideosDownVote = videos.map(video => video.id === videoToUpdate.id ? { ...video,\n      votes: Math.max(video.votes - 1, 0)\n    } : video);\n    setVideos(updatedVideosDownVote);\n  };\n\n  const videoId = video.url.split('v=')[1];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddVideoForm, {\n      onAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        title: \"YouTube video player\" // frameborder=\"0\" \n        ,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" // allowfullscreen\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Votes: \", video.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => handleUpVote(video),\n        style: {\n          fontSize: '24px'\n        },\n        className: \"fa fa-thumbs-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => handleDownVote(video),\n        style: {\n          fontSize: '24px'\n        },\n        className: \"fa fa-thumbs-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(video.id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VideoItem, \"SbG6CMM6FaXD5465NFUm02FT42U=\");\n\n_c = VideoItem;\nexport default VideoItem; // import React from 'react';\n// const VideoItem = ({ video, onUpVote, onDownVote, //onDelete }) => {\n//   return (\n//     <div className=\"video-container mt-5\">\n//       <h3>{video.title}</h3>\n//       <iframe\n//         src={`https://www.youtube.com/embed/${video.url}`}\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.votes}</p>\n//       <button onClick={() => onUpVote(video)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video)}>Down Vote</button>\n//       <button onClick={() => onDelete(video)}>Delete</button>\n//     </div>\n//   );\n// };\n// export default VideoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoItem\");","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx"],"names":["React","useState","AddVideoForm","VideoItem","video","onDelete","videos","setVideos","handleAddVideo","newVideo","updatedVideos","handleUpVote","videoToUpdate","updatedVideosUpVote","map","id","votes","handleDownVote","updatedVideosDownVote","Math","max","videoId","url","split","title","rating","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport AddVideoForm from './AddVideoForm';\n\nconst VideoItem = ({ video, onDelete }) => {\n  const [videos, setVideos] = useState([]);\n\n  // Add a new video to the list\n  const handleAddVideo = (newVideo) => { \n    const updatedVideos = [...videos, newVideo];\n    setVideos(updatedVideos);\n  };\n\n\n   // Update the vote count for the video\n  const handleUpVote = (videoToUpdate) => {\n    const updatedVideosUpVote = videos.map((video) =>\n      video.id === videoToUpdate.id\n        ? { ...video, votes: video.votes + 1 }\n        : video\n    );\n    setVideos(updatedVideosUpVote);\n  };\n\n  // Update the vote count for the video\n  const handleDownVote = (videoToUpdate) => {\n    const updatedVideosDownVote = videos.map((video) =>\n      video.id === videoToUpdate.id\n        ? { ...video, votes: Math.max(video.votes - 1, 0) }\n        : video\n    );\n    setVideos(updatedVideosDownVote);\n  };\n\n  const videoId = video.url.split('v=')[1];\n  \n  return (\n    <>\n    <AddVideoForm onAddVideo={handleAddVideo} />\n    <div className=\"video-item\">  \n      <iframe \n      width=\"560\" \n      height=\"315\" \n      src={`https://www.youtube.com/embed/${videoId}`} \n      title=\"YouTube video player\" \n      // frameborder=\"0\" \n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n      // allowfullscreen\n      >\n      </iframe>\n      <h3>{video.title}</h3>\n      <p>Votes: {video.rating}</p>\n\n      <i onClick={() => handleUpVote(video)} style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i>\n      <i onClick={() => handleDownVote(video)} style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i>\n      \n      <button\n      onClick={() => onDelete(video.id)}\n      type='button'\n      className='btn btn-danger'\n      >\n        Delete\n      </button>\n    </div>\n    </>\n  ); \n}\n\n\n\nexport default VideoItem;\n\n\n\n// import React from 'react';\n\n// const VideoItem = ({ video, onUpVote, onDownVote, //onDelete }) => {\n//   return (\n//     <div className=\"video-container mt-5\">\n//       <h3>{video.title}</h3>\n//       <iframe\n//         src={`https://www.youtube.com/embed/${video.url}`}\n\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.votes}</p>\n//       <button onClick={() => onUpVote(video)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video)}>Down Vote</button>\n//       <button onClick={() => onDelete(video)}>Delete</button>\n//     </div>\n//   );\n// };\n\n// export default VideoItem;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}