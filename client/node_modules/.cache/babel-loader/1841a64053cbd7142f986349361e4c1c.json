{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction extractVideoId(url) {\n  // Extract the video ID from the YouTube URL\n  // Implement this function according to your requirements\n  // Example implementation:\n  const urlParts = url.split(\"/\");\n  return urlParts[urlParts.length - 1];\n}\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([{\n    id: 1,\n    title: \"Video 1\",\n    url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n    votes: 0\n  }, {\n    id: 2,\n    title: \"Video 2\",\n    url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n    votes: 0\n  }, {\n    id: 3,\n    title: \"Video 3\",\n    url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n    votes: 0\n  }]);\n\n  const handleAddVideo = (title, url) => {\n    const videoId = extractVideoId(url);\n    const newVideo = {\n      id: videos.length + 1,\n      title,\n      url: `https://www.youtube.com/embed/${videoId}`,\n      votes: 0\n    };\n    setVideos([...videos, newVideo]);\n  };\n\n  const handleVote = (videoId, increment) => {\n    setVideos(prevVideos => prevVideos.map(video => video.id === videoId ? { ...video,\n      votes: video.votes + increment\n    } : video));\n  };\n\n  const handleRemoveVideo = videoId => {\n    setVideos(prevVideos => prevVideos.filter(video => video.id !== videoId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(VideoList, {\n        videos: videos,\n        handleVote: handleVote,\n        handleRemove: handleRemoveVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddVideoForm, {\n        handleAddVideo: handleAddVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/STD6nd6WMQNOEFJbNSokpbFxtU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","VideoList","AddVideoForm","extractVideoId","url","urlParts","split","length","App","videos","setVideos","id","title","votes","handleAddVideo","videoId","newVideo","handleVote","increment","prevVideos","map","video","handleRemoveVideo","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B;AACA;AACA;AACA,QAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAjB;AACA,SAAOD,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAf;AACD;;AAED,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CACnC;AACEW,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGER,IAAAA,GAAG,EAAE,2CAHP;AAIES,IAAAA,KAAK,EAAE;AAJT,GADmC,EAOnC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGER,IAAAA,GAAG,EAAE,2CAHP;AAIES,IAAAA,KAAK,EAAE;AAJT,GAPmC,EAanC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGER,IAAAA,GAAG,EAAE,2CAHP;AAIES,IAAAA,KAAK,EAAE;AAJT,GAbmC,CAAD,CAApC;;AAqBA,QAAMC,cAAc,GAAG,CAACF,KAAD,EAAQR,GAAR,KAAgB;AACrC,UAAMW,OAAO,GAAGZ,cAAc,CAACC,GAAD,CAA9B;AACA,UAAMY,QAAQ,GAAG;AACfL,MAAAA,EAAE,EAAEF,MAAM,CAACF,MAAP,GAAgB,CADL;AAEfK,MAAAA,KAFe;AAGfR,MAAAA,GAAG,EAAG,iCAAgCW,OAAQ,EAH/B;AAIfF,MAAAA,KAAK,EAAE;AAJQ,KAAjB;AAMAH,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYO,QAAZ,CAAD,CAAT;AACD,GATD;;AAWA,QAAMC,UAAU,GAAG,CAACF,OAAD,EAAUG,SAAV,KAAwB;AACzCR,IAAAA,SAAS,CAAES,UAAD,IACRA,UAAU,CAACC,GAAX,CAAgBC,KAAD,IACbA,KAAK,CAACV,EAAN,KAAaI,OAAb,GACI,EAAE,GAAGM,KAAL;AAAYR,MAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,GAAcK;AAAjC,KADJ,GAEIG,KAHN,CADO,CAAT;AAOD,GARD;;AAUA,QAAMC,iBAAiB,GAAIP,OAAD,IAAa;AACrCL,IAAAA,SAAS,CAAES,UAAD,IACRA,UAAU,CAACI,MAAX,CAAmBF,KAAD,IAAWA,KAAK,CAACV,EAAN,KAAaI,OAA1C,CADO,CAAT;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAEN,MADV;AAEE,QAAA,UAAU,EAAEQ,UAFd;AAGE,QAAA,YAAY,EAAEK;AAHhB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,YAAD;AAAc,QAAA,cAAc,EAAER;AAA9B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhEQN,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport \"./App.css\";\n\nfunction extractVideoId(url) {\n  // Extract the video ID from the YouTube URL\n  // Implement this function according to your requirements\n  // Example implementation:\n  const urlParts = url.split(\"/\");\n  return urlParts[urlParts.length - 1];\n}\n\nfunction App() {\n  const [videos, setVideos] = useState([\n    {\n      id: 1,\n      title: \"Video 1\",\n      url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n      votes: 0,\n    },\n    {\n      id: 2,\n      title: \"Video 2\",\n      url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n      votes: 0,\n    },\n    {\n      id: 3,\n      title: \"Video 3\",\n      url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n      votes: 0,\n    },\n  ]);\n\n  const handleAddVideo = (title, url) => {\n    const videoId = extractVideoId(url);\n    const newVideo = {\n      id: videos.length + 1,\n      title,\n      url: `https://www.youtube.com/embed/${videoId}`,\n      votes: 0,\n    };\n    setVideos([...videos, newVideo]);\n  };\n\n  const handleVote = (videoId, increment) => {\n    setVideos((prevVideos) =>\n      prevVideos.map((video) =>\n        video.id === videoId\n          ? { ...video, votes: video.votes + increment }\n          : video\n      )\n    );\n  };\n\n  const handleRemoveVideo = (videoId) => {\n    setVideos((prevVideos) =>\n      prevVideos.filter((video) => video.id !== videoId)\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Video Recommendation</h1>\n      </header>\n      <div className=\"container\">\n        <VideoList\n          videos={videos}\n          handleVote={handleVote}\n          handleRemove={handleRemoveVideo}\n        />\n        <AddVideoForm handleAddVideo={handleAddVideo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}