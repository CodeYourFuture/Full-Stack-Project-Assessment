{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(_ref) {\n  let {\n    result,\n    onRatingChange,\n    onDeleteVideo\n  } = _ref;\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  const handleRating = (id, type) => {\n    // Call the onRatingChange function passed as a prop\n    onRatingChange(id, type);\n  };\n\n  const sortedVideos = [...result].sort((a, b) => b.rating - a.rating);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShowingVideos\",\n    children: sortedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-up\",\n          onClick: () => handleRating(video.id, \"thumbs-up\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: video.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-down\",\n          onClick: () => handleRating(video.id, \"thumbs-down\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"allVideos\",\n        width: \"300\",\n        height: \"220\",\n        src: convertToEmbedUrl(video.url),\n        title: video.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDeleteVideo(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","ShowingVideos","result","onRatingChange","onDeleteVideo","convertToEmbedUrl","url","videoId","split","handleRating","id","type","sortedVideos","sort","a","b","rating","map","video","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,OAAkE;AAAA,MAA3C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA;AAA1B,GAA2C;;AAChE,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,UAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,WAAQ,iCAAgCD,OAAQ,EAAhD;AACD;;AAED,QAAME,YAAY,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACjC;AACAR,IAAAA,cAAc,CAACO,EAAD,EAAKC,IAAL,CAAd;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,CAAC,GAAGV,MAAJ,EAAYW,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAAxC,CAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGJ,YAAY,CAACK,GAAb,CAAkBC,KAAD,iBAChB;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA,kBAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,uBADZ;AAEE,UAAA,OAAO,EAAE,MAAMV,YAAY,CAACS,KAAK,CAACR,EAAP,EAAW,WAAX;AAF7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,oBAAKQ,KAAK,CAACF;AAAX;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,SAAS,EAAC,yBADZ;AAEE,UAAA,OAAO,EAAE,MAAMP,YAAY,CAACS,KAAK,CAACR,EAAP,EAAW,aAAX;AAF7B;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,GAAG,EAAEL,iBAAiB,CAACa,KAAK,CAACZ,GAAP,CAJxB;AAKE,QAAA,KAAK,EAAEY,KAAK,CAACC,KALf;AAME,QAAA,WAAW,EAAC,GANd;AAOE,QAAA,KAAK,EAAC,0FAPR;AAQE,QAAA,eAAe;AARjB;AAAA;AAAA;AAAA;AAAA,cAdF,eAwBE;AAAQ,QAAA,OAAO,EAAE,MAAMf,aAAa,CAACc,KAAK,CAACR,EAAP,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA,OAA6BQ,KAAK,CAACR,EAAnC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;KA7CQT,a;AA+CT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\nfunction ShowingVideos({ result, onRatingChange, onDeleteVideo }) {\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  const handleRating = (id, type) => {\n    // Call the onRatingChange function passed as a prop\n    onRatingChange(id, type);\n  };\n\n  const sortedVideos = [...result].sort((a, b) => b.rating - a.rating);\n\n  return (\n    <div className=\"ShowingVideos\">\n      {sortedVideos.map((video) => (\n        <div className=\"videos\" key={video.id}>\n          <p>{video.title}</p>\n          <div className=\"buttons\">\n            <i\n              className=\"fa-solid fa-thumbs-up\"\n              onClick={() => handleRating(video.id, \"thumbs-up\")}\n            ></i>\n            <h4>{video.rating}</h4>\n            <i\n              className=\"fa-solid fa-thumbs-down\"\n              onClick={() => handleRating(video.id, \"thumbs-down\")}\n            ></i>\n          </div>\n\n          <iframe\n            className=\"allVideos\"\n            width=\"300\"\n            height=\"220\"\n            src={convertToEmbedUrl(video.url)}\n            title={video.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <button onClick={() => onDeleteVideo(video.id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}