{"ast":null,"code":"var _jsxFileName = \"/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddVideoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import moment from \"moment\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddVideoForm(_ref) {\n  _s();\n\n  let {\n    AddVideo\n  } = _ref;\n  //   const [showValid, Setvalid] = useState(true);\n  const [newVideo, setNewVideo] = useState({});\n  const [videoTitle, setTitle] = useState(\"\");\n  const [videoUrl, setUrl] = useState(\"\");\n  const [videoData, setVideoData] = useState({\n    title: \"\",\n    url: \"\"\n  });\n  ; //   const handleShowValid = () => {\n  //     Setvalid(!showValid);}\n\n  function isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  const handleAddVideo = event => {\n    event.preventDefault();\n    videoTitle !== \"\" ? newVideo.title = videoTitle : alert(\"Please add a title for your video.\");\n    isValidUrl(videoUrl) ? newVideo.url = videoUrl : alert(\"Please add a valid url.\");\n    newVideo.rating = Math.floor(Math.random() * 5000) + 1;\n    AddVideo(newVideo);\n    setVideoData({\n      title: \"\",\n      url: \"\"\n    });\n    newVideo.id = Math.floor(Math.random() * 1000); // setVideos([newVideo, ...videos]);\n\n    setNewVideo({});\n    setTitle(\"\");\n    setUrl(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Tile:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: videoData.title,\n          onChange: e => {\n            setTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url\",\n          children: \"Url:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url\",\n          value: videoData.url,\n          onChange: e => {\n            setUrl(e.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVideoForm, \"5Pr//ag5qqx1KQNek06VOUKXT7A=\");\n\n_c = AddVideoForm;\nexport default AddVideoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideoForm\");","map":{"version":3,"sources":["/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddVideoForm.jsx"],"names":["React","useState","AddVideoForm","AddVideo","newVideo","setNewVideo","videoTitle","setTitle","videoUrl","setUrl","videoData","setVideoData","title","url","isValidUrl","URL","error","handleAddVideo","event","preventDefault","alert","rating","Math","floor","random","id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import moment from \"moment\";\n\nfunction AddVideoForm({AddVideo}) {\n//   const [showValid, Setvalid] = useState(true);\n    const [newVideo, setNewVideo] = useState({});\n   const [videoTitle, setTitle] = useState(\"\");\n  const [videoUrl, setUrl] = useState(\"\");\n  const [videoData, setVideoData] = useState({\n    title: \"\",\n    url: \"\",\n  });\n  ;\n\n//   const handleShowValid = () => {\n//     Setvalid(!showValid);}\n  \n   function isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n  const handleAddVideo = (event) => {\n    event.preventDefault();\n    videoTitle !== \"\"\n      ? (newVideo.title = videoTitle)\n      : alert(\"Please add a title for your video.\");\n\n    isValidUrl(videoUrl)\n      ? (newVideo.url = videoUrl)\n      : alert(\"Please add a valid url.\");\n    newVideo.rating = Math.floor(Math.random() * 5000) + 1;\n    \n   \n\n     AddVideo(newVideo);\n    setVideoData({\n      title: \"\",\n      url: \"\",\n     \n    });\nnewVideo.id = Math.floor(Math.random() * 1000);\n    // setVideos([newVideo, ...videos]);\n     setNewVideo({});\n    setTitle(\"\");\n    setUrl(\"\");\n  };\n\n  return (\n    <div>\n      \n        <form onSubmit={handleAddVideo}>\n          <div>\n            <label htmlFor=\"title\">Tile:</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={videoData.title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"url\">Url:</label>\n            <input\n              type=\"text\"\n              id=\"url\"\n              value={videoData.url}\n              onChange={(e) => {\n                setUrl(e.target.value);\n              }}\n              required\n            ></input>\n          </div>\n          <div>\n            \n            <button type=\"submit\">Add</button>\n          </div>\n        </form>\n      \n    </div>\n  );\n}\n\nexport default AddVideoForm;"]},"metadata":{},"sourceType":"module"}