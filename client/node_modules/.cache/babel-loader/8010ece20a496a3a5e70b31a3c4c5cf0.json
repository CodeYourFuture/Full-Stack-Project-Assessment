{"ast":null,"code":"import _asyncToGenerator from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import\"./App.css\";/*function VideoComponent({ elements }) {\n  // Rest of your code remains unchanged\n  return (\n    <div>\n      <div id=\"ascendingButton\">\n        <button class=\"btn btn-light customBackground1\">Ascending</button>\n        <button class=\"btn btn-light customBackground1\">Descending</button>\n      </div>\n\n      <div class=\"container\">\n        <div class=\"videoDisplayContainer\">\n          {elements.map((element, index) => (\n            <VideoDisplay key={index} element={element} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction VideoDisplay({ element, onLike, onDislike, onDelete }) {\n  // Rest of your code remains unchanged\n  return (\n    <div key={element.id} class=\"displayGrid\">\n      <h5>{element.title}</h5>\n\n      <iframe\n        width=\"330\"\n        height=\"200\"\n        src={element.url}\n        title={element.title}\n        border=\"none\"\n        border-radius=\"103px\"\n        frameborder=\"0\"\n        allowfullscreen\n        align=\"center\"\n      ></iframe>\n      <div class=\"likedislikeBtn\">\n        <button\n          videoId={element.id}\n          class=\"btn btn-light customBackground5\"\n          onClick={() => onLike(element.id) /*() => setScore((s) => s + 1)}*/ /*     >\n          Like\n        </button>\n        <span>Votes:&nbsp;{element.rating}</span>\n\n        <button\n          videoId={element.id}\n          class=\"btn btn-light customBackground5\"\n          onClick={() => onDislike(element.id) /*() => setScore((s) => s - 1)}*/ /*     >\n          Dislike\n        </button>\n      </div>\n      <button\n        class=\"btn btn-light deleteBtn\"\n        onClick={() => onDelete(element.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default function AllVideoDisplay() {\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleLike = (videoId) => {\n    fetch(`/videos/${videoId}/like`, { method: \"POST\" })\n    .then(response => response.json())\n    .then(updatedVideo => {\n      setVideoData(prevData => {\n        return prevData.map(video => {\n          if (video.id === updatedVideo.id) {\n            return { ...video, rating: updatedVideo.rating };\n          }\n          return video;\n        });\n      });\n    })\n    .catch(error => {\n      console.error(\"Error updating like:\", error);\n    });\n//************************************************8 */ // // Update frontend state optimistically\n// const updatedVideos = videoData.map((video) => {\n//   if (video.id === videoId) {\n//     return { ...video, rating: video.rating + 1 };\n//   }\n//   return video;\n// });\n// setVideoData(updatedVideos);\n// // Send API request to update card's vote count\n// fetch(`/videos/${videoId}/like`, { method: \"POST\" });\n//*****************************************************8 */\n/* };\n\n  const handleDislike = (videoId) => {\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" })\n    .then(response => response.json())\n    .then(updatedVideo => {\n      setVideoData(prevData => {\n        return prevData.map(video => {\n          if (video.id === updatedVideo.id) {\n            return { ...video, rating: updatedVideo.rating };\n          }\n          return video;\n        });\n      });\n    })\n    .catch(error => {\n      console.error(\"Error updating dislike:\", error);\n    });\n//*********************************************** */ // // Update frontend state optimistically\n// const updatedVideos = videoData.map((video) => {\n//   if (video.id === videoId) {\n//     return { ...video, rating: Math.max(video.rating - 1, 0) };\n//   }\n//   return video;\n// });\n// setVideoData(updatedVideos);\n// // Send API request to update card's vote count\n// fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n//*******************************************8 */\n/* };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n      if (response.ok) {\n        setVideoData(prevData => prevData.filter(element => element.id !== id));\n      } else {\n        console.error(\"Error deleting video.\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  \n    // try {\n    //   const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n    //   if (response.ok) {\n    //     setVideoData(videoData.filter((element) => element.id !== id));\n    //   } else {\n    //     console.error(\"Error deleting video:\");\n    //   }\n    // } catch (error) {\n    //   console.error(\"Error deleting video:\", error);\n    // }\n  };\n\n  return (\n    <VideoComponent\n      elements={videoData.sort((a, b) => b.rating - a.rating)}\n      onLike={handleLike}\n      onDislike={handleDislike}\n      onDelete={handleDelete}\n    />\n  );\n}\n*/ //console.log(dataVideo)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function VideoComponent(_ref){var elements=_ref.elements;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"ascendingButton\",children:[/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-light customBackground1\",children:\"Ascending\"}),/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-light customBackground1\",children:\"Descending\"})]}),/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:/*#__PURE__*/_jsx(\"div\",{class:\"videoDisplayContainer\",children:/*#__PURE__*/_jsx(VideoDisplay,{elements:elements})})})]});}function VideoDisplay(_ref2){var elements=_ref2.elements,onLike=_ref2.onLike,onDislike=_ref2.onDislike,onDelete=_ref2.onDelete;//const [score, setScore] = useState(element.rating);\n// const [videoData, setVideoData] = useState([]);\n// useEffect(() => {\n//   fetch(\"/videos\")\n//     .then((response) => response.json())\n//     .then((updatedData) => {\n//       setVideoData(updatedData);\n//     })\n//     .catch((error) => {\n//       console.error(\"Error fetching data:\", error);\n//     });\n// }, []);\n// ///***************likedislike****************** */\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[\" \",elements.map(function(element){return/*#__PURE__*/_jsxs(\"div\",{class:\"displayGrid\",children:[/*#__PURE__*/_jsx(\"h5\",{children:element.title}),/*#__PURE__*/_jsx(\"iframe\",{width:\"330\",height:\"200\",src:element.url,title:element.title,border:\"none\",\"border-radius\":\"103px\",frameborder:\"0\",allowfullscreen:true,align:\"center\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"likedislikeBtn\",children:[/*#__PURE__*/_jsx(\"button\",{videoId:element.id,class:\"btn btn-light customBackground5\",onClick:function onClick(){return onLike(element.id);}/*() => setScore((s) => s + 1)*/,children:\"Like\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Votes:\\xA0\",element.rating]}),/*#__PURE__*/_jsx(\"button\",{videoId:element.id,class:\"btn btn-light customBackground5\",onClick:function onClick(){return onDislike(element.id);}/*() => setScore((s) => s - 1)*/,children:\"Dislike\"})]}),/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-light deleteBtn\",onClick:function onClick(){return onDelete(element.id);},children:\"Delete\"})]},element.id);})]});}export default function AllVideoDisplay(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videoData=_useState2[0],setVideoData=_useState2[1];useEffect(function(){fetch(\"/videos\").then(function(response){return response.json();}).then(function(updatedData){setVideoData(updatedData);}).catch(function(error){console.error(\"Error fetching data:\",error);});},[]);var handleLike=function handleLike(videoId){// Update frontend state optimistically\nfetch(\"/videos/\".concat(videoId,\"/dislike\"),{method:\"POST\"}).then(function(response){return response.json();}).then(function(updatedVideo){setVideoData(function(prevData){return prevData.map(function(video){if(video.id===updatedVideo.id){return _objectSpread(_objectSpread({},video),{},{rating:updatedVideo.rating});}return video;});});}).catch(function(error){console.error(\"Error updating dislike:\",error);});};// const updatedVideos = videoData.map((video) => {\n//   if (video.id === videoId) {\n//     return { ...video, rating: video.rating + 1 };\n//   }\n//   return video;\n// });}\n// Send API request to update card's vote count\n//fetch(`/videos/${videoId}/like`, { method: \"POST\" });\nvar handleDislike=function handleDislike(videoId){fetch(\"/videos/\".concat(videoId,\"/dislike\"),{method:\"POST\"}).then(function(response){return response.json();}).then(function(updatedVideo){setVideoData(function(prevData){return prevData.map(function(video){if(video.id===updatedVideo.id){return _objectSpread(_objectSpread({},video),{},{rating:updatedVideo.rating});}return video;});});}).catch(function(error){console.error(\"Error updating dislike:\",error);});};// const handleDislike = (videoId) => {\n//   // Update frontend state optimistically\n//   const updatedVideos = videoData.map((video) => {\n//     if (video.id === videoId) {\n//       return { ...video, rating: Math.max(video.rating - 1, 0) };\n//     }\n//     return video;\n//   });\n//   setVideoData(updatedVideos);\n//   // Send API request to update card's vote count\n//   fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n// };\n///********************************* */\nvar handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"/videos/\".concat(id),{method:\"DELETE\"});case 3:response=_context.sent;if(response.ok){setVideoData(function(videoData){return videoData.filter(function(element){return element.id!==id;});});}else{console.error(\"Error deleting video:\");}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(\"Error deleting video:\",_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function handleDelete(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(VideoComponent,{elements:videoData.sort(function(a,b){return b.rating-a.rating;}),onLike:handleLike,onDislike:handleDislike,onDelete:handleDelete});}","map":{"version":3,"sources":["/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/src/AllVideoDisplay.js"],"names":["React","useEffect","useState","VideoComponent","elements","VideoDisplay","onLike","onDislike","onDelete","map","element","title","url","id","rating","AllVideoDisplay","videoData","setVideoData","fetch","then","response","json","updatedData","catch","error","console","handleLike","videoId","method","updatedVideo","prevData","video","handleDislike","handleDelete","ok","filter","sort","a","b"],"mappings":"8qBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gF,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,CACA;wFACA,QAASC,CAAAA,cAAT,MAAsC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACpC,mBACE,oCACE,aAAK,EAAE,CAAC,iBAAR,wBACE,eAAQ,KAAK,CAAC,iCAAd,uBADF,cAEE,eAAQ,KAAK,CAAC,iCAAd,wBAFF,GADF,cAME,YAAK,KAAK,CAAC,WAAX,uBACE,YAAK,KAAK,CAAC,uBAAX,uBACE,KAAC,YAAD,EAAc,QAAQ,CAAEA,QAAxB,EADF,EADF,EANF,GADF,CAcD,CACD,QAASC,CAAAA,YAAT,OAAiE,IAAzCD,CAAAA,QAAyC,OAAzCA,QAAyC,CAA/BE,MAA+B,OAA/BA,MAA+B,CAAvBC,SAAuB,OAAvBA,SAAuB,CAAZC,QAAY,OAAZA,QAAY,CAC/D;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,uBACG,GADH,CAEGJ,QAAQ,CAACK,GAAT,CAAa,SAACC,OAAD,qBACZ,aAAsB,KAAK,CAAC,aAA5B,wBACE,oBAAKA,OAAO,CAACC,KAAb,EADF,cAGE,eACE,KAAK,CAAC,KADR,CAEE,MAAM,CAAC,KAFT,CAGE,GAAG,CAAED,OAAO,CAACE,GAHf,CAIE,KAAK,CAAEF,OAAO,CAACC,KAJjB,CAKE,MAAM,CAAC,MALT,CAME,gBAAc,OANhB,CAOE,WAAW,CAAC,GAPd,CAQE,eAAe,KARjB,CASE,KAAK,CAAC,QATR,EAHF,cAcE,aAAK,KAAK,CAAC,gBAAX,wBACE,eACE,OAAO,CAAED,OAAO,CAACG,EADnB,CAEE,KAAK,CAAC,iCAFR,CAGE,OAAO,CACL,yBAAMP,CAAAA,MAAM,CAACI,OAAO,CAACG,EAAT,CAAZ,EAAyB,gCAJ7B,kBADF,cAUE,qCAAmBH,OAAO,CAACI,MAA3B,GAVF,cAYE,eACE,OAAO,CAAEJ,OAAO,CAACG,EADnB,CAEE,KAAK,CAAC,iCAFR,CAGE,OAAO,CACL,yBAAMN,CAAAA,SAAS,CAACG,OAAO,CAACG,EAAT,CAAf,EAA4B,gCAJhC,qBAZF,GAdF,cAoCE,eACE,KAAK,CAAC,yBADR,CAEE,OAAO,CAAE,yBAAML,CAAAA,QAAQ,CAACE,OAAO,CAACG,EAAT,CAAd,EAFX,oBApCF,GAAUH,OAAO,CAACG,EAAlB,CADY,EAAb,CAFH,GADF,CAkDD,CAED,cAAe,SAASE,CAAAA,eAAT,EAA2B,CACxC,cAAkCb,QAAQ,CAAC,EAAD,CAA1C,wCAAOc,SAAP,eAAkBC,YAAlB,eAEAhB,SAAS,CAAC,UAAM,CACdiB,KAAK,CAAC,SAAD,CAAL,CACGC,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,WAAD,CAAiB,CACrBL,YAAY,CAACK,WAAD,CAAZ,CACD,CAJH,EAKGC,KALH,CAKS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACD,KAAR,CAAc,sBAAd,CAAsCA,KAAtC,EACD,CAPH,EAQD,CATQ,CASN,EATM,CAAT,CAUA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAa,CAC9B;AACAT,KAAK,mBAAYS,OAAZ,aAA+B,CAAEC,MAAM,CAAE,MAAV,CAA/B,CAAL,CACGT,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACU,YAAD,CAAkB,CACtBZ,YAAY,CAAC,SAACa,QAAD,CAAc,CACzB,MAAOA,CAAAA,QAAQ,CAACrB,GAAT,CAAa,SAACsB,KAAD,CAAW,CAC7B,GAAIA,KAAK,CAAClB,EAAN,GAAagB,YAAY,CAAChB,EAA9B,CAAkC,CAChC,sCAAYkB,KAAZ,MAAmBjB,MAAM,CAAEe,YAAY,CAACf,MAAxC,GACD,CACD,MAAOiB,CAAAA,KAAP,CACD,CALM,CAAP,CAMD,CAPW,CAAZ,CAQD,CAXH,EAYGR,KAZH,CAYS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACD,KAAR,CAAc,yBAAd,CAAyCA,KAAzC,EACD,CAdH,EAeD,CAjBD,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,OAAD,CAAa,CACjCT,KAAK,mBAAYS,OAAZ,aAA+B,CAAEC,MAAM,CAAE,MAAV,CAA/B,CAAL,CACGT,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACU,YAAD,CAAkB,CACtBZ,YAAY,CAAC,SAACa,QAAD,CAAc,CACzB,MAAOA,CAAAA,QAAQ,CAACrB,GAAT,CAAa,SAACsB,KAAD,CAAW,CAC7B,GAAIA,KAAK,CAAClB,EAAN,GAAagB,YAAY,CAAChB,EAA9B,CAAkC,CAChC,sCAAYkB,KAAZ,MAAmBjB,MAAM,CAAEe,YAAY,CAACf,MAAxC,GACD,CACD,MAAOiB,CAAAA,KAAP,CACD,CALM,CAAP,CAMD,CAPW,CAAZ,CAQD,CAXH,EAYGR,KAZH,CAYS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACD,KAAR,CAAc,yBAAd,CAAyCA,KAAzC,EACD,CAdH,EAeD,CAhBD,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,GAAMS,CAAAA,YAAY,2FAAG,iBAAOpB,EAAP,qKAEMK,CAAAA,KAAK,mBAAYL,EAAZ,EAAkB,CAAEe,MAAM,CAAE,QAAV,CAAlB,CAFX,QAEXR,QAFW,eAGjB,GAAIA,QAAQ,CAACc,EAAb,CAAiB,CACfjB,YAAY,CAAC,SAACD,SAAD,QACXA,CAAAA,SAAS,CAACmB,MAAV,CAAiB,SAACzB,OAAD,QAAaA,CAAAA,OAAO,CAACG,EAAR,GAAeA,EAA5B,EAAjB,CADW,EAAD,CAAZ,CAGD,CAJD,IAIO,CACLY,OAAO,CAACD,KAAR,CAAc,uBAAd,EACD,CATgB,+EAWjBC,OAAO,CAACD,KAAR,CAAc,uBAAd,cAXiB,oEAAH,kBAAZS,CAAAA,YAAY,6CAAlB,CAeA,mBACE,KAAC,cAAD,EACE,QAAQ,CAAEjB,SAAS,CAACoB,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACxB,MAAF,CAAWuB,CAAC,CAACvB,MAAvB,EAAf,CADZ,CAEE,MAAM,CAAEY,UAFV,CAGE,SAAS,CAAEM,aAHb,CAIE,QAAQ,CAAEC,YAJZ,EADF,CAQD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n/*function VideoComponent({ elements }) {\n  // Rest of your code remains unchanged\n  return (\n    <div>\n      <div id=\"ascendingButton\">\n        <button class=\"btn btn-light customBackground1\">Ascending</button>\n        <button class=\"btn btn-light customBackground1\">Descending</button>\n      </div>\n\n      <div class=\"container\">\n        <div class=\"videoDisplayContainer\">\n          {elements.map((element, index) => (\n            <VideoDisplay key={index} element={element} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction VideoDisplay({ element, onLike, onDislike, onDelete }) {\n  // Rest of your code remains unchanged\n  return (\n    <div key={element.id} class=\"displayGrid\">\n      <h5>{element.title}</h5>\n\n      <iframe\n        width=\"330\"\n        height=\"200\"\n        src={element.url}\n        title={element.title}\n        border=\"none\"\n        border-radius=\"103px\"\n        frameborder=\"0\"\n        allowfullscreen\n        align=\"center\"\n      ></iframe>\n      <div class=\"likedislikeBtn\">\n        <button\n          videoId={element.id}\n          class=\"btn btn-light customBackground5\"\n          onClick={() => onLike(element.id) /*() => setScore((s) => s + 1)}*/\n/*     >\n          Like\n        </button>\n        <span>Votes:&nbsp;{element.rating}</span>\n\n        <button\n          videoId={element.id}\n          class=\"btn btn-light customBackground5\"\n          onClick={() => onDislike(element.id) /*() => setScore((s) => s - 1)}*/\n/*     >\n          Dislike\n        </button>\n      </div>\n      <button\n        class=\"btn btn-light deleteBtn\"\n        onClick={() => onDelete(element.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default function AllVideoDisplay() {\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const handleLike = (videoId) => {\n    fetch(`/videos/${videoId}/like`, { method: \"POST\" })\n    .then(response => response.json())\n    .then(updatedVideo => {\n      setVideoData(prevData => {\n        return prevData.map(video => {\n          if (video.id === updatedVideo.id) {\n            return { ...video, rating: updatedVideo.rating };\n          }\n          return video;\n        });\n      });\n    })\n    .catch(error => {\n      console.error(\"Error updating like:\", error);\n    });\n//************************************************8 */\n// // Update frontend state optimistically\n// const updatedVideos = videoData.map((video) => {\n//   if (video.id === videoId) {\n//     return { ...video, rating: video.rating + 1 };\n//   }\n//   return video;\n// });\n// setVideoData(updatedVideos);\n// // Send API request to update card's vote count\n// fetch(`/videos/${videoId}/like`, { method: \"POST\" });\n//*****************************************************8 */\n/* };\n\n  const handleDislike = (videoId) => {\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" })\n    .then(response => response.json())\n    .then(updatedVideo => {\n      setVideoData(prevData => {\n        return prevData.map(video => {\n          if (video.id === updatedVideo.id) {\n            return { ...video, rating: updatedVideo.rating };\n          }\n          return video;\n        });\n      });\n    })\n    .catch(error => {\n      console.error(\"Error updating dislike:\", error);\n    });\n//*********************************************** */\n// // Update frontend state optimistically\n// const updatedVideos = videoData.map((video) => {\n//   if (video.id === videoId) {\n//     return { ...video, rating: Math.max(video.rating - 1, 0) };\n//   }\n//   return video;\n// });\n// setVideoData(updatedVideos);\n\n// // Send API request to update card's vote count\n// fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n//*******************************************8 */\n/* };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n      if (response.ok) {\n        setVideoData(prevData => prevData.filter(element => element.id !== id));\n      } else {\n        console.error(\"Error deleting video.\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  \n    // try {\n    //   const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n    //   if (response.ok) {\n    //     setVideoData(videoData.filter((element) => element.id !== id));\n    //   } else {\n    //     console.error(\"Error deleting video:\");\n    //   }\n    // } catch (error) {\n    //   console.error(\"Error deleting video:\", error);\n    // }\n  };\n\n  return (\n    <VideoComponent\n      elements={videoData.sort((a, b) => b.rating - a.rating)}\n      onLike={handleLike}\n      onDislike={handleDislike}\n      onDelete={handleDelete}\n    />\n  );\n}\n*/\n//console.log(dataVideo)\nfunction VideoComponent({ elements }) {\n  return (\n    <div>\n      <div id=\"ascendingButton\">\n        <button class=\"btn btn-light customBackground1\">Ascending</button>\n        <button class=\"btn btn-light customBackground1\">Descending</button>\n      </div>\n\n      <div class=\"container\">\n        <div class=\"videoDisplayContainer\">\n          <VideoDisplay elements={elements} />\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction VideoDisplay({ elements, onLike, onDislike, onDelete }) {\n  //const [score, setScore] = useState(element.rating);\n  // const [videoData, setVideoData] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(\"/videos\")\n  //     .then((response) => response.json())\n  //     .then((updatedData) => {\n  //       setVideoData(updatedData);\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error fetching data:\", error);\n  //     });\n  // }, []);\n  // ///***************likedislike****************** */\n\n  return (\n    <div>\n      {\" \"}\n      {elements.map((element) => (\n        <div key={element.id} class=\"displayGrid\">\n          <h5>{element.title}</h5>\n\n          <iframe\n            width=\"330\"\n            height=\"200\"\n            src={element.url}\n            title={element.title}\n            border=\"none\"\n            border-radius=\"103px\"\n            frameborder=\"0\"\n            allowfullscreen\n            align=\"center\"\n          ></iframe>\n          <div class=\"likedislikeBtn\">\n            <button\n              videoId={element.id}\n              class=\"btn btn-light customBackground5\"\n              onClick={\n                () => onLike(element.id) /*() => setScore((s) => s + 1)*/\n              }\n            >\n              Like\n            </button>\n            <span>Votes:&nbsp;{element.rating}</span>\n\n            <button\n              videoId={element.id}\n              class=\"btn btn-light customBackground5\"\n              onClick={\n                () => onDislike(element.id) /*() => setScore((s) => s - 1)*/\n              }\n            >\n              Dislike\n            </button>\n          </div>\n          <button\n            class=\"btn btn-light deleteBtn\"\n            onClick={() => onDelete(element.id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function AllVideoDisplay() {\n  const [videoData, setVideoData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/videos\")\n      .then((response) => response.json())\n      .then((updatedData) => {\n        setVideoData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n  const handleLike = (videoId) => {\n    // Update frontend state optimistically\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" })\n      .then((response) => response.json())\n      .then((updatedVideo) => {\n        setVideoData((prevData) => {\n          return prevData.map((video) => {\n            if (video.id === updatedVideo.id) {\n              return { ...video, rating: updatedVideo.rating };\n            }\n            return video;\n          });\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error updating dislike:\", error);\n      });\n  };\n  // const updatedVideos = videoData.map((video) => {\n  //   if (video.id === videoId) {\n  //     return { ...video, rating: video.rating + 1 };\n  //   }\n  //   return video;\n  // });}\n  // Send API request to update card's vote count\n  //fetch(`/videos/${videoId}/like`, { method: \"POST\" });\n\n  const handleDislike = (videoId) => {\n    fetch(`/videos/${videoId}/dislike`, { method: \"POST\" })\n      .then((response) => response.json())\n      .then((updatedVideo) => {\n        setVideoData((prevData) => {\n          return prevData.map((video) => {\n            if (video.id === updatedVideo.id) {\n              return { ...video, rating: updatedVideo.rating };\n            }\n            return video;\n          });\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error updating dislike:\", error);\n      });\n  };\n\n  // const handleDislike = (videoId) => {\n  //   // Update frontend state optimistically\n  //   const updatedVideos = videoData.map((video) => {\n  //     if (video.id === videoId) {\n  //       return { ...video, rating: Math.max(video.rating - 1, 0) };\n  //     }\n  //     return video;\n  //   });\n  //   setVideoData(updatedVideos);\n\n  //   // Send API request to update card's vote count\n  //   fetch(`/videos/${videoId}/dislike`, { method: \"POST\" });\n  // };\n\n  ///********************************* */\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`/videos/${id}`, { method: \"DELETE\" });\n      if (response.ok) {\n        setVideoData((videoData) =>\n          videoData.filter((element) => element.id !== id)\n        );\n      } else {\n        console.error(\"Error deleting video:\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  };\n\n  return (\n    <VideoComponent\n      elements={videoData.sort((a, b) => b.rating - a.rating)}\n      onLike={handleLike}\n      onDislike={handleDislike}\n      onDelete={handleDelete}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}