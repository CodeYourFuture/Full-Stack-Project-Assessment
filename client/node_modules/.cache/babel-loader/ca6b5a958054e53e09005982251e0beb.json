{"ast":null,"code":"var _jsxFileName = \"/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/src/Videos.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport ShowVideos from \"./ShowVideos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Videos(props) {\n  _s();\n\n  const [loadData, setLoadData] = useState([]);\n  const [titleData, setTitleData] = useState();\n  const [urlData, setUrlData] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/videos\");\n\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n\n        const data = await response.json();\n        console.log(data);\n        return setLoadData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    getData();\n  }, [setLoadData]);\n\n  function cancelBtnHandler(e) {\n    e.preventDefault();\n    props.setShow(false);\n  }\n\n  function addClickHandeler(e) {\n    e.preventDefault();\n    const newVideo = {\n      title: titleData,\n      url: urlData\n    };\n    fetch(\"http://localhost:3000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVideo)\n    }).then(response => response.json()).then(data => {\n      setLoadData(prevLoadData => [...prevLoadData, newVideo]);\n      setTitleData(\"\");\n      setUrlData(\"\");\n    }).catch(error => {\n      console.error(\"Error adding video:\", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.show && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formDiv\",\n      onSubmit: addClickHandeler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          value: titleData,\n          onChange: e => setTitleData(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url\",\n          children: \"Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"url\",\n          value: urlData,\n          onChange: e => setUrlData(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCancelBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelBtnHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Videos, \"RHHJ74wT8xxKidVgZJfut48zfzY=\");\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/src/Videos.js"],"names":["useEffect","useState","React","ShowVideos","Videos","props","loadData","setLoadData","titleData","setTitleData","urlData","setUrlData","getData","response","fetch","ok","Error","data","json","console","log","error","cancelBtnHandler","e","preventDefault","setShow","addClickHandeler","newVideo","title","url","method","headers","body","JSON","stringify","then","prevLoadData","catch","show","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport  React from \"react\";\nimport ShowVideos from \"./ShowVideos\";\n\nfunction Videos(props) {\n\n   const [loadData,setLoadData] = useState([]);\n    const[titleData,setTitleData] = useState();\n    const [urlData, setUrlData] = useState();\n\n    useEffect(()=>{const getData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/videos\");\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n        const data = await response.json();\n        console.log(data);\n        return setLoadData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error)\n      }\n    };getData()},[setLoadData])\n\n\n    function cancelBtnHandler(e){\n      e.preventDefault();\n      props.setShow(false);\n    }\n\n\n    function addClickHandeler(e) {\n\n      e.preventDefault();\n      const newVideo = {  title: titleData, url: urlData };\nfetch(\"http://localhost:3000/videos\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify(newVideo),\n})\n  .then((response) => response.json())\n  .then((data) => {\n    setLoadData((prevLoadData) => [...prevLoadData, newVideo]);\n    setTitleData(\"\");\n    setUrlData(\"\");\n  })\n  .catch((error) => {\n    console.error(\"Error adding video:\", error);\n  });\n\n    }\n  return (\n    <>\n      {props.show && (\n        <form className=\"formDiv\" onSubmit={addClickHandeler}>\n          <div className=\"input-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              id=\"title\"\n              value={titleData}\n              onChange={(e) => setTitleData(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"url\">Url</label>\n            <input\n              id=\"url\"\n              value={urlData}\n              onChange={(e) => setUrlData(e.target.value)}\n              required\n            />\n          </div>\n        \n          <div className=\"addCancelBtn\">\n            <button onClick={cancelBtnHandler}>\n              Cancel\n            </button>\n            <button type=\"submit\">\n              Add\n            </button>\n          </div>\n        </form>\n      )}\n    </>\n  );  \n}\nexport default Videos;"]},"metadata":{},"sourceType":"module"}