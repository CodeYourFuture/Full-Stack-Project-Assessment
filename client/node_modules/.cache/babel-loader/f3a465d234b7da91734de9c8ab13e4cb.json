{"ast":null,"code":"'use strict';\n\nfunction oldBrowser() {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11');\n}\nvar safeBuffer = require('safe-buffer');\nvar randombytes = require('randombytes');\nvar Buffer = safeBuffer.Buffer;\nvar kBufferMaxLength = safeBuffer.kMaxLength;\nvar crypto = global.crypto || global.msCrypto;\nvar kMaxUint32 = Math.pow(2, 32) - 1;\nfunction assertOffset(offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) {\n    // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number');\n  }\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32');\n  }\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range');\n  }\n}\nfunction assertSize(size, offset, length) {\n  if (typeof size !== 'number' || size !== size) {\n    // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number');\n  }\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32');\n  }\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small');\n  }\n}\nif (crypto && crypto.getRandomValues || !process.browser) {\n  exports.randomFill = randomFill;\n  exports.randomFillSync = randomFillSync;\n} else {\n  exports.randomFill = oldBrowser;\n  exports.randomFillSync = oldBrowser;\n}\nfunction randomFill(buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');\n  }\n  if (typeof offset === 'function') {\n    cb = offset;\n    offset = 0;\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    cb = size;\n    size = buf.length - offset;\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function');\n  }\n  assertOffset(offset, buf.length);\n  assertSize(size, offset, buf.length);\n  return actualFill(buf, offset, size, cb);\n}\nfunction actualFill(buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer;\n    var uint = new Uint8Array(ourBuf, offset, size);\n    crypto.getRandomValues(uint);\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf);\n      });\n      return;\n    }\n    return buf;\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err);\n      }\n      bytes.copy(buf, offset);\n      cb(null, buf);\n    });\n    return;\n  }\n  var bytes = randombytes(size);\n  bytes.copy(buf, offset);\n  return buf;\n}\nfunction randomFillSync(buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0;\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');\n  }\n  assertOffset(offset, buf.length);\n  if (size === undefined) size = buf.length - offset;\n  assertSize(size, offset, buf.length);\n  return actualFill(buf, offset, size);\n}","map":{"version":3,"names":["oldBrowser","Error","safeBuffer","require","randombytes","Buffer","kBufferMaxLength","kMaxLength","crypto","global","msCrypto","kMaxUint32","Math","pow","assertOffset","offset","length","TypeError","RangeError","assertSize","size","getRandomValues","process","browser","exports","randomFill","randomFillSync","buf","cb","isBuffer","Uint8Array","actualFill","ourBuf","buffer","uint","nextTick","err","bytes","copy","undefined"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/randomfill/browser.js"],"sourcesContent":["'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}