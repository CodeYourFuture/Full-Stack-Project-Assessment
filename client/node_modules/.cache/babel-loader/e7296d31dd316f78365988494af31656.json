{"ast":null,"code":"'use client'; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport _toConsumableArray from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  var parse = parseFloat(val);\n  return \"\".concat(parse).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nexport function generateGrid(_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var size;\n  return theme.breakpoints.keys.reduce(function (globalStyles, breakpoint) {\n    // Use side effect over immutability for better performance.\n    var styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      var columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      var columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      var width = \"\".concat(Math.round(size / columnValue * 10e7) / 10e5, \"%\");\n      var more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        var themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          var fullWidth = \"calc(\".concat(width, \" + \").concat(getOffset(themeSpacing), \")\");\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection(_ref2) {\n  var theme = _ref2.theme,\n      ownerState = _ref2.ownerState;\n  var directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme: theme\n  }, directionValues, function (propValue) {\n    var output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[\"& > .\".concat(gridClasses.item)] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\n\nfunction extractZeroValueBreakpointKeys(_ref3) {\n  var breakpoints = _ref3.breakpoints,\n      values = _ref3.values;\n  var nonZeroKey = '';\n  Object.keys(values).forEach(function (key) {\n    if (nonZeroKey !== '') {\n      return;\n    }\n\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  var sortedBreakpointKeysByValue = Object.keys(breakpoints).sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\n\nexport function generateRowGap(_ref4) {\n  var theme = _ref4.theme,\n      ownerState = _ref4.ownerState;\n  var container = ownerState.container,\n      rowSpacing = ownerState.rowSpacing;\n  var styles = {};\n\n  if (container && rowSpacing !== 0) {\n    var rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    var zeroValueBreakpointKeys;\n\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme: theme\n    }, rowSpacingValues, function (propValue, breakpoint) {\n      var _zeroValueBreakpointK;\n\n      var themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          marginTop: \"-\".concat(getOffset(themeSpacing))\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingTop: getOffset(themeSpacing)\n        });\n      }\n\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n\n      return _defineProperty({\n        marginTop: 0\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingTop: 0\n      });\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap(_ref7) {\n  var theme = _ref7.theme,\n      ownerState = _ref7.ownerState;\n  var container = ownerState.container,\n      columnSpacing = ownerState.columnSpacing;\n  var styles = {};\n\n  if (container && columnSpacing !== 0) {\n    var columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    var zeroValueBreakpointKeys;\n\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme: theme\n    }, columnSpacingValues, function (propValue, breakpoint) {\n      var _zeroValueBreakpointK2;\n\n      var themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n          marginLeft: \"-\".concat(getOffset(themeSpacing))\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingLeft: getOffset(themeSpacing)\n        });\n      }\n\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n\n      return _defineProperty({\n        width: '100%',\n        marginLeft: 0\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingLeft: 0\n      });\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints) {\n  var styles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[\"spacing-xs-\".concat(String(spacing))]];\n  } // in case of object `spacing`\n\n\n  var spacingStyles = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[\"spacing-\".concat(breakpoint, \"-\").concat(String(value))]);\n    }\n  });\n  return spacingStyles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nvar GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var container = ownerState.container,\n        direction = ownerState.direction,\n        item = ownerState.item,\n        spacing = ownerState.spacing,\n        wrap = ownerState.wrap,\n        zeroMinWidth = ownerState.zeroMinWidth,\n        breakpoints = ownerState.breakpoints;\n    var spacingStyles = []; // in case of grid item\n\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n\n    var breakpointsStyles = [];\n    breakpoints.forEach(function (breakpoint) {\n      var value = ownerState[breakpoint];\n\n      if (value) {\n        breakpointsStyles.push(styles[\"grid-\".concat(breakpoint, \"-\").concat(String(value))]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth].concat(_toConsumableArray(spacingStyles), [direction !== 'row' && styles[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && styles[\"wrap-xs-\".concat(String(wrap))]], breakpointsStyles);\n  }\n})(function (_ref10) {\n  var ownerState = _ref10.ownerState;\n  return _extends({\n    boxSizing: 'border-box'\n  }, ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }, ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n\n  }, ownerState.zeroMinWidth && {\n    minWidth: 0\n  }, ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  });\n}, generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [\"spacing-xs-\".concat(String(spacing))];\n  } // in case of object `spacing`\n\n\n  var classes = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      var className = \"spacing-\".concat(breakpoint, \"-\").concat(String(value));\n      classes.push(className);\n    }\n  });\n  return classes;\n}\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      container = ownerState.container,\n      direction = ownerState.direction,\n      item = ownerState.item,\n      spacing = ownerState.spacing,\n      wrap = ownerState.wrap,\n      zeroMinWidth = ownerState.zeroMinWidth,\n      breakpoints = ownerState.breakpoints;\n  var spacingClasses = []; // in case of grid item\n\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n\n  var breakpointsClasses = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = ownerState[breakpoint];\n\n    if (value) {\n      breakpointsClasses.push(\"grid-\".concat(breakpoint, \"-\").concat(String(value)));\n    }\n  });\n  var slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth'].concat(_toConsumableArray(spacingClasses), [direction !== 'row' && \"direction-xs-\".concat(String(direction)), wrap !== 'wrap' && \"wrap-xs-\".concat(String(wrap))], breakpointsClasses)\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  var themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var props = extendSxProp(themeProps);\n\n  var className = props.className,\n      columnsProp = props.columns,\n      columnSpacingProp = props.columnSpacing,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      rowSpacingProp = props.rowSpacing,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var rowSpacing = rowSpacingProp || spacing;\n  var columnSpacing = columnSpacingProp || spacing;\n  var columnsContext = React.useContext(GridContext); // columns set with default breakpoint unit of 12\n\n  var columns = container ? columnsProp || 12 : columnsContext;\n  var breakpointsValues = {};\n\n  var otherFiltered = _extends({}, other);\n\n  breakpoints.keys.forEach(function (breakpoint) {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n\n  var ownerState = _extends({}, props, {\n    columns: columns,\n    container: container,\n    direction: direction,\n    item: item,\n    rowSpacing: rowSpacing,\n    columnSpacing: columnSpacing,\n    wrap: wrap,\n    zeroMinWidth: zeroMinWidth,\n    spacing: spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Grid/Grid.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","handleBreakpoints","unstable_resolveBreakpointValues","resolveBreakpointValues","unstable_composeClasses","composeClasses","requirePropFactory","styled","useThemeProps","useTheme","GridContext","gridClasses","getGridUtilityClass","jsx","_jsx","getOffset","val","parse","parseFloat","String","replace","generateGrid","theme","ownerState","size","breakpoints","keys","reduce","globalStyles","breakpoint","styles","flexBasis","flexGrow","maxWidth","flexShrink","width","columnsBreakpointValues","values","columns","columnValue","undefined","Math","round","more","container","item","columnSpacing","themeSpacing","spacing","fullWidth","Object","assign","up","generateDirection","directionValues","direction","propValue","output","flexDirection","indexOf","extractZeroValueBreakpointKeys","nonZeroKey","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","generateRowGap","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","_zeroValueBreakpointK","marginTop","paddingTop","includes","generateColumnGap","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","resolveSpacingStyles","Number","isNaN","spacingStyles","value","push","GridRoot","name","slot","overridesResolver","props","wrap","zeroMinWidth","breakpointsStyles","root","boxSizing","display","flexWrap","margin","minWidth","resolveSpacingClasses","classes","className","useUtilityClasses","spacingClasses","breakpointsClasses","slots","Grid","forwardRef","inProps","ref","themeProps","columnsProp","columnSpacingProp","component","rowSpacingProp","other","columnsContext","useContext","breakpointsValues","otherFiltered","Provider","children","as","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","arrayOf","number","elementType","bool","oneOf","lg","md","sm","sx","func","xl","xs","requireProp"],"mappings":"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","sourcesContent":["'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;"]},"metadata":{},"sourceType":"module"}