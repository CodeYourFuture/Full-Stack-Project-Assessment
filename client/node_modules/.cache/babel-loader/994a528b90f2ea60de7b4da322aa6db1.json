{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onura\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\VideoTable.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction convertWatchToEmbedLink(watchLink) {\n  const watchPattern = /https:\\/\\/www\\.youtube\\.com\\/watch\\?v=([A-Za-z0-9_-]+)/;\n  const match = watchLink.match(watchPattern);\n\n  if (match && match.length === 2) {\n    const videoId = match[1];\n    const embedLink = `https://www.youtube.com/embed/${videoId}`;\n    return embedLink;\n  } else {\n    return watchLink;\n  }\n}\n\nconst VideoTable = _ref => {\n  let {\n    video,\n    handleVote,\n    handleRemove\n  } = _ref;\n  const uploadDate = new Date(Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000);\n  const videoUrl = video.url.startsWith(\"https://www.youtube.com/watch?v=\") ? convertWatchToEmbedLink(video.url) : video.url;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"anything\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: videoUrl,\n        title: video.title,\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Uploaded: \", uploadDate.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = VideoTable;\nexport default VideoTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoTable\");","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoTable.js"],"names":["React","convertWatchToEmbedLink","watchLink","watchPattern","match","length","videoId","embedLink","VideoTable","video","handleVote","handleRemove","uploadDate","Date","now","Math","floor","random","videoUrl","url","startsWith","title","toLocaleString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,uBAAT,CAAiCC,SAAjC,EAA4C;AAC1C,QAAMC,YAAY,GAAG,wDAArB;AACA,QAAMC,KAAK,GAAGF,SAAS,CAACE,KAAV,CAAgBD,YAAhB,CAAd;;AAEA,MAAIC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAA9B,EAAiC;AAC/B,UAAMC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAArB;AACA,UAAMG,SAAS,GAAI,iCAAgCD,OAAQ,EAA3D;AACA,WAAOC,SAAP;AACD,GAJD,MAIO;AACL,WAAOL,SAAP;AACD;AACF;;AAED,MAAMM,UAAU,GAAG,QAAyC;AAAA,MAAxC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,GAAwC;AAC1D,QAAMC,UAAU,GAAG,IAAIC,IAAJ,CACjBA,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAjC,GAAsC,EAAtC,GAA2C,EAA3C,GAAgD,IAD5C,CAAnB;AAIA,QAAMC,QAAQ,GAAGT,KAAK,CAACU,GAAN,CAAUC,UAAV,CAAqB,kCAArB,IACbnB,uBAAuB,CAACQ,KAAK,CAACU,GAAP,CADV,GAEbV,KAAK,CAACU,GAFV;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA,gBAAKV,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAEH,QADP;AAEE,QAAA,KAAK,EAAET,KAAK,CAACY,KAFf;AAGE,QAAA,eAAe;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE;AAAA,+BAAcT,UAAU,CAACU,cAAX,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7BD;;KAAMd,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction convertWatchToEmbedLink(watchLink) {\r\n  const watchPattern = /https:\\/\\/www\\.youtube\\.com\\/watch\\?v=([A-Za-z0-9_-]+)/;\r\n  const match = watchLink.match(watchPattern);\r\n\r\n  if (match && match.length === 2) {\r\n    const videoId = match[1];\r\n    const embedLink = `https://www.youtube.com/embed/${videoId}`;\r\n    return embedLink;\r\n  } else {\r\n    return watchLink;\r\n  }\r\n}\r\n\r\nconst VideoTable = ({ video, handleVote, handleRemove }) => {\r\n  const uploadDate = new Date(\r\n    Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000\r\n  );\r\n\r\n  const videoUrl = video.url.startsWith(\"https://www.youtube.com/watch?v=\")\r\n    ? convertWatchToEmbedLink(video.url)\r\n    : video.url;\r\n\r\n  return (\r\n    <div className=\"video\">\r\n      <h2>{video.title}</h2>\r\n      <div className=\"anything\">\r\n        <iframe\r\n          src={videoUrl}\r\n          title={video.title}\r\n          allowFullScreen\r\n        />\r\n      </div>\r\n\r\n      {/* <Rating\r\n        video={video}\r\n        handleVote={handleVote}\r\n        handleRemove={handleRemove}\r\n      /> */}\r\n\r\n      <p>Uploaded: {uploadDate.toLocaleString()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoTable;\r\n"]},"metadata":{},"sourceType":"module"}