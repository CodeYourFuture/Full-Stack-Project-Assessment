{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: (_ref, styles) => {\n    let {\n      ownerState\n    } = _ref;\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(_ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return _extends({\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top'\n  }, ownerState.margin === 'normal' && {\n    marginTop: 16,\n    marginBottom: 8\n  }, ownerState.margin === 'dense' && {\n    marginTop: 8,\n    marginBottom: 4\n  }, ownerState.fullWidth && {\n    width: '100%'\n  });\n});\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/FormControl/FormControl.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","useThemeProps","styled","isFilled","isAdornedStart","capitalize","isMuiElement","FormControlContext","getFormControlUtilityClasses","jsx","_jsx","useUtilityClasses","ownerState","classes","margin","fullWidth","slots","root","FormControlRoot","name","slot","overridesResolver","styles","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginTop","marginBottom","width","FormControl","forwardRef","inProps","ref","props","children","className","color","component","disabled","error","focused","visuallyFocused","hiddenLabel","required","size","variant","other","adornedStart","setAdornedStart","useState","initialAdornedStart","Children","forEach","child","input","filled","setFilled","initialFilled","inputProps","focusedState","setFocused","undefined","registerEffect","process","env","NODE_ENV","registeredInput","useRef","current","console","join","childContext","useMemo","onBlur","onEmpty","onFilled","onFocus","Provider","value","as","propTypes","node","object","string","oneOfType","oneOf","elementType","bool","sx","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, ownerState.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: '100%'\n}));\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n  const {\n      children,\n      className,\n      color = 'primary',\n      component = 'div',\n      disabled = false,\n      error = false,\n      focused: visuallyFocused,\n      fullWidth = false,\n      hiddenLabel = false,\n      margin = 'none',\n      required = false,\n      size = 'medium',\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;"]},"metadata":{},"sourceType":"module"}