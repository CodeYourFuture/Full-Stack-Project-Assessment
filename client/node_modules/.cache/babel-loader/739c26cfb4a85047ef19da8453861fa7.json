{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { useListItem } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n\nfunction idGenerator(existingKeys) {\n  return \"menu-item-\".concat(existingKeys.size);\n}\n\nvar FALLBACK_MENU_CONTEXT = {\n  dispatch: function dispatch() {},\n  popupId: '',\n  registerPopup: function registerPopup() {},\n  registerTrigger: function registerTrigger() {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\n\nexport function useMenuItem(params) {\n  var _React$useContext;\n\n  var _params$disabled = params.disabled,\n      disabled = _params$disabled === void 0 ? false : _params$disabled,\n      idParam = params.id,\n      externalRef = params.rootRef,\n      label = params.label;\n  var id = useId(idParam);\n  var itemRef = React.useRef(null);\n  var itemMetadata = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      id: id != null ? id : '',\n      label: label,\n      ref: itemRef\n    };\n  }, [disabled, id, label]);\n\n  var _ref = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT,\n      dispatch = _ref.dispatch;\n\n  var _useListItem = useListItem({\n    item: id\n  }),\n      getListRootProps = _useListItem.getRootProps,\n      highlighted = _useListItem.highlighted,\n      listItemRefHandler = _useListItem.rootRef;\n\n  var _useCompoundItem = useCompoundItem(id != null ? id : idGenerator, itemMetadata),\n      index = _useCompoundItem.index,\n      totalItemCount = _useCompoundItem.totalItemCount;\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: true\n  }),\n      getButtonProps = _useButton.getRootProps,\n      focusVisible = _useButton.focusVisible,\n      buttonRefHandler = _useButton.rootRef;\n\n  var handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id: id,\n    highlighted: highlighted,\n    disabled: disabled,\n    label: label\n  });\n\n  var createHandleClick = function createHandleClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: DropdownActionTypes.close,\n        event: event\n      });\n    };\n  };\n\n  var getOwnHandlers = function getOwnHandlers() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      onClick: createHandleClick(otherHandlers)\n    });\n  };\n\n  function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var getCombinedRootProps = combineHooksSlotProps(getOwnHandlers, combineHooksSlotProps(getButtonProps, getListRootProps));\n    return _extends({}, getCombinedRootProps(otherHandlers), {\n      ref: handleRef,\n      role: 'menuitem'\n    });\n  } // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n\n\n  if (id === undefined) {\n    return {\n      getRootProps: getRootProps,\n      disabled: false,\n      focusVisible: focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n\n  return {\n    getRootProps: getRootProps,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    highlighted: highlighted,\n    index: index,\n    totalItemCount: totalItemCount,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useMenuItem/useMenuItem.js"],"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useButton","useListItem","DropdownActionTypes","DropdownContext","combineHooksSlotProps","useCompoundItem","idGenerator","existingKeys","size","FALLBACK_MENU_CONTEXT","dispatch","popupId","registerPopup","registerTrigger","state","open","triggerElement","useMenuItem","params","_React$useContext","disabled","idParam","id","externalRef","rootRef","label","itemRef","useRef","itemMetadata","useMemo","ref","useContext","item","getListRootProps","getRootProps","highlighted","listItemRefHandler","index","totalItemCount","focusableWhenDisabled","getButtonProps","focusVisible","buttonRefHandler","handleRef","useDebugValue","createHandleClick","otherHandlers","event","_otherHandlers$onClic","onClick","call","defaultMuiPrevented","type","close","getOwnHandlers","getCombinedRootProps","role","undefined"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { useListItem } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nfunction idGenerator(existingKeys) {\n  return `menu-item-${existingKeys.size}`;\n}\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\nexport function useMenuItem(params) {\n  var _React$useContext;\n  const {\n    disabled = false,\n    id: idParam,\n    rootRef: externalRef,\n    label\n  } = params;\n  const id = useId(idParam);\n  const itemRef = React.useRef(null);\n  const itemMetadata = React.useMemo(() => ({\n    disabled,\n    id: id != null ? id : '',\n    label,\n    ref: itemRef\n  }), [disabled, id, label]);\n  const {\n    dispatch\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\n  const {\n    getRootProps: getListRootProps,\n    highlighted,\n    rootRef: listItemRefHandler\n  } = useListItem({\n    item: id\n  });\n  const {\n    index,\n    totalItemCount\n  } = useCompoundItem(id != null ? id : idGenerator, itemMetadata);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const handleRef = useForkRef(listItemRefHandler, buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id,\n    highlighted,\n    disabled,\n    label\n  });\n  const createHandleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    dispatch({\n      type: DropdownActionTypes.close,\n      event\n    });\n  };\n  const getOwnHandlers = (otherHandlers = {}) => _extends({}, otherHandlers, {\n    onClick: createHandleClick(otherHandlers)\n  });\n  function getRootProps(otherHandlers = {}) {\n    const getCombinedRootProps = combineHooksSlotProps(getOwnHandlers, combineHooksSlotProps(getButtonProps, getListRootProps));\n    return _extends({}, getCombinedRootProps(otherHandlers), {\n      ref: handleRef,\n      role: 'menuitem'\n    });\n  }\n\n  // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n  if (id === undefined) {\n    return {\n      getRootProps,\n      disabled: false,\n      focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n  return {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted,\n    index,\n    totalItemCount,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}