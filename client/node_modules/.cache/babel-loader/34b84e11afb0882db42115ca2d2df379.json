{"ast":null,"code":"'use strict';\n\n// map types from key to human-friendly name\nexports.name = new Map([['0', 'File'],\n// same as File\n['', 'OldFile'], ['1', 'Link'], ['2', 'SymbolicLink'],\n// Devices and FIFOs aren't fully supported\n// they are parsed, but skipped when unpacking\n['3', 'CharacterDevice'], ['4', 'BlockDevice'], ['5', 'Directory'], ['6', 'FIFO'],\n// same as File\n['7', 'ContiguousFile'],\n// pax headers\n['g', 'GlobalExtendedHeader'], ['x', 'ExtendedHeader'],\n// vendor-specific stuff\n// skip\n['A', 'SolarisACL'],\n// like 5, but with data, which should be skipped\n['D', 'GNUDumpDir'],\n// metadata only, skip\n['I', 'Inode'],\n// data = link path of next file\n['K', 'NextFileHasLongLinkpath'],\n// data = path of next file\n['L', 'NextFileHasLongPath'],\n// skip\n['M', 'ContinuationFile'],\n// like L\n['N', 'OldGnuLongPath'],\n// skip\n['S', 'SparseFile'],\n// skip\n['V', 'TapeVolumeHeader'],\n// like x\n['X', 'OldExtendedHeader']]);\n\n// map the other direction\nexports.code = new Map(Array.from(exports.name).map(function (kv) {\n  return [kv[1], kv[0]];\n}));","map":null,"metadata":{},"sourceType":"script"}