{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meron\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Video from \"./Video\"; // import AddVideoButton from \"./AddVideoButton\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n\n  const addVideo = (title, url) => {\n    setVideos([...videos, {\n      title,\n      url,\n      votes: 0,\n      id: videos.length\n    }]);\n  };\n\n  const removeVideo = async id => {\n    const res = await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    await res.json();\n    setVideos(videos.filter(video => video.id !== id));\n  };\n\n  useEffect(() => {\n    async function getVideos() {\n      const response = await fetch(\"http://localhost:5000\");\n      const data = await response.json();\n      console.log(data);\n      setVideos([...data]);\n    }\n\n    getVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Video Recommendation Engine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddVideoButton, {\n        onVideoAdded: addVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          className: \"video\",\n          id: video.id,\n          title: video.title,\n          url: \"https://youtube.com/embed/\" + video.url.match(/v=([^&]+)/g).join().slice(2),\n          votes: video.votes,\n          onVideoRemoved: removeVideo\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/meron/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["useState","useEffect","Video","Container","Col","App","videos","setVideos","addVideo","title","url","votes","id","length","removeVideo","res","fetch","method","json","filter","video","getVideos","response","data","console","log","map","match","join","slice"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,QAAQ,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAE/BH,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY;AAAEG,MAAAA,KAAF;AAASC,MAAAA,GAAT;AAAcC,MAAAA,KAAK,EAAE,CAArB;AAAwBC,MAAAA,EAAE,EAAEN,MAAM,CAACO;AAAnC,KAAZ,CAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAOF,EAAP,IAAc;AAChC,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,yBAAwBJ,EAAG,EAA7B,EAAgC;AACrDK,MAAAA,MAAM,EAAE;AAD6C,KAAhC,CAAvB;AAGA,UAAMF,GAAG,CAACG,IAAJ,EAAN;AACAX,IAAAA,SAAS,CAACD,MAAM,CAACa,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAaA,EAAtC,CAAD,CAAT;AACD,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeoB,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC,uBAAD,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMD,QAAQ,CAACJ,IAAT,EAAnB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAhB,MAAAA,SAAS,CAAC,CAAC,GAAGgB,IAAJ,CAAD,CAAT;AACD;;AAEDF,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,YAAY,EAAEb;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,gBACGF,MAAM,CAACoB,GAAP,CAAYN,KAAD,iBACV,QAAC,GAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,OAAjB;AAEE,UAAA,EAAE,EAAEA,KAAK,CAACR,EAFZ;AAGE,UAAA,KAAK,EAAEQ,KAAK,CAACX,KAHf;AAIE,UAAA,GAAG,EACD,+BACAW,KAAK,CAACV,GAAN,CACGiB,KADH,CACS,YADT,EAEGC,IAFH,GAGGC,KAHH,CAGS,CAHT,CANJ;AAWE,UAAA,KAAK,EAAET,KAAK,CAACT,KAXf;AAYE,UAAA,cAAc,EAAEG;AAZlB,WACOM,KAAK,CAACR,EADb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF,eA0BE;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA1DQP,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\nimport Video from \"./Video\";\r\n// import AddVideoButton from \"./AddVideoButton\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction App() {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const addVideo = (title, url) => {\r\n    \r\n    setVideos([...videos, { title, url, votes: 0, id: videos.length }]);\r\n  };\r\n\r\n  const removeVideo = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    await res.json();\r\n    setVideos(videos.filter((video) => video.id !== id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getVideos() {\r\n      const response = await fetch(\"http://localhost:5000\");\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      setVideos([...data]);\r\n    }\r\n\r\n    getVideos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>React Video Recommendation Engine</h1>\r\n        <AddVideoButton onVideoAdded={addVideo} />\r\n      </header>\r\n      <hr />\r\n      <Container className=\"container\">\r\n        {videos.map((video) => (\r\n          <Col>\r\n            <Video className=\"video\"\r\n              key={video.id}\r\n              id={video.id}\r\n              title={video.title}\r\n              url={\r\n                \"https://youtube.com/embed/\" +\r\n                video.url\r\n                  .match(/v=([^&]+)/g)\r\n                  .join()\r\n                  .slice(2)\r\n              }\r\n              votes={video.votes}\r\n              onVideoRemoved={removeVideo}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Container>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}