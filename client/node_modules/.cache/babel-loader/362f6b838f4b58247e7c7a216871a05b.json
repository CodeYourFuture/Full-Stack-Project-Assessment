{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/src/Video.js\";\nimport React from \"react\";\nimport \"./Video.css\";\nimport { Card, CardHeader, CardContent, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = _ref => {\n  let {\n    video,\n    onVoteUp,\n    onVoteDown,\n    onRemove\n  } = _ref;\n  const videoId = extractVideoIdFromUrl(video.url);\n  const uploadDate = video.upload_Date ? new Date(video.upload_Date).toLocaleString() : \"N/A\"; //   console.log(\"Received video data:\", video);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: video.title // subheader={`Uploaded on: ${new Date(\n      //   video.uploadDate\n      // ).toLocaleString()}`}\n      ,\n      subheader: `Uploaded on: ${uploadDate}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: video.title,\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: onVoteUp,\n          children: \"\\uD83D\\uDC4D Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"span\",\n          children: video.votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: onVoteDown,\n          children: \"\\uD83D\\uDC4E Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: onRemove,\n        children: \"Remove Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Video;\n\nfunction extractVideoIdFromUrl(url) {\n  const regex = /[?&]v=([^?&]+)/;\n  const match = url.match(regex);\n  return match ? match[1] : \"\";\n}\n\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/src/Video.js"],"names":["React","Card","CardHeader","CardContent","Typography","Button","Video","video","onVoteUp","onVoteDown","onRemove","videoId","extractVideoIdFromUrl","url","uploadDate","upload_Date","Date","toLocaleString","title","votes","regex","match"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,EAAaC,UAAb,EAAwBC,WAAxB,EAAoCC,UAApC,EAA+CC,MAA/C,QAA6D,eAA7D;;;AAEA,MAAMC,KAAK,GAAG,QAA+C;AAAA,MAA9C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,GAA8C;AAC3D,QAAMC,OAAO,GAAGC,qBAAqB,CAACL,KAAK,CAACM,GAAP,CAArC;AACA,QAAMC,UAAU,GAAGP,KAAK,CAACQ,WAAN,GACf,IAAIC,IAAJ,CAAST,KAAK,CAACQ,WAAf,EAA4BE,cAA5B,EADe,GAEf,KAFJ,CAF2D,CAK3D;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEV,KAAK,CAACW,KADf,CAEE;AACA;AACA;AAJF;AAKE,MAAA,SAAS,EAAG,gBAAeJ,UAAW;AALxC;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,WAAD;AAAA,8BACE;AACE,QAAA,KAAK,EAAEP,KAAK,CAACW,KADf;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,GAAG,EAAG,iCAAgCP,OAAQ,EAJhD;AAKE,QAAA,KAAK,EAAC,0FALR;AAME,QAAA,eAAe;AANjB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,OAAO,EAAEH,QAArD;AAAA,oBAA+D;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,MAAnC;AAAA,oBACGD,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,WAAlC;AAA8C,UAAA,OAAO,EAAEV,UAAvD;AAAA,oBAAmE;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAoBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,OAAlC;AAA0C,QAAA,OAAO,EAAEC,QAAnD;AAAA,kBAA6D;AAA7D;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA5CD;;KAAMJ,K;;AA8CN,SAASM,qBAAT,CAA+BC,GAA/B,EAAoC;AAClC,QAAMO,KAAK,GAAG,gBAAd;AACA,QAAMC,KAAK,GAAGR,GAAG,CAACQ,KAAJ,CAAUD,KAAV,CAAd;AACA,SAAOC,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,EAA1B;AACD;;AAED,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport \"./Video.css\";\nimport {Card,CardHeader,CardContent,Typography,Button,} from \"@mui/material\";\n\nconst Video = ({ video, onVoteUp, onVoteDown, onRemove }) => {\n  const videoId = extractVideoIdFromUrl(video.url);\n  const uploadDate = video.upload_Date\n    ? new Date(video.upload_Date).toLocaleString()\n    : \"N/A\";\n  //   console.log(\"Received video data:\", video);\n\n\n\n  return (\n    <Card className=\"video\">\n      <CardHeader\n        title={video.title}\n        // subheader={`Uploaded on: ${new Date(\n        //   video.uploadDate\n        // ).toLocaleString()}`}\n        subheader={`Uploaded on: ${uploadDate}`}\n      />\n      <CardContent>\n        <iframe\n          title={video.title}\n          width=\"560\"\n          height=\"315\"\n          src={`https://www.youtube.com/embed/${videoId}`}\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n        <div className=\"vote\">\n          <Button variant=\"contained\" color=\"primary\" onClick={onVoteUp}>\n            &#128077; Up\n          </Button>\n          <Typography variant=\"h6\" component=\"span\">\n            {video.votes}\n          </Typography>\n          <Button variant=\"contained\" color=\"secondary\" onClick={onVoteDown}>\n            &#128078; Down\n          </Button>\n        </div>\n        <Button variant=\"contained\" color=\"error\" onClick={onRemove}>\n          Remove Video\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nfunction extractVideoIdFromUrl(url) {\n  const regex = /[?&]v=([^?&]+)/;\n  const match = url.match(regex);\n  return match ? match[1] : \"\";\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}