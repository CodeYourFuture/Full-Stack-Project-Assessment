{"ast":null,"code":"var _jsxFileName = \"/Users/jansofta/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoComponent.js\";\n// version4\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoComponent = _ref => {\n  let {\n    video,\n    onUpVote,\n    onDownVote,\n    onRemove\n  } = _ref;\n\n  const handleDelete = () => {\n    onRemove(video.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: video.title,\n      width: \"560\",\n      height: \"315\",\n      src: video.url,\n      frameborder: \"0\",\n      allowFullScreen: true,\n      allow: \"autoplay; encrypted-media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", video.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onUpVote(video.id),\n      children: \"Up Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDownVote(video.id),\n      children: \"Down Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = VideoComponent;\nexport default VideoComponent; // version3\n// import React from \"react\";\n// import axios from \"axios\"; // Import axios\n// const VideoComponent = ({ video, onUpVote, onDownVote, onRemove }) => {\n//   const handleDelete = async () => {\n//     try {\n//       await axios.delete(`/videos/${video.id}`); // Make a DELETE request to remove a video\n//       onRemove(video.id);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n//   return (\n//     <div className=\"video-component\">\n//       {/* ... */}\n//       <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n//       <button onClick={handleDelete}>Remove</button> {/* Use handleDelete */}\n//     </div>\n//   );\n// };\n// export default VideoComponent;\n// version2\n// import React from \"react\";\n// function VideoComponent({ video, onUpVote, onDownVote, onRemove }) {\n//   return (\n//     <div className=\"video-component\">\n//       <h2>{video.title}</h2>\n//       <iframe\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         src={`https://www.youtube.com/embed/${video.url.split(\"v=\")[1]}`}\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.rating}</p>\n//       <p>Uploaded: {new Date(video.timestamp).toLocaleString()}</p>\n//       <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n// export default VideoComponent;\n// version1\n// import React from \"react\";\n// function VideoComponent({ video, onUpVote, onDownVote, onRemove }) {\n//   return (\n//     <div className=\"video-component\">\n//       <h2>{video.title}</h2>\n//       <iframe\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         src={`https://www.youtube.com/embed/${video.url.split(\"v=\")[1]}`}\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.rating}</p>\n//       <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n// export default VideoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoComponent\");","map":{"version":3,"sources":["/Users/jansofta/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoComponent.js"],"names":["React","VideoComponent","video","onUpVote","onDownVote","onRemove","handleDelete","id","title","url","rating"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAc,GAAG,QAA+C;AAAA,MAA9C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,GAA8C;;AACpE,QAAMC,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAACH,KAAK,CAACK,EAAP,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA,gBAAKL,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AACE,MAAA,KAAK,EAAEN,KAAK,CAACM,KADf;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,MAAM,EAAC,KAHT;AAIE,MAAA,GAAG,EAAEN,KAAK,CAACO,GAJb;AAKE,MAAA,WAAW,EAAC,GALd;AAME,MAAA,eAAe,MANjB;AAOE,MAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,YAXF,eAoBE;AAAA,6BAAYP,KAAK,CAACQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAqBE;AAAQ,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAACD,KAAK,CAACK,EAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AAAQ,MAAA,OAAO,EAAE,MAAMH,UAAU,CAACF,KAAK,CAACK,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE;AAAQ,MAAA,OAAO,EAAED,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAhCD;;KAAML,c;AAkCN,eAAeA,cAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// version4\nimport React from \"react\";\n\nconst VideoComponent = ({ video, onUpVote, onDownVote, onRemove }) => {\n  const handleDelete = () => {\n    onRemove(video.id);\n  };\n\n  return (\n    <div className=\"video-component\">\n      <h3>{video.title}</h3>\n      {/* <iframe\n        title={video.title}\n        width=\"560\"\n        height=\"315\"\n        src={video.url}\n        frameBorder=\"0\"\n        allowFullScreen\n      /> */}\n\n      <iframe\n        title={video.title}\n        width=\"560\"\n        height=\"315\"\n        src={video.url}\n        frameborder=\"0\"\n        allowFullScreen\n        allow=\"autoplay; encrypted-media\"\n      />\n      <p>Rating: {video.rating}</p>\n      <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n      <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n      <button onClick={handleDelete}>Remove</button>\n    </div>\n  );\n};\n\nexport default VideoComponent;\n\n// version3\n// import React from \"react\";\n// import axios from \"axios\"; // Import axios\n\n// const VideoComponent = ({ video, onUpVote, onDownVote, onRemove }) => {\n//   const handleDelete = async () => {\n//     try {\n//       await axios.delete(`/videos/${video.id}`); // Make a DELETE request to remove a video\n//       onRemove(video.id);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"video-component\">\n//       {/* ... */}\n//       <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n//       <button onClick={handleDelete}>Remove</button> {/* Use handleDelete */}\n//     </div>\n//   );\n// };\n\n// export default VideoComponent;\n\n// version2\n// import React from \"react\";\n\n// function VideoComponent({ video, onUpVote, onDownVote, onRemove }) {\n//   return (\n//     <div className=\"video-component\">\n//       <h2>{video.title}</h2>\n//       <iframe\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         src={`https://www.youtube.com/embed/${video.url.split(\"v=\")[1]}`}\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.rating}</p>\n//       <p>Uploaded: {new Date(video.timestamp).toLocaleString()}</p>\n//       <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n\n// export default VideoComponent;\n\n// version1\n// import React from \"react\";\n\n// function VideoComponent({ video, onUpVote, onDownVote, onRemove }) {\n//   return (\n//     <div className=\"video-component\">\n//       <h2>{video.title}</h2>\n//       <iframe\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         src={`https://www.youtube.com/embed/${video.url.split(\"v=\")[1]}`}\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.rating}</p>\n//       <button onClick={() => onUpVote(video.id)}>Up Vote</button>\n//       <button onClick={() => onDownVote(video.id)}>Down Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n\n// export default VideoComponent;\n"]},"metadata":{},"sourceType":"module"}