{"ast":null,"code":"'use client';\n/* eslint-disable jsx-a11y/aria-role */\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"slots\", \"slotProps\", \"direction\", \"orientation\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n  return _extends({\n    width: 40,\n    flexShrink: 0,\n    opacity: 0.8,\n    [`&.${tabScrollButtonClasses.disabled}`]: {\n      opacity: 0\n    }\n  }, ownerState.orientation === 'vertical' && {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\n    }\n  });\n});\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  var _slots$StartScrollBut, _slots$EndScrollButto;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    slots = {},\n    slotProps = {},\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({\n    isRtl\n  }, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft;\n  const EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight;\n  const startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  const endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, _extends({}, startButtonIconProps)) : /*#__PURE__*/_jsx(EndButtonIcon, _extends({}, endButtonIconProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The direction the button should indicate.\r\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\r\n   * If `true`, the component is disabled.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * The component orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/TabScrollButton/TabScrollButton.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","useSlotProps","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useTheme","useThemeProps","styled","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","height","transform","isRtl","TabScrollButton","forwardRef","inProps","ref","_slots$StartScrollBut","_slots$EndScrollButto","className","slotProps","direction","other","theme","StartButtonIcon","StartScrollButtonIcon","EndButtonIcon","EndScrollButtonIcon","startButtonIconProps","elementType","externalSlotProps","startScrollButtonIcon","additionalProps","fontSize","endButtonIconProps","endScrollButtonIcon","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","shape","oneOfType","func","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\r\n\r\n/* eslint-disable jsx-a11y/aria-role */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"className\", \"slots\", \"slotProps\", \"direction\", \"orientation\", \"disabled\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\r\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\r\nimport ButtonBase from '../ButtonBase';\r\nimport useTheme from '../styles/useTheme';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport styled from '../styles/styled';\r\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    orientation,\r\n    disabled\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', orientation, disabled && 'disabled']\r\n  };\r\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\r\n};\r\nconst TabScrollButtonRoot = styled(ButtonBase, {\r\n  name: 'MuiTabScrollButton',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\r\n  }\r\n})(({\r\n  ownerState\r\n}) => _extends({\r\n  width: 40,\r\n  flexShrink: 0,\r\n  opacity: 0.8,\r\n  [`&.${tabScrollButtonClasses.disabled}`]: {\r\n    opacity: 0\r\n  }\r\n}, ownerState.orientation === 'vertical' && {\r\n  width: '100%',\r\n  height: 40,\r\n  '& svg': {\r\n    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\r\n  }\r\n}));\r\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\r\n  var _slots$StartScrollBut, _slots$EndScrollButto;\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTabScrollButton'\r\n  });\r\n  const {\r\n      className,\r\n      slots = {},\r\n      slotProps = {},\r\n      direction\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const theme = useTheme();\r\n  const isRtl = theme.direction === 'rtl';\r\n  const ownerState = _extends({\r\n    isRtl\r\n  }, props);\r\n  const classes = useUtilityClasses(ownerState);\r\n  const StartButtonIcon = (_slots$StartScrollBut = slots.StartScrollButtonIcon) != null ? _slots$StartScrollBut : KeyboardArrowLeft;\r\n  const EndButtonIcon = (_slots$EndScrollButto = slots.EndScrollButtonIcon) != null ? _slots$EndScrollButto : KeyboardArrowRight;\r\n  const startButtonIconProps = useSlotProps({\r\n    elementType: StartButtonIcon,\r\n    externalSlotProps: slotProps.startScrollButtonIcon,\r\n    additionalProps: {\r\n      fontSize: 'small'\r\n    },\r\n    ownerState\r\n  });\r\n  const endButtonIconProps = useSlotProps({\r\n    elementType: EndButtonIcon,\r\n    externalSlotProps: slotProps.endScrollButtonIcon,\r\n    additionalProps: {\r\n      fontSize: 'small'\r\n    },\r\n    ownerState\r\n  });\r\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\r\n    component: \"div\",\r\n    className: clsx(classes.root, className),\r\n    ref: ref,\r\n    role: null,\r\n    ownerState: ownerState,\r\n    tabIndex: null\r\n  }, other, {\r\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, _extends({}, startButtonIconProps)) : /*#__PURE__*/_jsx(EndButtonIcon, _extends({}, endButtonIconProps))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The direction the button should indicate.\r\n   */\r\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * The component orientation (layout flow direction).\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\r\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    EndScrollButtonIcon: PropTypes.elementType,\r\n    StartScrollButtonIcon: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\r\n} : void 0;\r\nexport default TabScrollButton;"]},"metadata":{},"sourceType":"module"}