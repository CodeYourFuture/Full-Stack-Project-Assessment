{"ast":null,"code":"var _jsxFileName = \"/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/src/components/VideoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport YouTubeVideo from './YoutubeVideo';\nimport AddVideo from './AddVideo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoList = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/').then(response => response.json()).then(data => setVideos(data)).catch(error => console.log(\"Error\", error));\n  }, []);\n\n  const handleUpVote = videoId => {\n    fetch('http://127.0.0.1:5000/${videoId}/upvote', {\n      method: 'PUT'\n    }).then(() => {\n      const updatedVideos = videos.map(video => {\n        video.id === vide;\n      });\n    });\n    const updatedVideos = videos.map(video => video.id === videoId ? { ...video,\n      votes: video.votes + 1\n    } : video);\n    setVideos(updatedVideos);\n  };\n\n  const handleDownVote = videoId => {\n    const updatedVideos = videos.map(video => video.id === videoId ? { ...video,\n      votes: video.votes - 1\n    } : video);\n    setVideos(updatedVideos);\n  };\n\n  const handleAddVideo = newVideo => {\n    // Add the new video to the list with the current timestamp\n    const updatedVideos = [...videos, { ...newVideo,\n      uploadDate: new Date()\n    }];\n    setVideos(updatedVideos);\n  }; // Order the videos by the number of upvotes (descending order)\n\n\n  const orderedVideos = [...videos].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddVideo, {\n      onAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), orderedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Uploaded on: \", video.uploadDate.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YouTubeVideo, {\n        videoId: video.youtubeVideoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Votes: \", video.votes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpVote(video.id),\n        children: \"Up Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDownVote(video.id),\n        children: \"Down Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoList, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = VideoList;\nexport default VideoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"sources":["/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/src/components/VideoList.jsx"],"names":["React","useState","useEffect","YouTubeVideo","AddVideo","VideoList","videos","setVideos","fetch","then","response","json","data","catch","error","console","log","handleUpVote","videoId","method","updatedVideos","map","video","id","vide","votes","handleDownVote","handleAddVideo","newVideo","uploadDate","Date","orderedVideos","sort","a","b","title","toLocaleString","youtubeVideoId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEFC,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,KAAK,CAAC,wBAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUL,SAAS,CAACK,IAAD,CAFzB,EAGCC,KAHD,CAGQC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAHlB;AAID,GALQ,EAKP,EALO,CAAT;;AAME,QAAMG,YAAY,GAAIC,OAAD,IAAa;AAEhCV,IAAAA,KAAK,CAAC,yCAAD,EAA2C;AAC9CW,MAAAA,MAAM,EAAE;AADsC,KAA3C,CAAL,CAEGV,IAFH,CAEQ,MAAK;AACX,YAAMW,aAAa,GAAGd,MAAM,CAACe,GAAP,CAAYC,KAAD,IAAS;AACxCA,QAAAA,KAAK,CAACC,EAAN,KAAYC,IAAZ;AACD,OAFqB,CAAtB;AAGD,KAND;AAOA,UAAMJ,aAAa,GAAGd,MAAM,CAACe,GAAP,CAAYC,KAAD,IAC/BA,KAAK,CAACC,EAAN,KAAaL,OAAb,GAAuB,EAAE,GAAGI,KAAL;AAAYG,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAjC,KAAvB,GAA8DH,KAD1C,CAAtB;AAGAf,IAAAA,SAAS,CAACa,aAAD,CAAT;AACD,GAbD;;AAeA,QAAMM,cAAc,GAAIR,OAAD,IAAa;AAClC,UAAME,aAAa,GAAGd,MAAM,CAACe,GAAP,CAAYC,KAAD,IAC/BA,KAAK,CAACC,EAAN,KAAaL,OAAb,GAAuB,EAAE,GAAGI,KAAL;AAAYG,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAjC,KAAvB,GAA8DH,KAD1C,CAAtB;AAGAf,IAAAA,SAAS,CAACa,aAAD,CAAT;AACD,GALD;;AAOA,QAAMO,cAAc,GAAIC,QAAD,IAAc;AACnC;AACA,UAAMR,aAAa,GAAG,CAAC,GAAGd,MAAJ,EAAY,EAAE,GAAGsB,QAAL;AAAeC,MAAAA,UAAU,EAAE,IAAIC,IAAJ;AAA3B,KAAZ,CAAtB;AACAvB,IAAAA,SAAS,CAACa,aAAD,CAAT;AACD,GAJD,CA/BsB,CAqCtB;;;AACA,QAAMW,aAAa,GAAG,CAAC,GAAGzB,MAAJ,EAAY0B,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACT,KAAF,GAAUQ,CAAC,CAACR,KAAvC,CAAtB;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGI,aAAa,CAACV,GAAd,CAAmBC,KAAD,iBACjB;AAAA,8BACE;AAAA,kBAAKA,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCAAiBb,KAAK,CAACO,UAAN,CAAiBO,cAAjB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEd,KAAK,CAACe;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,8BAAWf,KAAK,CAACG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMR,YAAY,CAACK,KAAK,CAACC,EAAP,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMG,cAAc,CAACJ,KAAK,CAACC,EAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAAUD,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzDD;;GAAMlB,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport YouTubeVideo from './YoutubeVideo';\nimport AddVideo from './AddVideo';\n\nconst VideoList = () => {\n  const [videos, setVideos] = useState([]);\n\nuseEffect(()=> {\n  fetch('http://127.0.0.1:5000/')\n  .then((response) => response.json())\n  .then((data) => setVideos(data))\n  .catch((error) => console.log(\"Error\", error))\n},[])\n  const handleUpVote = (videoId) => {\n\n    fetch('http://127.0.0.1:5000/${videoId}/upvote',{\n      method: 'PUT'\n    }).then(()=> {\n      const updatedVideos = videos.map((video)=>{\n        video.id ===vide\n      })\n    })\n    const updatedVideos = videos.map((video) =>\n      video.id === videoId ? { ...video, votes: video.votes + 1 } : video\n    );\n    setVideos(updatedVideos);\n  };\n\n  const handleDownVote = (videoId) => {\n    const updatedVideos = videos.map((video) =>\n      video.id === videoId ? { ...video, votes: video.votes - 1 } : video\n    );\n    setVideos(updatedVideos);\n  };\n\n  const handleAddVideo = (newVideo) => {\n    // Add the new video to the list with the current timestamp\n    const updatedVideos = [...videos, { ...newVideo, uploadDate: new Date() }];\n    setVideos(updatedVideos);\n  };\n\n  // Order the videos by the number of upvotes (descending order)\n  const orderedVideos = [...videos].sort((a, b) => b.votes - a.votes);\n\n  return (\n    <div>\n      <AddVideo onAddVideo={handleAddVideo} />\n\n      <h2>List of Videos</h2>\n      {orderedVideos.map((video) => (\n        <div key={video.id}>\n          <h3>{video.title}</h3>\n          <p>Uploaded on: {video.uploadDate.toLocaleString()}</p>\n          <YouTubeVideo videoId={video.youtubeVideoId} />\n          <p>Votes: {video.votes}</p>\n          <button onClick={() => handleUpVote(video.id)}>Up Vote</button>\n          <button onClick={() => handleDownVote(video.id)}>Down Vote</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoList;\n"]},"metadata":{},"sourceType":"module"}