{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n};\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$displayName = _ref.displayName,\n    displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n    Component = _ref.Component,\n    defaultProps = _ref.defaultProps;\n  var BsComponent = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var className = _ref2.className,\n      bsPrefix = _ref2.bsPrefix,\n      _ref2$as = _ref2.as,\n      Tag = _ref2$as === void 0 ? Component || 'div' : _ref2$as,\n      props = _objectWithoutProperties(_ref2, [\"className\", \"bsPrefix\", \"as\"]);\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, _objectSpread({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","map":null,"metadata":{},"sourceType":"module"}