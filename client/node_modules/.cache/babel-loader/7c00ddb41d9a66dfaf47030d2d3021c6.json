{"ast":null,"code":"var _jsxFileName = \"/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport Rating from \"./Rating\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoComponent = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]); //  const [filteredVideos, setFilteredVideos] = useState([]);\n\n  const [videoList, setVideoList] = useState([]);\n  const [sortedVideoList, setSortedVideoList] = useState([]); // const [ascending, setAscending] =useState(false)\n  //  const searchVideos = (searchTerm) => {\n  //    const filtered = videos.filter((video) =>\n  //      video.title.toLowerCase().includes(searchTerm.toLowerCase())\n  //    );\n  //    setFilteredVideos(filtered);\n  //  };\n  // const removeVideo = (videoId) => {\n  //   const updatedVideoList = videoList.filter(\n  //     (video) => video.id !== videoId\n  //   );\n  //   setVideos(updatedVideoList);\n  //   setSortedVideoList(\n  //     [...updatedVideoList].sort((a, b) => b.rating - a.rating)\n  //   );\n  // };\n\n  async function fetchData() {\n    try {\n      const url = \"http://localhost:5000/videos\";\n      const fetchURL = `${url}`; // `http://localhost:5000/videos`;\n\n      const response = await fetch(fetchURL);\n\n      if (response.ok) {\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setVideos(data.videos);\n        const sortedList = [...data.videos].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"useEffect\");\n  }, []); // const AddVideo = (newVideo) => {\n  //   const time = moment().format(\"YYYY-MM-DD HH:mm\");\n  //   const addnewVideo = [...videos, { ...newVideo, rating: 0, time }];\n  //   console.log(addnewVideo);\n  //   setVideos(addnewVideo);\n  //   setSortedVideoList([...addnewVideo].sort((a, b) => b.rating - a.rating));\n  // };\n  //  const displayedVideos =\n  //    filteredVideos.length > 0 ? filteredVideos : videos;\n  // function handleDeleteVideo(videoID) {\n  //   fetch(`http://localhost:5000/video/${videoID}`, {\n  //     method: \"DELETE\",\n  //     headers: {\n  //       Content_Type: \"application/json\",\n  //     },\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) {\n  //         throw new Error(`${videoID} could not be found`);\n  //       }\n  //       console.log(response);\n  //       getAllVideos();\n  //     })\n  //     .catch((error) => console.log(error));\n  // }\n\n  const handleVote = (videoId, voteType) => {\n    const updatedVideoList = videoList.map(video => {\n      if (video.id === videoId) {\n        if (voteType === \"like\") {\n          return { ...video,\n            rating: video.rating + 1\n          };\n        } else if (voteType === \"dislike\") {\n          return { ...video,\n            rating: video.rating - 1\n          };\n        }\n      }\n\n      return video;\n    });\n    setVideoList(updatedVideoList);\n    setSortedVideoList([...updatedVideoList].sort((a, b) => b.rating - a.rating));\n  };\n\n  const handleDelete = id => {\n    setVideos(videos.filter(video => video.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sortedVideoList.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: videos.Url,\n        title: videos.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        rating: videos.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-emojis\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-button\",\n          onClick: () => handleVote(video.id, \"like\"),\n          children: /*#__PURE__*/_jsxDEV(AiFillLike, {\n            className: \"like-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-button\",\n          onClick: () => handleVote(video.id, \"dislike\"),\n          children: /*#__PURE__*/_jsxDEV(AiFillDislike, {\n            className: \"dislike-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(video.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoComponent, \"PN0Ksf2Yzn1ImhkZC334PQMOl34=\");\n\n_c = VideoComponent;\nexport default VideoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoComponent\");","map":{"version":3,"sources":["/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoComponent.jsx"],"names":["Rating","React","useState","useEffect","moment","VideoComponent","videos","setVideos","videoList","setVideoList","sortedVideoList","setSortedVideoList","fetchData","url","fetchURL","response","fetch","ok","console","log","data","json","sortedList","sort","a","b","rating","error","handleVote","videoId","voteType","updatedVideoList","map","video","id","handleDelete","filter","index","title","Url"],"mappings":"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","sourcesContent":["\nimport Rating from \"./Rating\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\n\nconst VideoComponent = () => {\nconst [videos, setVideos] = useState([]);\n  //  const [filteredVideos, setFilteredVideos] = useState([]);\n   const [videoList, setVideoList] = useState([]);\n   const [sortedVideoList, setSortedVideoList] = useState([]);\n  // const [ascending, setAscending] =useState(false)\n  \n\n   \n  //  const searchVideos = (searchTerm) => {\n  //    const filtered = videos.filter((video) =>\n  //      video.title.toLowerCase().includes(searchTerm.toLowerCase())\n  //    );\n  //    setFilteredVideos(filtered);\n  //  };\n    // const removeVideo = (videoId) => {\n    //   const updatedVideoList = videoList.filter(\n    //     (video) => video.id !== videoId\n    //   );\n    //   setVideos(updatedVideoList);\n    //   setSortedVideoList(\n    //     [...updatedVideoList].sort((a, b) => b.rating - a.rating)\n    //   );\n    // };\n  \n   \n  async function fetchData() {\n    try {\n      const url = \"http://localhost:5000/videos\";\n      const fetchURL = `${url}`;\n      // `http://localhost:5000/videos`;\n      const response = await fetch(fetchURL );\n      if(response.ok){\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setVideos(data.videos);\n        const sortedList = [...(data.videos)].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      }\n    } catch (error) {\n      \n      console.log(error);\n    }\n  }\n   \n\n  useEffect(() => {\n    fetchData();\n    console.log(\"useEffect\");\n  }, []);\n\n  // const AddVideo = (newVideo) => {\n  //   const time = moment().format(\"YYYY-MM-DD HH:mm\");\n  //   const addnewVideo = [...videos, { ...newVideo, rating: 0, time }];\n  //   console.log(addnewVideo);\n  //   setVideos(addnewVideo);\n  //   setSortedVideoList([...addnewVideo].sort((a, b) => b.rating - a.rating));\n  // };\n    //  const displayedVideos =\n    //    filteredVideos.length > 0 ? filteredVideos : videos;\n  \n  // function handleDeleteVideo(videoID) {\n    \n  //   fetch(`http://localhost:5000/video/${videoID}`, {\n  //     method: \"DELETE\",\n  //     headers: {\n  //       Content_Type: \"application/json\",\n  //     },\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) {\n  //         throw new Error(`${videoID} could not be found`);\n  //       }\n  //       console.log(response);\n  //       getAllVideos();\n  //     })\n  //     .catch((error) => console.log(error));\n  // }\n const handleVote = (videoId, voteType) => {\n    const updatedVideoList = videoList.map((video) => {\n      if (video.id === videoId) {\n        if (voteType === \"like\") {\n          return {\n            ...video,\n            rating: video.rating + 1,\n          };\n        } else if (voteType === \"dislike\") {\n          return {\n            ...video,\n            rating: video.rating - 1,\n          };\n        }\n      }\n      return video;\n    });\n    setVideoList(updatedVideoList);\n    setSortedVideoList(\n      [...updatedVideoList].sort((a, b) => b.rating - a.rating)\n    );\n  };\n \n\n  const handleDelete = (id) => {\n    setVideos(videos.filter((video) => video.id !== id));\n  };\n  return (\n    <div>\n      {sortedVideoList.map((video, index) => (\n        <div key={index} className=\"video-card\">\n          <h3>{video.title}</h3>\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={videos.Url}\n            title={videos.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <Rating rating={videos.rating} />\n          <div className=\"vote-emojis\">\n                <div\n                  className=\"vote-button\"\n                  onClick={() => handleVote(video.id, \"like\")}\n                >\n                  <AiFillLike className=\"like-icon\" />\n                </div>\n                <div\n                  className=\"vote-button\"\n                  onClick={() => handleVote(video.id, \"dislike\")}\n                >\n                  <AiFillDislike className=\"dislike-icon\" />\n                </div>\n         </div>\n          <button onClick={() => handleDelete(video.id)}>Remove</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoComponent;\n"]},"metadata":{},"sourceType":"module"}