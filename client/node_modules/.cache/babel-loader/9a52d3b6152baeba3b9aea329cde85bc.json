{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Video(_ref) {\n  _s();\n\n  let {\n    videoObj,\n    deleteVideo\n  } = _ref;\n  const videoId = getVideoIdFromUrl(videoObj.url);\n  const [vote, setVote] = useState(videoObj.rating); // const voteIncrease = () => {\n  //   fetch(\"http://127.0.0.1:5050/videos\",{\n  //     method:'POST',\n  //     headers :{\n  //       'Content-Type': 'application/json',\n  //       }, body:{'id': `${videoId}`, 'vote':'up'}\n  //       })\n  //       .then((res)=>res.json())\n  //       .then(()=>{\n  //         setVote(vote + 1)\n  //       })\n  //     }\n  // const voteIncrease = () => {\n  //   fetch(\"http://127.0.0.1:5050/videos/:id\", {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ id: videoId, action: 'up' }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then(() => {\n  //       setVote(vote + 1);\n  //     });\n  // };\n\n  const voteIncrease = () => {\n    const newRating = videoObj.rating + 1;\n    fetch(`http://127.0.0.1:5050/videos/${videoObj.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        newRating\n      })\n    }).then(res => res.json()).then(() => {\n      setVote(newRating);\n    });\n    console.log(newRating);\n  };\n\n  const voteDecrease = () => {\n    setVote(() => vote > 0 ? vote - 1 : 0);\n  };\n\n  const date = new Date().toDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${videoId}`,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      title: \"YouTube video player\",\n      allowFullScreen: true,\n      height: \"300px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: videoObj.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Requested At: \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: voteIncrease,\n          className: \"btn btn-primary\",\n          children: \"\\uD83D\\uDC4D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: vote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: voteDecrease,\n          className: \"btn btn-warning\",\n          children: \"\\uD83D\\uDC4E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteVideo(videoObj.id),\n          className: \"btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash-o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"3FUJGpvNYGPdI7of5fQgW92YpUA=\");\n\n_c = Video;\nexport default Video; // function getVideoIdFromUrl(url) {\n//   const videoId = url.split(\"v=\")[1];\n//   return videoId;\n// }\n\nfunction getVideoIdFromUrl(url) {\n  if (url && typeof url === \"string\" && url.includes(\"v=\")) {\n    const videoId = url.split(\"v=\")[1];\n    return videoId;\n  } else {\n    // Handle the case where url is null, undefined, empty, or doesn't contain \"v=\"\n    console.error(\"Invalid URL:\", url);\n    return null; // or return an appropriate default value or error handling\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/Video.jsx"],"names":["useState","Video","videoObj","deleteVideo","videoId","getVideoIdFromUrl","url","vote","setVote","rating","voteIncrease","newRating","fetch","id","method","headers","body","JSON","stringify","then","res","json","console","log","voteDecrease","date","Date","toDateString","title","includes","split","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,KAAT,OAA0C;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AACxC,QAAMC,OAAO,GAAGC,iBAAiB,CAACH,QAAQ,CAACI,GAAV,CAAjC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACE,QAAQ,CAACO,MAAV,CAAhC,CAFwC,CAKxC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAG,MAAM;AAEzB,UAAMC,SAAS,GAAGT,QAAQ,CAACO,MAAT,GAAkB,CAApC;AACAG,IAAAA,KAAK,CAAE,gCAA+BV,QAAQ,CAACW,EAAG,EAA7C,EAAgD;AACnDC,MAAAA,MAAM,EAAE,KAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0C;AAKnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA;AAAF,OAAf;AAL6C,KAAhD,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQQ,MAAM;AACVX,MAAAA,OAAO,CAACG,SAAD,CAAP;AACD,KAVH;AAWEW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACH,GAfD;;AAoBA,QAAMa,YAAY,GAAG,MAAM;AACzBhB,IAAAA,OAAO,CAAC,MAAOD,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAA9B,CAAP;AACD,GAFD;;AAIA,QAAMkB,IAAI,GAAG,IAAIC,IAAJ,GAAWC,YAAX,EAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AACE,MAAA,GAAG,EAAG,iCAAgCvB,OAAQ,EADhD;AAEE,MAAA,WAAW,EAAC,GAFd;AAGE,MAAA,KAAK,EAAC,yEAHR;AAIE,MAAA,KAAK,EAAC,sBAJR;AAKE,MAAA,eAAe,MALjB;AAME,MAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BF,QAAQ,CAAC0B;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,qCAAwCH,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEf,YAAjB;AAA+B,UAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,OAAO,EAAEiB,YAAjB;AAA+B,UAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAQ,UAAA,OAAO,EAAE,MAAMrB,WAAW,CAACD,QAAQ,CAACW,EAAV,CAAlC;AAAiD,UAAA,SAAS,EAAC,gBAA3D;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtFQZ,K;;KAAAA,K;AAwFT,eAAeA,KAAf,C,CACA;AACA;AACA;AACA;;AACA,SAASI,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAtB,IAAkCA,GAAG,CAACuB,QAAJ,CAAa,IAAb,CAAtC,EAA0D;AACxD,UAAMzB,OAAO,GAAGE,GAAG,CAACwB,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,WAAO1B,OAAP;AACD,GAHD,MAGO;AACL;AACAkB,IAAAA,OAAO,CAACS,KAAR,CAAc,cAAd,EAA8BzB,GAA9B;AACA,WAAO,IAAP,CAHK,CAGQ;AACd;AACF","sourcesContent":["import { useState } from \"react\";\n\nfunction Video({ videoObj, deleteVideo }) {\n  const videoId = getVideoIdFromUrl(videoObj.url);\n  const [vote, setVote] = useState(videoObj.rating);\n\n\n  // const voteIncrease = () => {\n  //   fetch(\"http://127.0.0.1:5050/videos\",{\n  //     method:'POST',\n  //     headers :{\n  //       'Content-Type': 'application/json',\n  //       }, body:{'id': `${videoId}`, 'vote':'up'}\n\n  //       })\n  //       .then((res)=>res.json())\n  //       .then(()=>{\n  //         setVote(vote + 1)\n  //       })\n  //     }\n  // const voteIncrease = () => {\n  //   fetch(\"http://127.0.0.1:5050/videos/:id\", {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ id: videoId, action: 'up' }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then(() => {\n  //       setVote(vote + 1);\n  //     });\n  // };\n\n  const voteIncrease = () => {\n\n    const newRating = videoObj.rating + 1;\n    fetch(`http://127.0.0.1:5050/videos/${videoObj.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ newRating }),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setVote(newRating);\n      });\n      console.log(newRating);\n  };\n\n\n\n\n  const voteDecrease = () => {\n    setVote(() => (vote > 0 ? vote - 1 : 0));\n  };\n\n  const date = new Date().toDateString();\n\n  return (\n    <div className=\"card\">\n      <iframe\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        title=\"YouTube video player\"\n        allowFullScreen\n        height=\"300px\"\n      ></iframe>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{videoObj.title}</h5>\n        <p className=\"card-text\">Requested At: {date}</p>\n        <div className=\"buttons\">\n          <button onClick={voteIncrease} className=\"btn btn-primary\">\n            &#128077;\n          </button>\n          <p>{vote}</p>\n          <button onClick={voteDecrease} className=\"btn btn-warning\">\n            &#128078;\n          </button>\n          <button onClick={() => deleteVideo(videoObj.id)} className=\"btn btn-danger\">\n            <i className=\"fa fa-trash-o\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Video;\n// function getVideoIdFromUrl(url) {\n//   const videoId = url.split(\"v=\")[1];\n//   return videoId;\n// }\nfunction getVideoIdFromUrl(url) {\n  if (url && typeof url === \"string\" && url.includes(\"v=\")) {\n    const videoId = url.split(\"v=\")[1];\n    return videoId;\n  } else {\n    // Handle the case where url is null, undefined, empty, or doesn't contain \"v=\"\n    console.error(\"Invalid URL:\", url);\n    return null; // or return an appropriate default value or error handling\n  }\n}\n"]},"metadata":{},"sourceType":"module"}