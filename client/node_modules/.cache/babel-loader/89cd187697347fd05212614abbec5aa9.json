{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\n/**\n * @ignore - internal hook.\n *\n * Provides a handler for text navigation.\n * It's used to navigate a list by typing the first letters of the options.\n *\n * @param callback A function to be called when the navigation should be performed.\n * @returns A function to be used in a keydown event handler.\n */\n\nexport function useTextNavigation(callback) {\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  return React.useCallback(event => {\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n\n      textCriteria.lastTime = currentTime;\n      callback(textCriteria.searchString, event);\n    }\n  }, [callback]);\n}","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/utils/useTextNavigation.js"],"names":["React","TEXT_NAVIGATION_RESET_TIMEOUT","useTextNavigation","callback","textCriteriaRef","useRef","searchString","lastTime","useCallback","event","key","length","textCriteria","current","lowerKey","toLowerCase","currentTime","performance","now"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,MAAMC,6BAA6B,GAAG,GAAtC,C,CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AAC1C,QAAMC,eAAe,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACnCC,IAAAA,YAAY,EAAE,EADqB;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAb,CAAxB;AAIA,SAAOP,KAAK,CAACQ,WAAN,CAAkBC,KAAK,IAAI;AAChC,QAAIA,KAAK,CAACC,GAAN,CAAUC,MAAV,KAAqB,CAArB,IAA0BF,KAAK,CAACC,GAAN,KAAc,GAA5C,EAAiD;AAC/C,YAAME,YAAY,GAAGR,eAAe,CAACS,OAArC;AACA,YAAMC,QAAQ,GAAGL,KAAK,CAACC,GAAN,CAAUK,WAAV,EAAjB;AACA,YAAMC,WAAW,GAAGC,WAAW,CAACC,GAAZ,EAApB;;AACA,UAAIN,YAAY,CAACN,YAAb,CAA0BK,MAA1B,GAAmC,CAAnC,IAAwCC,YAAY,CAACL,QAArD,IAAiES,WAAW,GAAGJ,YAAY,CAACL,QAA3B,GAAsCN,6BAA3G,EAA0I;AACxIW,QAAAA,YAAY,CAACN,YAAb,GAA4BQ,QAA5B;AACD,OAFD,MAEO,IAAIF,YAAY,CAACN,YAAb,CAA0BK,MAA1B,KAAqC,CAArC,IAA0CG,QAAQ,KAAKF,YAAY,CAACN,YAAxE,EAAsF;AAC3F;AACAM,QAAAA,YAAY,CAACN,YAAb,IAA6BQ,QAA7B;AACD;;AACDF,MAAAA,YAAY,CAACL,QAAb,GAAwBS,WAAxB;AACAb,MAAAA,QAAQ,CAACS,YAAY,CAACN,YAAd,EAA4BG,KAA5B,CAAR;AACD;AACF,GAdM,EAcJ,CAACN,QAAD,CAdI,CAAP;AAeD","sourcesContent":["'use client';\n\nimport * as React from 'react';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\n/**\n * @ignore - internal hook.\n *\n * Provides a handler for text navigation.\n * It's used to navigate a list by typing the first letters of the options.\n *\n * @param callback A function to be called when the navigation should be performed.\n * @returns A function to be used in a keydown event handler.\n */\nexport function useTextNavigation(callback) {\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  return React.useCallback(event => {\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n      textCriteria.lastTime = currentTime;\n      callback(textCriteria.searchString, event);\n    }\n  }, [callback]);\n}"]},"metadata":{},"sourceType":"module"}