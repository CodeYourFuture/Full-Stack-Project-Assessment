{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\n\nfunction VideoPlay() {\n  _s();\n\n  const [vid, setVid] = useState(exampleresponse); //const voteIncrease = () => {\n  //     setVote((prev) => prev + 1);\n  //   };\n  //   const voteDecrease = () => {\n  //     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n  //   };\n\n  const updateVoteCount = (videoId, value) => {\n    setVid(prevVid => prevVid.map(video => video.id === videoId ? { ...video,\n      votes: (video.votes || 0) + value\n    } : video));\n  };\n\n  const newVideoAdd = newInput => {\n    const newId = vid.length + 1;\n    newInput.id = newId;\n    newInput.votes = 0;\n    setVid([...vid, newInput]);\n  };\n\n  const deleteVideo = videoId => {\n    const videoDeleted = vid.filter(el => el.id !== videoId);\n    setVid(videoDeleted);\n  };\n\n  let date = new Date().toDateString();\n  let sortedVideos = [...vid].sort((a, b) => b.votes - a.votes); // return (\n  //   <div className=\"container mt-5\">\n  //     <AddVideo onVidAdd={newVideoAdd} />\n  //     {sortedVideos.map((el, index) => {\n  //       const videoId = getVideoIdFromUrl(el.url);\n  //       return (\n  //         <div className=\"cardContainer\">\n  //         <div className=\"videoCard\" key={index}>\n  //           <h5 className=\"card-title\">{el.title}</h5>\n  //           <iframe\n  //             width=\"560\"\n  //             height=\"315\"\n  //             src={`https://www.youtube.com/embed/${videoId}`}\n  //             title=\"YouTube video player\"\n  //             frameBorder=\"0\"\n  //             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n  //             allowFullScreen\n  //           ></iframe>\n  //           <p>requested at :{date}</p>\n  //           <div className=\"btnCounter\">\n  //             <button\n  //               onClick={() => updateVoteCount(el.id, 1)}\n  //               type=\"button\"\n  //               className=\"btn btn-success\"\n  //             >\n  //               +\n  //             </button>\n  //             <p>Vote: {el.votes}</p>\n  //             <button\n  //               onClick={() => updateVoteCount(el.id, -1)}\n  //               type=\"button\"\n  //               className=\"btn btn-danger\"\n  //             >\n  //               -\n  //             </button>\n  //             <button\n  //               onClick={() => deleteVideo(el.id)}\n  //               type=\"button\"\n  //               className=\"btn btn-danger\"\n  //             >\n  //               Delete\n  //             </button>\n  //           </div>\n  //         </div>\n  //         </div>\n  //       );\n  //     })}\n  //   </div>\n  // );\n}\n\n_s(VideoPlay, \"CTfgcBxVaj5EK9YHzb37NbhPblY=\");\n\n_c = VideoPlay;\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nexport default VideoPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlay\");","map":{"version":3,"sources":["/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideoPlay.jsx"],"names":["React","useState","AddVideo","exampleresponse","VideoPlay","vid","setVid","updateVoteCount","videoId","value","prevVid","map","video","id","votes","newVideoAdd","newInput","newId","length","deleteVideo","videoDeleted","filter","el","date","Date","toDateString","sortedVideos","sort","a","b","getVideoIdFromUrl","url","split"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAACE,eAAD,CAA9B,CADmB,CAInB;AACE;AACA;AAEA;AACA;AACA;;AAEF,QAAMI,eAAe,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1CH,IAAAA,MAAM,CAAEI,OAAD,IACLA,OAAO,CAACC,GAAR,CAAaC,KAAD,IACVA,KAAK,CAACC,EAAN,KAAaL,OAAb,GAAuB,EAAE,GAAGI,KAAL;AAAYE,MAAAA,KAAK,EAAE,CAACF,KAAK,CAACE,KAAN,IAAe,CAAhB,IAAqBL;AAAxC,KAAvB,GAAyEG,KAD3E,CADI,CAAN;AAKD,GAND;;AAQA,QAAMG,WAAW,GAAIC,QAAD,IAAc;AAChC,UAAMC,KAAK,GAAGZ,GAAG,CAACa,MAAJ,GAAa,CAA3B;AACAF,IAAAA,QAAQ,CAACH,EAAT,GAAcI,KAAd;AACAD,IAAAA,QAAQ,CAACF,KAAT,GAAiB,CAAjB;AACAR,IAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAASW,QAAT,CAAD,CAAN;AACD,GALD;;AAOA,QAAMG,WAAW,GAAIX,OAAD,IAAa;AAC/B,UAAMY,YAAY,GAAGf,GAAG,CAACgB,MAAJ,CAAYC,EAAD,IAAQA,EAAE,CAACT,EAAH,KAAUL,OAA7B,CAArB;AACAF,IAAAA,MAAM,CAACc,YAAD,CAAN;AACD,GAHD;;AAKA,MAAIG,IAAI,GAAG,IAAIC,IAAJ,GAAWC,YAAX,EAAX;AAEC,MAAIC,YAAY,GAAG,CAAC,GAAGrB,GAAJ,EAASsB,IAAT,CAAc,CAACC,CAAD,EAAGC,CAAH,KAAOA,CAAC,CAACf,KAAF,GAAUc,CAAC,CAACd,KAAjC,CAAnB,CAlCkB,CAmCnB;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD;;GAzFQV,S;;KAAAA,S;;AA2FT,SAAS0B,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,QAAMvB,OAAO,GAAGuB,GAAG,CAACC,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,SAAOxB,OAAP;AACD;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\n\nfunction VideoPlay() {\n  const [vid, setVid] = useState(exampleresponse);\n\n\n  //const voteIncrease = () => {\n    //     setVote((prev) => prev + 1);\n    //   };\n\n    //   const voteDecrease = () => {\n    //     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n    //   };\n\n  const updateVoteCount = (videoId, value) => {\n    setVid((prevVid) =>\n      prevVid.map((video) =>\n        video.id === videoId ? { ...video, votes: (video.votes || 0) + value } : video\n      )\n    );\n  };\n\n  const newVideoAdd = (newInput) => {\n    const newId = vid.length + 1;\n    newInput.id = newId;\n    newInput.votes = 0;\n    setVid([...vid, newInput]);\n  };\n\n  const deleteVideo = (videoId) => {\n    const videoDeleted = vid.filter((el) => el.id !== videoId);\n    setVid(videoDeleted);\n  };\n\n  let date = new Date().toDateString();\n\n   let sortedVideos = [...vid].sort((a,b)=>b.votes - a.votes)\n  // return (\n  //   <div className=\"container mt-5\">\n  //     <AddVideo onVidAdd={newVideoAdd} />\n\n  //     {sortedVideos.map((el, index) => {\n  //       const videoId = getVideoIdFromUrl(el.url);\n\n  //       return (\n  //         <div className=\"cardContainer\">\n  //         <div className=\"videoCard\" key={index}>\n  //           <h5 className=\"card-title\">{el.title}</h5>\n\n  //           <iframe\n  //             width=\"560\"\n  //             height=\"315\"\n  //             src={`https://www.youtube.com/embed/${videoId}`}\n  //             title=\"YouTube video player\"\n  //             frameBorder=\"0\"\n  //             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n  //             allowFullScreen\n  //           ></iframe>\n  //           <p>requested at :{date}</p>\n\n  //           <div className=\"btnCounter\">\n  //             <button\n  //               onClick={() => updateVoteCount(el.id, 1)}\n  //               type=\"button\"\n  //               className=\"btn btn-success\"\n  //             >\n  //               +\n  //             </button>\n  //             <p>Vote: {el.votes}</p>\n  //             <button\n  //               onClick={() => updateVoteCount(el.id, -1)}\n  //               type=\"button\"\n  //               className=\"btn btn-danger\"\n  //             >\n  //               -\n  //             </button>\n  //             <button\n  //               onClick={() => deleteVideo(el.id)}\n  //               type=\"button\"\n  //               className=\"btn btn-danger\"\n  //             >\n  //               Delete\n  //             </button>\n  //           </div>\n  //         </div>\n  //         </div>\n  //       );\n  //     })}\n  //   </div>\n\n  // );\n}\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nexport default VideoPlay;\n"]},"metadata":{},"sourceType":"module"}