{"ast":null,"code":"import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","map":{"version":3,"sources":["/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/node_modules/uuid/dist/esm-browser/v4.js"],"names":["native","rng","unsafeStringify","v4","options","buf","offset","randomUUID","rnds","random","i"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,SAASC,EAAT,CAAYC,OAAZ,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAChC,MAAIN,MAAM,CAACO,UAAP,IAAqB,CAACF,GAAtB,IAA6B,CAACD,OAAlC,EAA2C;AACzC,WAAOJ,MAAM,CAACO,UAAP,EAAP;AACD;;AAEDH,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,QAAMI,IAAI,GAAGJ,OAAO,CAACK,MAAR,IAAkB,CAACL,OAAO,CAACH,GAAR,IAAeA,GAAhB,GAA/B,CANgC,CAMuB;;AAEvDO,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,GAAiB,IAA3B;AACAA,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,GAAiB,IAA3B,CATgC,CASC;;AAEjC,MAAIH,GAAJ,EAAS;AACPC,IAAAA,MAAM,GAAGA,MAAM,IAAI,CAAnB;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;AAC3BL,MAAAA,GAAG,CAACC,MAAM,GAAGI,CAAV,CAAH,GAAkBF,IAAI,CAACE,CAAD,CAAtB;AACD;;AAED,WAAOL,GAAP;AACD;;AAED,SAAOH,eAAe,CAACM,IAAD,CAAtB;AACD;;AAED,eAAeL,EAAf","sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"]},"metadata":{},"sourceType":"module"}