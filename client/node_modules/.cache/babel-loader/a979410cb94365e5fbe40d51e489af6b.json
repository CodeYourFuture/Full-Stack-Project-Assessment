{"ast":null,"code":"var _jsxFileName = \"/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/src/components/VideoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport YouTubeVideo from './YoutubeVideo';\nimport AddVideo from './AddVideo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoList = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n\n  const handleUpVote = videoId => {\n    const updatedVideos = videos.map(video => video.id === videoId ? { ...video,\n      votes: video.votes + 1\n    } : video);\n    setVideos(updatedVideos);\n  };\n\n  const handleDownVote = videoId => {\n    const updatedVideos = videos.map(video => {\n      if (video.id === videoId) {\n        // Ensure that the vote count doesn't go below zero\n        const newVotes = Math.max(0, video.votes - 1);\n        return { ...video,\n          votes: newVotes\n        };\n      }\n\n      return video;\n    });\n    setVideos(updatedVideos);\n  };\n\n  const handleAddVideo = newVideo => {\n    // Add the new video to the list with the current timestamp\n    const updatedVideos = [...videos, { ...newVideo,\n      uploadDate: new Date()\n    }];\n    setVideos(updatedVideos);\n  }; // Order the videos by the number of upvotes (descending order)\n\n\n  const orderedVideos = [...videos].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos\",\n    children: [/*#__PURE__*/_jsxDEV(AddVideo, {\n      onAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Most popular Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), orderedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Uploaded on: \", new Date(video.uploadDate).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YouTubeVideo, {\n        videoId: video.youtubeVideoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Votes: \", video.votes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpVote(video.id),\n        children: \"Up Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDownVote(video.id),\n        children: \"Down Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoList, \"SbG6CMM6FaXD5465NFUm02FT42U=\");\n\n_c = VideoList;\nexport default VideoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"sources":["/home/baki/Desktop/codeyourfuture/Full-Stack-Project-Assessment/client/src/components/VideoList.jsx"],"names":["React","useState","useEffect","YouTubeVideo","AddVideo","VideoList","videos","setVideos","handleUpVote","videoId","updatedVideos","map","video","id","votes","handleDownVote","newVotes","Math","max","handleAddVideo","newVideo","uploadDate","Date","orderedVideos","sort","a","b","title","toLocaleString","youtubeVideoId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport YouTubeVideo from './YoutubeVideo';\nimport AddVideo from './AddVideo';\n\nconst VideoList = () => {\n  const [videos, setVideos] = useState([]);\n\n\n  const handleUpVote = (videoId) => {\n\n    const updatedVideos = videos.map((video) =>\n      video.id === videoId ? { ...video, votes: video.votes + 1 } : video\n    );\n    setVideos(updatedVideos);\n  };\n\n  const handleDownVote = (videoId) => {\n    \n    const updatedVideos = videos.map((video) => {\n    if (video.id === videoId) {\n      // Ensure that the vote count doesn't go below zero\n      const newVotes = Math.max(0, video.votes - 1);\n      return { ...video, votes: newVotes };\n    }\n    return video;\n  });\n  setVideos(updatedVideos);\n};\n\n  const handleAddVideo = (newVideo) => {\n    // Add the new video to the list with the current timestamp\n    const updatedVideos = [...videos, { ...newVideo, uploadDate: new Date() }];\n    setVideos(updatedVideos);\n  };\n\n  // Order the videos by the number of upvotes (descending order)\n  const orderedVideos = [...videos].sort((a, b) => b.votes - a.votes);\n\n  return (\n    <div className='videos'>\n      <AddVideo onAddVideo={handleAddVideo} />\n\n      <h2>Most popular Videos</h2>\n      {orderedVideos.map((video) => (\n  <div key={video.id}>\n      <h3>{video.title}</h3>\n      <p>Uploaded on: {new Date(video.uploadDate).toLocaleString()}</p>\n      <YouTubeVideo videoId={video.youtubeVideoId} />\n      <p>Votes: {video.votes}</p>\n      <button onClick={() => handleUpVote(video.id)}>Up Vote</button>\n      <button onClick={() => handleDownVote(video.id)}>Down Vote</button>\n    </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoList;\n"]},"metadata":{},"sourceType":"module"}