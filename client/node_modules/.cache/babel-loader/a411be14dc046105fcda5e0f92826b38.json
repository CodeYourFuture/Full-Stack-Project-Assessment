{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideoPlay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoPlay() {\n  _s();\n\n  const [vid, setVid] = useState(exampleresponse); //const voteIncrease = () => {\n  //     setVote((prev) => prev + 1);\n  //   };\n  //   const voteDecrease = () => {\n  //     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n  //   };\n\n  const updateVoteCount = (videoId, value) => {\n    setVid(prevVid => prevVid.map(video => video.id === videoId ? { ...video,\n      votes: (video.votes || 0) + value\n    } : video));\n  };\n\n  const newVideoAdd = newInput => {\n    const newId = vid.length + 1;\n    newInput.id = newId;\n    newInput.votes = 0;\n    setVid([...vid, newInput]);\n  };\n\n  const deleteVideo = videoId => {\n    const videoDeleted = vid.filter(el => el.id !== videoId);\n    setVid(videoDeleted);\n  };\n\n  let date = new Date().toDateString();\n  let sortedVideos = [...vid].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(AddVideo, {\n      onVidAdd: newVideoAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), sortedVideos.map((el, index) => {\n      const videoId = getVideoIdFromUrl(el.url);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: el.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${videoId}`,\n              title: \"YouTube video player\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"requested at :\", date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btnCounter\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateVoteCount(el.id, 1),\n                type: \"button\",\n                className: \"btn btn-success\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Vote: \", el.votes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateVoteCount(el.id, -1),\n                type: \"button\",\n                className: \"btn btn-danger\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteVideo(el.id),\n                type: \"button\",\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoPlay, \"CTfgcBxVaj5EK9YHzb37NbhPblY=\");\n\n_c = VideoPlay;\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nexport default VideoPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlay\");","map":{"version":3,"sources":["/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideoPlay.jsx"],"names":["React","useState","AddVideo","exampleresponse","VideoPlay","vid","setVid","updateVoteCount","videoId","value","prevVid","map","video","id","votes","newVideoAdd","newInput","newId","length","deleteVideo","videoDeleted","filter","el","date","Date","toDateString","sortedVideos","sort","a","b","index","getVideoIdFromUrl","url","title","split"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\n\nfunction VideoPlay() {\n  const [vid, setVid] = useState(exampleresponse);\n\n  //const voteIncrease = () => {\n  //     setVote((prev) => prev + 1);\n  //   };\n\n  //   const voteDecrease = () => {\n  //     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n  //   };\n\n  const updateVoteCount = (videoId, value) => {\n    setVid((prevVid) =>\n      prevVid.map((video) => (video.id === videoId ? { ...video, votes: (video.votes || 0) + value } : video))\n    );\n  };\n\n  const newVideoAdd = (newInput) => {\n    const newId = vid.length + 1;\n    newInput.id = newId;\n    newInput.votes = 0;\n    setVid([...vid, newInput]);\n  };\n\n  const deleteVideo = (videoId) => {\n    const videoDeleted = vid.filter((el) => el.id !== videoId);\n    setVid(videoDeleted);\n  };\n\n  let date = new Date().toDateString();\n\n  let sortedVideos = [...vid].sort((a, b) => b.votes - a.votes);\n  return (\n    <div className=\"container mt-5\">\n      <AddVideo onVidAdd={newVideoAdd} />\n      {sortedVideos.map((el, index) => {\n        const videoId = getVideoIdFromUrl(el.url);\n        return (\n\n          <div className=\"\">\n          <div className=\"cardContainer\">\n            <div className=\"videoCard\" key={index}>\n              <h5 className=\"card-title\">{el.title}</h5>\n              <iframe\n                width=\"100%\"\n                height=\"315\"\n                src={`https://www.youtube.com/embed/${videoId}`}\n                title=\"YouTube video player\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              ></iframe>\n              <p>requested at :{date}</p>\n\n              <div className=\"btnCounter\">\n                <button onClick={() => updateVoteCount(el.id, 1)} type=\"button\" className=\"btn btn-success\">\n                  +\n                </button>\n                <p>Vote: {el.votes}</p>\n                <button onClick={() => updateVoteCount(el.id, -1)} type=\"button\" className=\"btn btn-danger\">\n                  -\n                </button>\n                <button onClick={() => deleteVideo(el.id)} type=\"button\" className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nexport default VideoPlay;\n"]},"metadata":{},"sourceType":"module"}