{"ast":null,"code":"var _jsxFileName = \"/Users/anuthapaliya/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport VideoDisplay from './VideoDisplay';\nimport AddNewVideo from './AddNewVideo';\nimport VideoDetails from './VideoDetails';\nimport VideosData from './VideosData';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState(VideosData);\n  const [order, setOrder] = useState('asc'); // const [ascending, setAscending] = useState(false);\n  // videosData.sort((a,b) => b.rating - a.rating)\n\n  const fetchVideos = useCallback(async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/videos?order=${order}`);\n\n      if (response.ok) {\n        const data = await response.json();\n        setVideos(data);\n      } else {\n        console.log('Error fetching videos:', response.statusText);\n      }\n    } catch (error) {\n      console.log('Error fetching videos:', error);\n    }\n  }, [order]);\n  useEffect(() => {\n    fetchVideos();\n  }, [fetchVideos]);\n\n  const fetchVideosById = async videoId => {\n    try {\n      const response = await axios.get(`http://localhost:8000/videos/${videoId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n      return null;\n    }\n  }; // const addVideoButton = (NewVideo) => {\n  // setVideos([...videos, NewVideo]);\n  // }\n\n\n  const handleUpVote = videoId => {\n    const updatedVideos = videos.map(video => {\n      if (video.id === videoId) {\n        return { ...video,\n          rating: video.rating + 1\n        };\n      } else {\n        return video;\n      }\n    });\n    setVideos(updatedVideos);\n  };\n\n  const handleDownVote = videoId => {\n    const updatedVideos = videos.map(video => {\n      if (video.id === videoId) {\n        return { ...video,\n          rating: video.rating - 1\n        };\n      } else {\n        return video;\n      }\n    });\n    setVideos(updatedVideos);\n  };\n\n  const handleRemoveVideo = async videoId => {\n    try {\n      const response = await fetch(`http://localhost:8000/videos/${videoId}`, {\n        method: 'Delete'\n      });\n\n      if (response.ok) {\n        const updatedVideos = videos.filter(video => video.id !== videoId);\n        setVideos(updatedVideos);\n      } else {\n        console.log('Error deleting video:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error deleting video:', error);\n    }\n  };\n\n  const handleAddVideo = async newVideo => {\n    if (newVideo.title.trim() === '' || !isValidYouTubeUrl(newVideo.url)) {\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:8000/', {\n        title: newVideo.title,\n        url: newVideo.url\n      });\n      const addedVideoId = response.data.id;\n      const addedVideo = await fetchVideosById(addedVideoId);\n\n      if (addedVideo) {\n        const now = new Date();\n        addedVideo.uploadedDate = now.toISOString();\n        setVideos([...videos, addedVideo]);\n      }\n    } catch (error) {\n      console.error('Error adding video:', error);\n    }\n  };\n\n  const isValidYouTubeUrl = url => {\n    try {\n      const youtubeUrl = new URL(url);\n      return youtubeUrl.hostname === 'www.youtube.com' || youtubeUrl.hostname === 'youtube.com';\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const handleChangeOrder = () => {\n    setOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChangeOrder,\n          children: [\"Toggle Order: \", order === 'asc' ? 'Ascending' : 'Descending']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(AddNewVideo, {\n        addVideoButton: handleAddVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a New Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-list\",\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-card\",\n          children: /*#__PURE__*/_jsxDEV(VideoDisplay, {\n            video: video,\n            handleUpVote: handleUpVote,\n            handleDownVote: handleDownVote,\n            handleRemoveVideo: handleRemoveVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 1\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/videos/:id\",\n        component: VideoDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"4nGmBkCHZpEDumXWb7TDHQZf5bc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anuthapaliya/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Routes","Route","VideoDisplay","AddNewVideo","VideoDetails","VideosData","axios","App","videos","setVideos","order","setOrder","fetchVideos","response","fetch","ok","data","json","console","log","statusText","error","fetchVideosById","videoId","get","handleUpVote","updatedVideos","map","video","id","rating","handleDownVote","handleRemoveVideo","method","filter","handleAddVideo","newVideo","title","trim","isValidYouTubeUrl","url","post","addedVideoId","addedVideo","now","Date","uploadedDate","toISOString","youtubeUrl","URL","hostname","handleChangeOrder","prevOrder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACU,UAAD,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC,CAFe,CAGf;AACA;;AAOA,QAAMiB,WAAW,GAAEf,WAAW,CAAC,YAAY;AAC3C,QAAI;AACJ,YAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCJ,KAAM,EAA7C,CAA5B;;AACA,UAAIG,QAAQ,CAACE,EAAb,EAAiB;AACjB,cAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAR,QAAAA,SAAS,CAACO,IAAD,CAAT;AACC,OAHD,MAGO;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,QAAQ,CAACO,UAA/C;AACC;AACA,KARD,CAQE,OAAOC,KAAP,EAAc;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,KAAtC;AACC;AACA,GAZ6B,EAY3B,CAACX,KAAD,CAZ2B,CAA9B;AAiBAd,EAAAA,SAAS,CAAC,MAAM;AAChBgB,IAAAA,WAAW;AACV,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAKA,QAAMU,eAAe,GAAE,MAAOC,OAAP,IAAmB;AAC1C,QAAI;AACJ,YAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAN,CAAW,gCAA+BD,OAAQ,EAAlD,CAAvB;AACA,aAAOV,QAAQ,CAACG,IAAhB;AACC,KAHD,CAGE,OAAOK,KAAP,EAAc;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA,aAAO,IAAP;AACC;AAGA,GAVD,CAjCe,CAoDf;AACA;AACA;;;AAGA,QAAMI,YAAY,GAAIF,OAAD,IAAa;AAClC,UAAMG,aAAa,GAAGlB,MAAM,CAACmB,GAAP,CAAYC,KAAD,IAAW;AAC5C,UAAGA,KAAK,CAACC,EAAN,KAAaN,OAAhB,EAAyB;AACzB,eAAO,EAAC,GAAGK,KAAJ;AAAWE,UAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,GAAe;AAAlC,SAAP;AACC,OAFD,MAEO;AACP,eAAOF,KAAP;AACC;AACA,KANqB,CAAtB;AASAnB,IAAAA,SAAS,CAACiB,aAAD,CAAT;AACC,GAXD;;AAcA,QAAMK,cAAc,GAAIR,OAAD,IAAa;AACpC,UAAMG,aAAa,GAAGlB,MAAM,CAACmB,GAAP,CAAYC,KAAD,IAAW;AAC5C,UAAIA,KAAK,CAACC,EAAN,KAAaN,OAAjB,EAA0B;AAC1B,eAAO,EAAC,GAAGK,KAAJ;AAAWE,UAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,GAAc;AAAjC,SAAP;AACC,OAFD,MAEO;AACP,eAAOF,KAAP;AACC;AACA,KANqB,CAAtB;AASAnB,IAAAA,SAAS,CAACiB,aAAD,CAAT;AACC,GAXD;;AAcA,QAAMM,iBAAiB,GAAG,MAAOT,OAAP,IAAmB;AAC7C,QAAI;AACJ,YAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BS,OAAQ,EAAzC,EAA2C;AACvEU,QAAAA,MAAM,EAAE;AAD+D,OAA3C,CAA5B;;AAGA,UAAIpB,QAAQ,CAACE,EAAb,EAAiB;AACjB,cAAMW,aAAa,GAAGlB,MAAM,CAAC0B,MAAP,CAAeN,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaN,OAAtC,CAAtB;AACAd,QAAAA,SAAS,CAACiB,aAAD,CAAT;AACC,OAHD,MAGO;AACPR,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,QAAQ,CAACO,UAA9C;AACC;AAGA,KAZD,CAYE,OAAOC,KAAP,EAAc;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACC;AACA,GAhBD;;AAmBA,QAAMc,cAAc,GAAG,MAAOC,QAAP,IAAoB;AAC3C,QAAIA,QAAQ,CAACC,KAAT,CAAeC,IAAf,OAA0B,EAA1B,IAAgC,CAACC,iBAAiB,CAACH,QAAQ,CAACI,GAAV,CAAtD,EAAsE;AACtE;AACC;;AAGD,QAAI;AACJ,YAAM3B,QAAQ,GAAG,MAAMP,KAAK,CAACmC,IAAN,CAAW,wBAAX,EAAqC;AAC5DJ,QAAAA,KAAK,EAAED,QAAQ,CAACC,KAD4C;AAE5DG,QAAAA,GAAG,EAAEJ,QAAQ,CAACI;AAF8C,OAArC,CAAvB;AAMA,YAAME,YAAY,GAAG7B,QAAQ,CAACG,IAAT,CAAca,EAAnC;AACA,YAAMc,UAAU,GAAG,MAAMrB,eAAe,CAACoB,YAAD,CAAxC;;AAGA,UAAIC,UAAJ,EAAgB;AAChB,cAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACAF,QAAAA,UAAU,CAACG,YAAX,GAA0BF,GAAG,CAACG,WAAJ,EAA1B;AACAtC,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYmC,UAAZ,CAAD,CAAT;AACC;AACA,KAhBD,CAgBE,OAAOtB,KAAP,EAAc;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACC;AACA,GAzBD;;AA4BA,QAAMkB,iBAAiB,GAAIC,GAAD,IAAS;AACnC,QAAI;AACJ,YAAMQ,UAAU,GAAG,IAAIC,GAAJ,CAAQT,GAAR,CAAnB;AACA,aACAQ,UAAU,CAACE,QAAX,KAAwB,iBAAxB,IACAF,UAAU,CAACE,QAAX,KAAwB,aAFxB;AAIC,KAND,CAME,OAAO7B,KAAP,EAAc;AAChB,aAAO,KAAP;AACC;AACA,GAVD;;AAWA,QAAM8B,iBAAiB,GAAG,MAAM;AAChCxC,IAAAA,QAAQ,CAACyC,SAAS,IAAKA,SAAS,KAAK,KAAd,GAAsB,MAAtB,GAA+B,KAA9C,CAAR;AACC,GAFD;;AAKA,sBACA,QAAC,MAAD;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA,+BACA;AAAQ,UAAA,OAAO,EAAED,iBAAjB;AAAA,qBAAoC,gBAApC,EACezC,KAAK,KAAK,KAAV,GAAkB,WAAlB,GAAgC,YAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAMA,QAAC,WAAD;AAAa,QAAA,cAAc,EAAEyB;AAA7B;AAAA;AAAA;AAAA;AAAA,cANA,eAOA;AAAA,+BACA;AAAA,oBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAPA,eAUA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACC3B,MAAM,CAACmB,GAAP,CAAYC,KAAD,iBACZ;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA,iCACA,QAAC,YAAD;AACA,YAAA,KAAK,EAAEA,KADP;AAEA,YAAA,YAAY,EAAEH,YAFd;AAGA,YAAA,cAAc,EAAEM,cAHhB;AAIA,YAAA,iBAAiB,EAAEC;AAJnB;AAAA;AAAA;AAAA;AAAA;AADA,WAAUJ,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADC;AADD;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAwBA,QAAC,MAAD;AAAA,6BAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEzB;AAArC;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAxBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA+BC;;GAnLQG,G;;KAAAA,G;AAsLT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport VideoDisplay from './VideoDisplay';\nimport AddNewVideo from './AddNewVideo';\nimport VideoDetails from './VideoDetails';\nimport VideosData from './VideosData';\nimport axios from 'axios';\n\n\nfunction App() {\nconst [videos, setVideos] = useState(VideosData);\nconst [order, setOrder] = useState('asc');\n// const [ascending, setAscending] = useState(false);\n// videosData.sort((a,b) => b.rating - a.rating)\n\n\n\n\n\n\nconst fetchVideos= useCallback(async () => {\ntry {\nconst response = await fetch(`http://127.0.0.1:8000/videos?order=${order}`);\nif (response.ok) {\nconst data = await response.json();\nsetVideos(data);\n} else {\nconsole.log('Error fetching videos:', response.statusText);\n}\n} catch (error) {\nconsole.log('Error fetching videos:', error);\n}\n}, [order]);\n\n\n\n\nuseEffect(() => {\nfetchVideos();\n}, [fetchVideos]);\n\n\nconst fetchVideosById= async (videoId) => {\ntry {\nconst response = await axios.get(`http://localhost:8000/videos/${videoId}`);\nreturn response.data;\n} catch (error) {\nconsole.error('Error fetching videos:', error);\nreturn null;\n}\n\n\n};\n\n\n\n\n\n\n\n\n// const addVideoButton = (NewVideo) => {\n// setVideos([...videos, NewVideo]);\n// }\n\n\nconst handleUpVote = (videoId) => {\nconst updatedVideos = videos.map((video) => {\nif(video.id === videoId) {\nreturn {...video, rating: video.rating + 1 };\n} else {\nreturn video;\n}\n});\n\n\nsetVideos(updatedVideos)\n};\n\n\nconst handleDownVote = (videoId) => {\nconst updatedVideos = videos.map((video) => {\nif (video.id === videoId) {\nreturn {...video, rating: video.rating -1 };\n} else {\nreturn video;\n}\n});\n\n\nsetVideos(updatedVideos);\n};\n\n\nconst handleRemoveVideo = async (videoId) => {\ntry {\nconst response = await fetch(`http://localhost:8000/videos/${videoId}`,{\nmethod: 'Delete',\n});\nif (response.ok) {\nconst updatedVideos = videos.filter((video) => video.id !== videoId);\nsetVideos(updatedVideos);\n} else {\nconsole.log('Error deleting video:', response.statusText);\n}\n\n\n} catch (error) {\nconsole.error('Error deleting video:', error)\n}\n};\n\n\nconst handleAddVideo = async (newVideo) => {\nif (newVideo.title.trim() === '' || !isValidYouTubeUrl(newVideo.url)) {\nreturn;\n}\n\n\ntry {\nconst response = await axios.post('http://localhost:8000/', {\ntitle: newVideo.title,\nurl: newVideo.url,\n});\n\n\nconst addedVideoId = response.data.id;\nconst addedVideo = await fetchVideosById(addedVideoId);\n\n\nif (addedVideo) {\nconst now = new Date();\naddedVideo.uploadedDate = now.toISOString();\nsetVideos([...videos, addedVideo]);\n}\n} catch (error) {\nconsole.error('Error adding video:', error);\n}\n}\n\n\nconst isValidYouTubeUrl = (url) => {\ntry {\nconst youtubeUrl = new URL(url);\nreturn (\nyoutubeUrl.hostname === 'www.youtube.com' ||\nyoutubeUrl.hostname === 'youtube.com'\n);\n} catch (error) {\nreturn false;\n}\n}\nconst handleChangeOrder = () => {\nsetOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\n};\n\n\nreturn(\n<Router>\n<div className=\"App\">\n<div>\n<button onClick={handleChangeOrder}>\nToggle Order: {order === 'asc' ? 'Ascending' : 'Descending'}\n</button>\n</div>\n<AddNewVideo addVideoButton={handleAddVideo} />\n<div>\n<h2>Add a New Video</h2>\n</div>\n<div className='video-list'>\n{videos.map((video) => (\n<div key={video.id} className='video-card'>\n<VideoDisplay\nvideo={video}\nhandleUpVote={handleUpVote}\nhandleDownVote={handleDownVote}\nhandleRemoveVideo={handleRemoveVideo}\n/>\n</div>\n))}\n</div>\n</div>\n<Routes>\n{/* <Route path=\"/\" element={<VideoDisplay videos={videos} />} /> */}\n<Route path=\"/videos/:id\" component={VideoDetails} />\n</Routes>\n</Router>\n)\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}