{"ast":null,"code":"import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider(_ref) {\n  let {\n    prefixes = {},\n    breakpoints = DEFAULT_BREAKPOINTS,\n    minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n    dir,\n    children\n  } = _ref;\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n    let { ...props\n    } = _ref2;\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","map":{"version":3,"sources":["C:/Users/meron/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/ThemeProvider.js"],"names":["React","useContext","useMemo","jsx","_jsx","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","createContext","prefixes","breakpoints","minBreakpoint","Consumer","Provider","ThemeProvider","dir","children","contextValue","value","useBootstrapPrefix","prefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","useIsRTL","createBootstrapComponent","Component","opts","isClassy","prototype","isReactComponent","forwardRefAs","Wrapped","forwardRef","ref","props","bsPrefix","displayName","name","ThemeConsumer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}