{"ast":null,"code":"var _jsxFileName = \"/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/AddVideoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddVideoForm = _ref => {\n  _s();\n\n  let {\n    video,\n    onAddVideo\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const methods = useForm(); // const [success, setSuccess] = useState(false)\n\n  const handleCancel = () => {\n    setTitle('');\n    setUrl('');\n  };\n\n  const validateUrl = url => {\n    // Simple validation for YouTube URLs\n    return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+$/.test(url);\n  };\n\n  const handleAddVideo = () => {\n    if (title.trim() === '') {\n      setErrorMessage('Please enter a title');\n      return;\n    }\n\n    if (!validateUrl(url)) {\n      setErrorMessage('Please enter a valid YouTube URL');\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      // Generate a unique ID\n      title: title,\n      url: url,\n      rating: video.rating\n    };\n    onAddVideo(newVideo);\n    setTitle('');\n    setUrl('');\n    setErrorMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"0#\",\n        className: \"addVideo\",\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddVideo,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                placeholder: \"Title\",\n                validation: {\n                  required: {\n                    value: true,\n                    message: 'required'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"err-m\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"url\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"url\",\n                value: url,\n                onChange: e => setUrl(e.target.value),\n                placeholder: \"Url\",\n                validation: {\n                  required: {\n                    value: true,\n                    message: 'required'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cancel-add-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning input\",\n              type: \"submit\",\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger input\",\n              type: \"submit\",\n              onClick: handleAddVideo,\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-input\",\n            type: \"text\",\n            name: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddVideoForm, \"b3gMaUSLfIC17F0iseVYe5T80QE=\", false, function () {\n  return [useForm];\n});\n\n_c = AddVideoForm;\nexport default AddVideoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideoForm\");","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/AddVideoForm.jsx"],"names":["React","useState","FormProvider","useForm","AddVideoForm","video","onAddVideo","title","setTitle","url","setUrl","errorMessage","setErrorMessage","methods","handleCancel","validateUrl","test","handleAddVideo","trim","newVideo","id","Date","now","rating","e","target","value","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form'\n\nconst AddVideoForm = ({video, onAddVideo }) => {\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const methods = useForm()\n  // const [success, setSuccess] = useState(false)\n\n    const handleCancel = () => {\n    setTitle('');\n    setUrl('');\n  };\n\n    const validateUrl = (url) => {\n    // Simple validation for YouTube URLs\n    return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+$/.test(url);\n  };\n\n  const handleAddVideo = () => {\n   \n    if (title.trim() === '') {\n      setErrorMessage('Please enter a title');\n      return;\n    }\n\n    if (!validateUrl(url)) {\n      setErrorMessage('Please enter a valid YouTube URL');\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(), // Generate a unique ID\n      title: title,\n      url: url,\n      rating: video.rating,\n    };\n    onAddVideo(newVideo);\n    setTitle('');\n    setUrl('');\n    setErrorMessage('');\n  };\n\n  return (\n    <>\n    <div className=\"add-video-form\">\n      <a href='0#' className='addVideo'>Add Video</a>\n\n      <FormProvider {...methods}>\n      <form onSubmit={handleAddVideo}>\n          <div className='title'>\n          <label>Title\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder='Title'\n                    validation={{\n                      required: {\n                        value: true,\n                        message: 'required'\n                      }}} />\n          </label>\n          {errorMessage && <p className='err-m' >{errorMessage}</p>}\n          </div>\n\n          <div className='url'>\n          <label>URL\n          <input type=\"url\" value={url} onChange={(e) => setUrl(e.target.value)} placeholder='Url'\n                    validation={{\n                      required: {\n                        value: true,\n                        message: 'required'\n                      }}}            \n />\n          </label>\n          </div>  \n        \n        <div className='cancel-add-btn'>\n        <button className='btn btn-warning input' type=\"submit\" onClick={handleCancel}>Cancel</button>\n        <button className='btn btn-danger input' type=\"submit\" onClick={handleAddVideo}>ADD</button>\n        \n        </div>\n      </form>\n      </FormProvider>\n      </div>\n\n      <div className='search'>\n      <form>\n        <label>\n          Search\n          <input className='search-input' type=\"text\" name=\"search\" />\n        </label>\n      </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddVideoForm;\n\n\n"]},"metadata":{},"sourceType":"module"}