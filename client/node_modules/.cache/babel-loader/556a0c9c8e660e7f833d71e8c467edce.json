{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { TabsContext } from '../Tabs/TabsContext';\nimport { CompoundComponentContext } from '../utils/useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab and TabPanel components.\n *\n * @ignore - do not document.\n */\n\nexport function TabsProvider(props) {\n  const {\n    value: valueProp,\n    children\n  } = props;\n  const {\n    direction,\n    getItemIndex,\n    onSelected,\n    orientation,\n    registerItem,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    totalSubitemCount,\n    value,\n    getTabId,\n    getTabPanelId\n  } = valueProp;\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  const tabsContextValue = React.useMemo(() => ({\n    direction,\n    getTabId,\n    getTabPanelId,\n    onSelected,\n    orientation,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    value\n  }), [direction, getTabId, getTabPanelId, onSelected, orientation, registerTabIdLookup, selectionFollowsFocus, value]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(TabsContext.Provider, {\n      value: tabsContextValue,\n      children: children\n    })\n  });\n}","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useTabs/TabsProvider.js"],"names":["React","TabsContext","CompoundComponentContext","jsx","_jsx","TabsProvider","props","value","valueProp","children","direction","getItemIndex","onSelected","orientation","registerItem","registerTabIdLookup","selectionFollowsFocus","totalSubitemCount","getTabId","getTabPanelId","compoundComponentContextValue","useMemo","tabsContextValue","Provider"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,QAAM;AACJC,IAAAA,KAAK,EAAEC,SADH;AAEJC,IAAAA;AAFI,MAGFH,KAHJ;AAIA,QAAM;AACJI,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,mBANI;AAOJC,IAAAA,qBAPI;AAQJC,IAAAA,iBARI;AASJV,IAAAA,KATI;AAUJW,IAAAA,QAVI;AAWJC,IAAAA;AAXI,MAYFX,SAZJ;AAaA,QAAMY,6BAA6B,GAAGpB,KAAK,CAACqB,OAAN,CAAc,OAAO;AACzDV,IAAAA,YADyD;AAEzDG,IAAAA,YAFyD;AAGzDG,IAAAA;AAHyD,GAAP,CAAd,EAIlC,CAACH,YAAD,EAAeH,YAAf,EAA6BM,iBAA7B,CAJkC,CAAtC;AAKA,QAAMK,gBAAgB,GAAGtB,KAAK,CAACqB,OAAN,CAAc,OAAO;AAC5CX,IAAAA,SAD4C;AAE5CQ,IAAAA,QAF4C;AAG5CC,IAAAA,aAH4C;AAI5CP,IAAAA,UAJ4C;AAK5CC,IAAAA,WAL4C;AAM5CE,IAAAA,mBAN4C;AAO5CC,IAAAA,qBAP4C;AAQ5CT,IAAAA;AAR4C,GAAP,CAAd,EASrB,CAACG,SAAD,EAAYQ,QAAZ,EAAsBC,aAAtB,EAAqCP,UAArC,EAAiDC,WAAjD,EAA8DE,mBAA9D,EAAmFC,qBAAnF,EAA0GT,KAA1G,CATqB,CAAzB;AAUA,SAAO,aAAaH,IAAI,CAACF,wBAAwB,CAACqB,QAA1B,EAAoC;AAC1DhB,IAAAA,KAAK,EAAEa,6BADmD;AAE1DX,IAAAA,QAAQ,EAAE,aAAaL,IAAI,CAACH,WAAW,CAACsB,QAAb,EAAuB;AAChDhB,MAAAA,KAAK,EAAEe,gBADyC;AAEhDb,MAAAA,QAAQ,EAAEA;AAFsC,KAAvB;AAF+B,GAApC,CAAxB;AAOD","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { TabsContext } from '../Tabs/TabsContext';\nimport { CompoundComponentContext } from '../utils/useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab and TabPanel components.\n *\n * @ignore - do not document.\n */\nexport function TabsProvider(props) {\n  const {\n    value: valueProp,\n    children\n  } = props;\n  const {\n    direction,\n    getItemIndex,\n    onSelected,\n    orientation,\n    registerItem,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    totalSubitemCount,\n    value,\n    getTabId,\n    getTabPanelId\n  } = valueProp;\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  const tabsContextValue = React.useMemo(() => ({\n    direction,\n    getTabId,\n    getTabPanelId,\n    onSelected,\n    orientation,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    value\n  }), [direction, getTabId, getTabPanelId, onSelected, orientation, registerTabIdLookup, selectionFollowsFocus, value]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(TabsContext.Provider, {\n      value: tabsContextValue,\n      children: children\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}