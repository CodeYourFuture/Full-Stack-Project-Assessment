{"ast":null,"code":"var _jsxFileName = \"/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AddVideoForm from \"./AddVideoForm\";\nimport moment from \"moment\";\nimport VideoComponent from \"./VideoComponent\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videoList, setVideoList] = useState([]);\n  const [sortedVideoList, setSortedVideoList] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/videos\");\n\n      if (res.ok) {\n        const data = await res.json();\n        setVideoList(data);\n        const sortedList = [...data].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      } else {\n        throw new Error(\"Failed to fetch videos\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n\n  const addVideo = async newVideo => {\n    const time = moment().format(\"YYYY-MM-DD HH:mm\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/videos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newVideo)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add video!\");\n      }\n\n      const data = await response.json();\n      const updatedVideoList = [...videoList, { ...newVideo,\n        id: data.id,\n        rating: 0,\n        time\n      }];\n      setVideoList(updatedVideoList);\n      setSortedVideoList([...updatedVideoList].sort((a, b) => b.rating - a.rating));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(AddVideoForm, {\n        AddVideo: addVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoComponent, {\n      sortedVideoList: sortedVideoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YAkyrUtpV43XURPaZnbol/hYndA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","useEffect","AddVideoForm","moment","VideoComponent","Footer","App","videoList","setVideoList","sortedVideoList","setSortedVideoList","fetchData","res","fetch","ok","data","json","sortedList","sort","a","b","rating","Error","error","console","addVideo","newVideo","time","format","response","method","headers","body","JSON","stringify","updatedVideoList","id","log"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AddVideoForm from \"./AddVideoForm\";\nimport moment from \"moment\";\nimport VideoComponent from \"./VideoComponent\";\nimport Footer from \"./Footer\";\n\nconst App = () => {\n  const [videoList, setVideoList] = useState([]);\n  const [sortedVideoList, setSortedVideoList] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/videos\");\n      if (res.ok) {\n        const data = await res.json();\n        setVideoList(data);\n        const sortedList = [...data].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      } else {\n        throw new Error(\"Failed to fetch videos\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n \n  const addVideo = async (newVideo) => {\n     const time = moment().format(\"YYYY-MM-DD HH:mm\");\n    try {\n      \n      const response = await fetch(\"http://localhost:5000/videos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newVideo),\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add video!\");\n      }\n      const data = await response.json();\n      \n      const updatedVideoList = [\n      ...videoList,\n      { ...newVideo, id: data.id, rating: 0, time },\n    ];\n    setVideoList(updatedVideoList);\n    setSortedVideoList(\n      [...updatedVideoList].sort((a, b) => b.rating - a.rating));\n      \n    } catch (error) {\n     console.log(error);\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Video Recommendation</h1>\n      </header>\n      <div className=\"form-wrapper\">\n        <AddVideoForm AddVideo={addVideo} />\n      </div>\n\n      <VideoComponent sortedVideoList={sortedVideoList} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}