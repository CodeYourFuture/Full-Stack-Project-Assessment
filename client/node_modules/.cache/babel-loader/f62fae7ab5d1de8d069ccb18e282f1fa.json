{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nvar _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n    _excluded2 = [\"ref\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      disablePortal = ownerState.disablePortal,\n      expanded = ownerState.expanded,\n      focused = ownerState.focused,\n      fullWidth = ownerState.fullWidth,\n      hasClearIcon = ownerState.hasClearIcon,\n      hasPopupIcon = ownerState.hasPopupIcon,\n      inputFocused = ownerState.inputFocused,\n      popupOpen = ownerState.popupOpen,\n      size = ownerState.size;\n  var slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', \"tagSize\".concat(capitalize(size))],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nvar AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var fullWidth = ownerState.fullWidth,\n        hasClearIcon = ownerState.hasClearIcon,\n        hasPopupIcon = ownerState.hasPopupIcon,\n        inputFocused = ownerState.inputFocused,\n        size = ownerState.size;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles.tag), _defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles[\"tagSize\".concat(capitalize(size))]), _defineProperty({}, \"& .\".concat(autocompleteClasses.inputRoot), styles.inputRoot), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), styles.input), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), inputFocused && styles.inputFocused), styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(function (_ref6) {\n  var _extends2, _$concat, _$concat2, _$concat3, _extends3;\n\n  var ownerState = _ref6.ownerState;\n  return _extends((_extends2 = {}, _defineProperty(_extends2, \"&.\".concat(autocompleteClasses.focused, \" .\").concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  }), _defineProperty(_extends2, '@media (pointer: fine)', _defineProperty({}, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  })), _extends2), ownerState.fullWidth && {\n    width: '100%'\n  }, (_extends3 = {}, _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.tag), _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  })), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.inputRoot), (_$concat = {\n    flexWrap: 'wrap'\n  }, _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4\n  }), _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4\n  }), _defineProperty(_$concat, \"& .\".concat(autocompleteClasses.input), {\n    width: 0,\n    minWidth: 30\n  }), _$concat)), _defineProperty(_extends3, \"& .\".concat(inputClasses.root), {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  }), _defineProperty(_extends3, \"& .\".concat(inputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(inputClasses.input), {\n    padding: '2px 4px 3px 0'\n  })), _defineProperty(_extends3, \"& .\".concat(outlinedInputClasses.root), (_$concat2 = {\n    padding: 9\n  }, _defineProperty(_$concat2, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_$concat2, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.input), {\n    padding: '7.5px 4px 7.5px 5px'\n  }), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _$concat2)), _defineProperty(_extends3, \"& .\".concat(outlinedInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6\n  }, \"& .\".concat(autocompleteClasses.input), {\n    padding: '2.5px 4px 2.5px 8px'\n  })), _defineProperty(_extends3, \"& .\".concat(filledInputClasses.root), (_$concat3 = {\n    paddingTop: 19,\n    paddingLeft: 8\n  }, _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_$concat3, \"& .\".concat(filledInputClasses.input), {\n    padding: '7px 4px'\n  }), _defineProperty(_$concat3, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _$concat3)), _defineProperty(_extends3, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n    paddingBottom: 1\n  }, \"& .\".concat(filledInputClasses.input), {\n    padding: '2.5px 4px'\n  })), _defineProperty(_extends3, \"& .\".concat(inputBaseClasses.hiddenLabel), {\n    paddingTop: 8\n  }), _defineProperty(_extends3, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel), _defineProperty({\n    paddingTop: 0,\n    paddingBottom: 0\n  }, \"& .\".concat(autocompleteClasses.input), {\n    paddingTop: 16,\n    paddingBottom: 17\n  })), _defineProperty(_extends3, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), {\n    paddingTop: 8,\n    paddingBottom: 9\n  })), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.input), _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })), _extends3));\n});\nvar AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endAdornment;\n  }\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nvar AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.clearIndicator;\n  }\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nvar AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: function overridesResolver(_ref7, styles) {\n    var ownerState = _ref7.ownerState;\n    return _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen);\n  }\n})(function (_ref8) {\n  var ownerState = _ref8.ownerState;\n  return _extends({\n    padding: 2,\n    marginRight: -2\n  }, ownerState.popupOpen && {\n    transform: 'rotate(180deg)'\n  });\n});\nvar AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.option), styles.option), styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(function (_ref10) {\n  var theme = _ref10.theme,\n      ownerState = _ref10.ownerState;\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.modal\n  }, ownerState.disablePortal && {\n    position: 'absolute'\n  });\n});\nvar AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})(function (_ref11) {\n  var theme = _ref11.theme;\n  return _extends({}, theme.typography.body1, {\n    overflow: 'auto'\n  });\n});\nvar AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.loading;\n  }\n})(function (_ref12) {\n  var theme = _ref12.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})(function (_ref13) {\n  var theme = _ref13.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.listbox;\n  }\n})(function (_ref14) {\n  var _ariaSelectedTru, _$concat4;\n\n  var theme = _ref14.theme;\n  return _defineProperty({\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto',\n    position: 'relative'\n  }, \"& .\".concat(autocompleteClasses.option), (_$concat4 = {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16\n  }, _defineProperty(_$concat4, theme.breakpoints.up('sm'), {\n    minHeight: 'auto'\n  }), _defineProperty(_$concat4, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }), _defineProperty(_$concat4, '&[aria-disabled=\"true\"]', {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat4, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  }), _defineProperty(_$concat4, '&[aria-selected=\"true\"]', (_ariaSelectedTru = {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.selectedOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n  }, _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.hoverOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette.action.selected\n    }\n  }), _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.focusOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  }), _ariaSelectedTru)), _$concat4));\n});\nvar AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupLabel;\n  }\n})(function (_ref16) {\n  var theme = _ref16.theme;\n  return {\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    top: -8\n  };\n});\nvar AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupUl;\n  }\n})(_defineProperty({\n  padding: 0\n}, \"& .\".concat(autocompleteClasses.option), {\n  paddingLeft: 24\n}));\nexport { createFilterOptions };\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      className = props.className,\n      _props$clearIcon = props.clearIcon,\n      clearIcon = _props$clearIcon === void 0 ? _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n    fontSize: \"small\"\n  })) : _props$clearIcon,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionLabelProp = props.getOptionLabel,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})) : _props$popupIcon,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      expanded = _useAutocomplete.expanded,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  var _getInputProps = getInputProps(),\n      handleInputMouseDown = _getInputProps.onMouseDown;\n\n  var _ref17 = ListboxProps != null ? ListboxProps : {},\n      externalListboxRef = _ref17.ref;\n\n  var _getListboxProps = getListboxProps(),\n      listboxRef = _getListboxProps.ref,\n      otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n\n  var combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n\n  var defaultGetOptionLabel = function defaultGetOptionLabel(option) {\n    var _option$label;\n\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n\n  var getOptionLabel = getOptionLabelProp || defaultGetOptionLabel; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  var ownerState = _extends({}, props, {\n    disablePortal: disablePortal,\n    expanded: expanded,\n    focused: focused,\n    fullWidth: fullWidth,\n    getOptionLabel: getOptionLabel,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: classes.tag,\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/_jsx(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n        className: classes.groupLabel,\n        ownerState: ownerState,\n        component: \"div\",\n        children: params.group\n      }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n        className: classes.groupUl,\n        ownerState: ownerState,\n        children: params.children\n      })]\n    }, params.key);\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    return /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n      children: getOptionLabel(option)\n    }));\n  };\n\n  var renderOption = renderOptionProp || defaultRenderOption;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index: index,\n      inputValue: inputValue\n    }, ownerState);\n  };\n\n  var clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  var paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  var popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  var popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id: id,\n        disabled: disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment: startAdornment,\n          onClick: function onClick(event) {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled: disabled,\n          readOnly: readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: function onMouseDown(event) {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, otherListboxProps, ListboxProps, {\n          ref: combinedListboxRef,\n          children: groupedOptions.map(function (option, index) {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map(function (option2, index2) {\n                  return renderListOption(option2, option.index + index2);\n                })\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.defaultValue, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["_objectWithoutPropertiesLoose","_extends","_ClearIcon","_ArrowDropDownIcon","_excluded","_excluded2","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_composeClasses","composeClasses","useAutocomplete","createFilterOptions","alpha","Popper","ListSubheader","Paper","IconButton","Chip","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","ClearIcon","ArrowDropDownIcon","useThemeProps","styled","autocompleteClasses","getAutocompleteUtilityClass","capitalize","useForkRef","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disablePortal","expanded","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","sizeSmall","right","paddingTop","paddingLeft","hiddenLabel","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","popupIndicatorOpen","transform","AutocompletePopper","popperDisablePortal","theme","zIndex","vars","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","componentsProps","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionLabelProp","getOptionLabel","groupBy","handleHomeEndKeys","includeInputInList","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openOnFocus","openText","PaperComponent","PopperComponent","popupIcon","readOnly","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","selectOnFocus","slotProps","other","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","value","dirty","id","focusedTag","anchorEl","setAnchorEl","inputValue","groupedOptions","handleInputMouseDown","onMouseDown","externalListboxRef","_getListboxProps","listboxRef","otherListboxProps","combinedListboxRef","defaultGetOptionLabel","_option$label","label","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","Fragment","undefined","InputLabelProps","InputProps","onClick","event","target","currentTarget","title","inputProps","as","style","clientWidth","role","open","preventDefault","options","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","shape","any","Error","join","filterOptions","func","getOptionDisabled","isOptionEqualToValue","elementType","onChange","onClose","onHighlightChange","onInputChange","onOpen","array","isRequired","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n  _excluded2 = [\"ref\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel: getOptionLabelProp,\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: externalListboxRef\n  } = ListboxProps != null ? ListboxProps : {};\n  const _getListboxProps = getListboxProps(),\n    {\n      ref: listboxRef\n    } = _getListboxProps,\n    otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n  const combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n  const defaultGetOptionLabel = option => {\n    var _option$label;\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, otherListboxProps, ListboxProps, {\n          ref: combinedListboxRef,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}