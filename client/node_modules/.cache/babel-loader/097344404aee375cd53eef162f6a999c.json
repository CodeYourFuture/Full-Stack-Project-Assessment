{"ast":null,"code":"var generatePrime = require('./lib/generatePrime');\nvar primes = require('./lib/primes.json');\nvar DH = require('./lib/dh');\nfunction getDiffieHellman(mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex');\n  var gen = new Buffer(primes[mod].gen, 'hex');\n  return new DH(prime, gen);\n}\nvar ENCODINGS = {\n  'binary': true,\n  'hex': true,\n  'base64': true\n};\nfunction createDiffieHellman(prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator);\n  }\n  enc = enc || 'binary';\n  genc = genc || 'binary';\n  generator = generator || new Buffer([2]);\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc);\n  }\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true);\n  }\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc);\n  }\n  return new DH(prime, generator, true);\n}\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;","map":{"version":3,"names":["generatePrime","require","primes","DH","getDiffieHellman","mod","prime","Buffer","gen","ENCODINGS","createDiffieHellman","enc","generator","genc","isBuffer","undefined","exports","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/diffie-hellman/browser.js"],"sourcesContent":["var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAClD,IAAIC,MAAM,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAEzC,IAAIE,EAAE,GAAGF,OAAO,CAAC,UAAU,CAAC;AAE5B,SAASG,gBAAgBA,CAAEC,GAAG,EAAE;EAC9B,IAAIC,KAAK,GAAG,IAAIC,MAAM,CAACL,MAAM,CAACG,GAAG,CAAC,CAACC,KAAK,EAAE,KAAK,CAAC;EAChD,IAAIE,GAAG,GAAG,IAAID,MAAM,CAACL,MAAM,CAACG,GAAG,CAAC,CAACG,GAAG,EAAE,KAAK,CAAC;EAE5C,OAAO,IAAIL,EAAE,CAACG,KAAK,EAAEE,GAAG,CAAC;AAC3B;AAEA,IAAIC,SAAS,GAAG;EACd,QAAQ,EAAE,IAAI;EAAE,KAAK,EAAE,IAAI;EAAE,QAAQ,EAAE;AACzC,CAAC;AAED,SAASC,mBAAmBA,CAAEJ,KAAK,EAAEK,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAE;EACzD,IAAIN,MAAM,CAACO,QAAQ,CAACH,GAAG,CAAC,IAAIF,SAAS,CAACE,GAAG,CAAC,KAAKI,SAAS,EAAE;IACxD,OAAOL,mBAAmB,CAACJ,KAAK,EAAE,QAAQ,EAAEK,GAAG,EAAEC,SAAS,CAAC;EAC7D;EAEAD,GAAG,GAAGA,GAAG,IAAI,QAAQ;EACrBE,IAAI,GAAGA,IAAI,IAAI,QAAQ;EACvBD,SAAS,GAAGA,SAAS,IAAI,IAAIL,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAExC,IAAI,CAACA,MAAM,CAACO,QAAQ,CAACF,SAAS,CAAC,EAAE;IAC/BA,SAAS,GAAG,IAAIL,MAAM,CAACK,SAAS,EAAEC,IAAI,CAAC;EACzC;EAEA,IAAI,OAAOP,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAIH,EAAE,CAACH,aAAa,CAACM,KAAK,EAAEM,SAAS,CAAC,EAAEA,SAAS,EAAE,IAAI,CAAC;EACjE;EAEA,IAAI,CAACL,MAAM,CAACO,QAAQ,CAACR,KAAK,CAAC,EAAE;IAC3BA,KAAK,GAAG,IAAIC,MAAM,CAACD,KAAK,EAAEK,GAAG,CAAC;EAChC;EAEA,OAAO,IAAIR,EAAE,CAACG,KAAK,EAAEM,SAAS,EAAE,IAAI,CAAC;AACvC;AAEAI,OAAO,CAACC,kBAAkB,GAAGD,OAAO,CAACE,wBAAwB,GAAGF,OAAO,CAACZ,gBAAgB,GAAGA,gBAAgB;AAC3GY,OAAO,CAACN,mBAAmB,GAAGM,OAAO,CAACG,aAAa,GAAGT,mBAAmB"},"metadata":{},"sourceType":"script"}