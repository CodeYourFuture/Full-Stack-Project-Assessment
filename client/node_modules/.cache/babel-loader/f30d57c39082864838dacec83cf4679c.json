{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    margin: 0\n  }, ownerState.variant === 'inherit' && {\n    // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n    font: 'inherit'\n  }, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n    textAlign: ownerState.align\n  }, ownerState.noWrap && {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }, ownerState.gutterBottom && {\n    marginBottom: '0.35em'\n  }, ownerState.paragraph && {\n    marginBottom: 16\n  });\n});\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Set the text-align on the component.\r\n   * @default 'inherit'\r\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If `true`, the text will have a bottom margin.\r\n   * @default false\r\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\r\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\r\n   *\r\n   * Note that text overflow can only happen with block or inline-block level elements\r\n   * (the element needs to have a width in order to overflow).\r\n   * @default false\r\n   */\n  noWrap: PropTypes.bool,\n\n  /**\r\n   * If `true`, the element will be a paragraph element.\r\n   * @default false\r\n   */\n  paragraph: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\r\n   * Applies the theme typography styles.\r\n   * @default 'body1'\r\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\r\n   * The component maps the variant prop to a range of different HTML element types.\r\n   * For instance, subtitle1 to `<h6>`.\r\n   * If you wish to change that mapping, you can provide your own.\r\n   * Alternatively, you can use the `component` prop.\r\n   * @default {\r\n   *   h1: 'h1',\r\n   *   h2: 'h2',\r\n   *   h3: 'h3',\r\n   *   h4: 'h4',\r\n   *   h5: 'h5',\r\n   *   h6: 'h6',\r\n   *   subtitle1: 'h6',\r\n   *   subtitle2: 'h6',\r\n   *   body1: 'p',\r\n   *   body2: 'p',\r\n   *   inherit: 'p',\r\n   * }\r\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Typography/Typography.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","unstable_composeClasses","composeClasses","styled","useThemeProps","capitalize","getTypographyUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","align","gutterBottom","noWrap","paragraph","variant","classes","slots","root","TypographyRoot","name","slot","overridesResolver","props","styles","theme","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","transformDeprecatedColors","color","Typography","forwardRef","inProps","ref","themeProps","className","component","variantMapping","other","Component","as","process","env","NODE_ENV","propTypes","oneOf","children","node","object","string","elementType","bool","sx","oneOfType","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport capitalize from '../utils/capitalize';\r\nimport { getTypographyUtilityClass } from './typographyClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    align,\r\n    gutterBottom,\r\n    noWrap,\r\n    paragraph,\r\n    variant,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\r\n  };\r\n  return composeClasses(slots, getTypographyUtilityClass, classes);\r\n};\r\nexport const TypographyRoot = styled('span', {\r\n  name: 'MuiTypography',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  margin: 0\r\n}, ownerState.variant === 'inherit' && {\r\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\r\n  font: 'inherit'\r\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\r\n  textAlign: ownerState.align\r\n}, ownerState.noWrap && {\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap'\r\n}, ownerState.gutterBottom && {\r\n  marginBottom: '0.35em'\r\n}, ownerState.paragraph && {\r\n  marginBottom: 16\r\n}));\r\nconst defaultVariantMapping = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  subtitle1: 'h6',\r\n  subtitle2: 'h6',\r\n  body1: 'p',\r\n  body2: 'p',\r\n  inherit: 'p'\r\n};\r\n\r\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\r\nconst colorTransformations = {\r\n  primary: 'primary.main',\r\n  textPrimary: 'text.primary',\r\n  secondary: 'secondary.main',\r\n  textSecondary: 'text.secondary',\r\n  error: 'error.main'\r\n};\r\nconst transformDeprecatedColors = color => {\r\n  return colorTransformations[color] || color;\r\n};\r\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\r\n  const themeProps = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTypography'\r\n  });\r\n  const color = transformDeprecatedColors(themeProps.color);\r\n  const props = extendSxProp(_extends({}, themeProps, {\r\n    color\r\n  }));\r\n  const {\r\n      align = 'inherit',\r\n      className,\r\n      component,\r\n      gutterBottom = false,\r\n      noWrap = false,\r\n      paragraph = false,\r\n      variant = 'body1',\r\n      variantMapping = defaultVariantMapping\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const ownerState = _extends({}, props, {\r\n    align,\r\n    color,\r\n    className,\r\n    component,\r\n    gutterBottom,\r\n    noWrap,\r\n    paragraph,\r\n    variant,\r\n    variantMapping\r\n  });\r\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\r\n    as: Component,\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    className: clsx(classes.root, className)\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * Set the text-align on the component.\r\n   * @default 'inherit'\r\n   */\r\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * If `true`, the text will have a bottom margin.\r\n   * @default false\r\n   */\r\n  gutterBottom: PropTypes.bool,\r\n  /**\r\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\r\n   *\r\n   * Note that text overflow can only happen with block or inline-block level elements\r\n   * (the element needs to have a width in order to overflow).\r\n   * @default false\r\n   */\r\n  noWrap: PropTypes.bool,\r\n  /**\r\n   * If `true`, the element will be a paragraph element.\r\n   * @default false\r\n   */\r\n  paragraph: PropTypes.bool,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * Applies the theme typography styles.\r\n   * @default 'body1'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\r\n  /**\r\n   * The component maps the variant prop to a range of different HTML element types.\r\n   * For instance, subtitle1 to `<h6>`.\r\n   * If you wish to change that mapping, you can provide your own.\r\n   * Alternatively, you can use the `component` prop.\r\n   * @default {\r\n   *   h1: 'h1',\r\n   *   h2: 'h2',\r\n   *   h3: 'h3',\r\n   *   h4: 'h4',\r\n   *   h5: 'h5',\r\n   *   h6: 'h6',\r\n   *   subtitle1: 'h6',\r\n   *   subtitle2: 'h6',\r\n   *   body1: 'p',\r\n   *   body2: 'p',\r\n   *   inherit: 'p',\r\n   * }\r\n   */\r\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\r\n} : void 0;\r\nexport default Typography;"]},"metadata":{},"sourceType":"module"}