{"ast":null,"code":"/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  } // trim accepts\n\n\n  accepts.length = j;\n  return accepts;\n}\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n  var prefix = match[1],\n      suffix = match[2],\n      full = prefix;\n  if (suffix) full += \"-\" + suffix;\n  var q = 1;\n\n  if (match[3]) {\n    var params = match[3].split(';');\n\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n/**\n * Get the priority of a language.\n * @private\n */\n\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {\n    o: -1,\n    q: 0,\n    s: 0\n  };\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n/**\n * Get the specificity of the language.\n * @private\n */\n\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language);\n  if (!p) return null;\n  var s = 0;\n\n  if (spec.full.toLowerCase() === p.full.toLowerCase()) {\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*') {\n    return null;\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  };\n}\n\n;\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts.filter(isQuality).sort(compareSpecs).map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  }); // sorted list of accepted languages\n\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n/**\n * Compare two specs.\n * @private\n */\n\n\nfunction compareSpecs(a, b) {\n  return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;\n}\n/**\n * Get full language string.\n * @private\n */\n\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n/**\n * Check if a spec has any quality.\n * @private\n */\n\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/negotiator/lib/language.js"],"names":["module","exports","preferredLanguages","simpleLanguageRegExp","parseAcceptLanguage","accept","accepts","split","i","j","length","language","parseLanguage","trim","str","match","exec","prefix","suffix","full","q","params","p","parseFloat","getLanguagePriority","accepted","index","priority","o","s","spec","specify","toLowerCase","provided","undefined","filter","isQuality","sort","compareSpecs","map","getFullLanguage","priorities","getPriority","type","getLanguage","indexOf","a","b"],"mappings":"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","sourcesContent":["/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1],\n    suffix = match[2],\n    full = prefix;\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n"]},"metadata":{},"sourceType":"script"}