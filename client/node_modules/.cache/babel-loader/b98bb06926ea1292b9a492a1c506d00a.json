{"ast":null,"code":"var _jsxFileName = \"/Users/anuthapaliya/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoDetails(props) {\n  _s();\n\n  const [video, setVideo] = useState(null);\n  useEffect(() => {\n    const fetchVideoById = async () => {\n      const videoId = props.match.params.id;\n\n      try {\n        const response = await axios.get(`http://localhost:8000/videos/${videoId}`);\n        setVideo(response.data);\n      } catch (error) {\n        console.error('Error fetching video:', error);\n      }\n    };\n\n    fetchVideoById();\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: video ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: video.url,\n          children: video.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", video.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 1\n  }, this);\n}\n\n_s(VideoDetails, \"GUQFMVsp4JwX8+yy6pEn7GsMQwI=\");\n\n_c = VideoDetails;\nexport default VideoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetails\");","map":{"version":3,"sources":["/Users/anuthapaliya/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoDetails.js"],"names":["React","useState","useEffect","axios","VideoDetails","props","video","setVideo","fetchVideoById","videoId","match","params","id","response","get","data","error","console","title","url","rating"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAKA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMM,cAAc,GAAG,YAAY;AACnC,YAAMC,OAAO,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;;AAKA,UAAI;AACJ,cAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,gCAA+BL,OAAQ,EAAlD,CAAvB;AACAF,QAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR;AACC,OAHD,CAGE,OAAOC,KAAP,EAAc;AAChBC,QAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACC;AACA,KAZD;;AAeAR,IAAAA,cAAc;AACb,GAjBQ,EAiBN,CAACH,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAjBM,CAAT;AAoBA,sBACA;AAAA,cACCN,KAAK,gBACN;AAAA,8BACA;AAAA,kBAAKA,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,mBAAG,OAAH,eAAQ;AAAG,UAAA,IAAI,EAAEZ,KAAK,CAACa,GAAf;AAAA,oBAAqBb,KAAK,CAACa;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,mBAAG,UAAH,EAAYb,KAAK,CAACc,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAON;AAAA,gBAAG;AAAH;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA,UADA;AAaC;;GArCQhB,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\n\nfunction VideoDetails(props) {\nconst [video, setVideo] = useState(null);\n\n\nuseEffect(() => {\nconst fetchVideoById = async () => {\nconst videoId = props.match.params.id;\n\n\n\n\ntry {\nconst response = await axios.get(`http://localhost:8000/videos/${videoId}`);\nsetVideo(response.data);\n} catch (error) {\nconsole.error('Error fetching video:', error);\n}\n};\n\n\nfetchVideoById();\n}, [props.match.params.id]);\n\n\nreturn (\n<div>\n{video ? (\n<div>\n<h1>{video.title}</h1>\n<p>URL: <a href={video.url}>{video.url}</a></p>\n<p>Rating: {video.rating}</p>\n</div>\n) : (\n<p>Loading...</p>\n)}\n</div>\n);\n}\n\n\nexport default VideoDetails;\n"]},"metadata":{},"sourceType":"module"}