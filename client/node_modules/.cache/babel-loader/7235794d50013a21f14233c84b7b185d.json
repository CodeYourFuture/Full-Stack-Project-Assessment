{"ast":null,"code":"const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    runTransition,\n    backdropTransition,\n    runBackdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  } // TODO: I think this needs to be in an effect\n\n\n  if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n\n\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = function () {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...arguments);\n  };\n\n  if (!container) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"sources":["C:/Users/meron/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/@restart/ui/esm/Modal.js"],"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","activeElement","contains","canUseDOM","listen","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","React","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","useWindow","renderTransition","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","manager","getManager","window","ownerDocument","document","useModalManager","provided","modalManager","modal","dialog","backdrop","assign","current","add","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","isMounted","prevShow","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","currentTarget","keyCode","defaultPrevented","handleHidden","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","mountOnEnter","appear","in","backdropElement","onClick","createPortal","displayName","Manager"],"mappings":"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","sourcesContent":["const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"]},"metadata":{},"sourceType":"module"}