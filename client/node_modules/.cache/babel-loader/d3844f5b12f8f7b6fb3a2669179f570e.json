{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/\") // Replace with your backend API URL\n    .then(response => response.json()).then(data => {\n      setVideos(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  const handleAddVideo = (title, url) => {\n    const video = {\n      title: title,\n      url: url\n    };\n    fetch(\"http://localhost:5000/\", {\n      // Replace with your backend API URL\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(video)\n    }).then(response => response.json()).then(data => {\n      if (data.id) {\n        // Video added successfully\n        const newVideo = {\n          id: data.id,\n          title: title,\n          url: url,\n          votes: 0\n        };\n        setVideos([...videos, newVideo]);\n      } else {\n        // Failed to add video\n        console.error(data.message);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const handleVote = (videoId, increment) => {\n    setVideos(prevVideos => prevVideos.map(video => video.id === videoId ? { ...video,\n      votes: video.votes + increment\n    } : video));\n  };\n\n  const handleRemoveVideo = videoId => {\n    fetch(`http://localhost:5000/${videoId}`, {\n      // Replace with your backend API URL\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        // Video removed successfully\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== videoId));\n      } else {\n        // Failed to remove video\n        console.error(data.message);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos,\n      handleVote: handleVote,\n      handleRemove: handleRemoveVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddVideoForm, {\n      handleAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useEffect","useState","VideoList","AddVideoForm","App","videos","setVideos","fetch","then","response","json","data","catch","error","console","handleAddVideo","title","url","video","method","headers","body","JSON","stringify","id","newVideo","votes","message","handleVote","videoId","increment","prevVideos","map","handleRemoveVideo","success","filter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/\") // Replace with your backend API URL\n      .then((response) => response.json())\n      .then((data) => {\n        setVideos(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  const handleAddVideo = (title, url) => {\n    const video = {\n      title: title,\n      url: url,\n    };\n\n    fetch(\"http://localhost:5000/\", {\n      // Replace with your backend API URL\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(video),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.id) {\n          // Video added successfully\n          const newVideo = { id: data.id, title: title, url: url, votes: 0 };\n          setVideos([...videos, newVideo]);\n        } else {\n          // Failed to add video\n          console.error(data.message);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleVote = (videoId, increment) => {\n    setVideos((prevVideos) =>\n      prevVideos.map((video) =>\n        video.id === videoId\n          ? { ...video, votes: video.votes + increment }\n          : video\n      )\n    );\n  };\n\n  const handleRemoveVideo = (videoId) => {\n    fetch(`http://localhost:5000/${videoId}`, {\n      // Replace with your backend API URL\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          // Video removed successfully\n          setVideos((prevVideos) =>\n            prevVideos.filter((video) => video.id !== videoId)\n          );\n        } else {\n          // Failed to remove video\n          console.error(data.message);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Video Website</h1>\n      <VideoList\n        videos={videos}\n        handleVote={handleVote}\n        handleRemove={handleRemoveVideo}\n      />\n      <AddVideoForm handleAddVideo={handleAddVideo} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}