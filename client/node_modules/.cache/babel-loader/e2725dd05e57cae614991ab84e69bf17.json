{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(props) {\n  _s();\n\n  const videos = props.result;\n  const [number, setNumber] = useState(videos.rating);\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  function getOne() {\n    setNumber(e => e + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShowingVideos\",\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: getOne,\n          class: \"fa-solid fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"allVideos\",\n        width: \"300\",\n        height: \"220\",\n        src: convertToEmbedUrl(video.url),\n        title: video.title,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowingVideos, \"bwkZFmQa9QsnY14JNXWC2cWVjTk=\");\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","useState","ShowingVideos","props","videos","result","number","setNumber","rating","convertToEmbedUrl","url","videoId","split","getOne","e","map","video","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACG,MAAM,CAACI,MAAR,CAApC;;AACA,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,UAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,WAAQ,iCAAgCD,OAAQ,EAAhD;AACD;;AACD,WAASE,MAAT,GAAkB;AAChBN,IAAAA,SAAS,CAAEO,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGV,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACV;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA,kBAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAG,UAAA,OAAO,EAAEJ,MAAZ;AAAoB,UAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAHF,EAG0C,GAH1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACE,QAAA,SAAS,EAAC,WADZ;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,MAAM,EAAC,KAJT;AAKE,QAAA,GAAG,EAAEG,iBAAiB,CAACO,KAAK,CAACN,GAAP,CALxB;AAME,QAAA,KAAK,EAAEM,KAAK,CAACC,KANf;AAOE,QAAA,WAAW,EAAC,GAPd;AAQE,QAAA,KAAK,EAAC,0FARR;AASE,QAAA,eAAe;AATjB,SAEOD,KAAK,CAACE,EAFb;AAAA;AAAA;AAAA;AAAA,cARF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAvCQhB,a;;KAAAA,a;AAyCT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ShowingVideos(props) {\n  const videos = props.result;\n\n  const [number, setNumber] = useState(videos.rating);\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n  function getOne() {\n    setNumber((e) => e + 1);\n  }\n\n  return (\n    <div className=\"ShowingVideos\">\n      {videos.map((video) => (\n        <div className=\"videos\">\n          <p>{video.title}</p>\n          <div className=\"buttons\">\n            <i onClick={getOne} class=\"fa-solid fa-thumbs-up\"></i>\n            <h4>{number}</h4>\n            <i class=\"fa-solid fa-thumbs-down\"></i>{\" \"}\n          </div>\n\n          <iframe\n            className=\"allVideos\"\n            key={video.id}\n            width=\"300\"\n            height=\"220\"\n            src={convertToEmbedUrl(video.url)}\n            title={video.title}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <button>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}