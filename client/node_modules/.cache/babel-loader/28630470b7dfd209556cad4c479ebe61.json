{"ast":null,"code":"import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    className,\n    children,\n    dimension = 'height',\n    in: inProp = false,\n    timeout = 300,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    appear = false,\n    getDimensionValue = getDefaultDimensionValue,\n    ...props\n  } = _ref;\n\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\nexport default Collapse;","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/Collapse.js"],"names":["classNames","css","React","useMemo","ENTERED","ENTERING","EXITED","EXITING","transitionEndListener","createChainedFunction","triggerBrowserReflow","TransitionWrapper","jsx","_jsx","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","offset","toUpperCase","slice","value","margins","parseInt","collapseStyles","Collapse","forwardRef","ref","onEnter","onEntering","onEntered","onExit","onExiting","className","children","in","inProp","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","props","computedDimension","handleEnter","style","handleEntering","scroll","handleEntered","handleExit","handleExiting","addEndListener","role","childRef","state","innerProps","cloneElement"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}