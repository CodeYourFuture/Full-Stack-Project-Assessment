{"ast":null,"code":"'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport { VERSION } from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\n\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n  utils.extend(instance, Axios.prototype, context, {\n    allOwnKeys: true\n  }); // Copy context to instance\n\n  utils.extend(instance, context, null, {\n    allOwnKeys: true\n  }); // Factory for creating new instances\n\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n} // Create the default instance to be exported\n\n\nconst axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\naxios.Axios = Axios; // Expose Cancel & CancelToken\n\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData; // Expose AxiosError class\n\naxios.AxiosError = AxiosError; // alias for CanceledError for backward compatibility\n\naxios.Cancel = axios.CanceledError; // Expose all/spread\n\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread; // Expose isAxiosError\n\naxios.isAxiosError = isAxiosError; // Expose mergeConfig\n\naxios.mergeConfig = mergeConfig;\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\naxios.default = axios; // this module should only have a default export\n\nexport default axios;","map":{"version":3,"sources":["/Users/roozbehshokri/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/axios/lib/axios.js"],"names":["utils","bind","Axios","mergeConfig","defaults","formDataToJSON","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","spread","isAxiosError","AxiosHeaders","HttpStatusCode","createInstance","defaultConfig","context","instance","prototype","request","extend","allOwnKeys","create","instanceConfig","axios","Cancel","all","promises","Promise","formToJSON","thing","isHTMLForm","FormData","default"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,aAAxB,EAAuC;AACrC,QAAMC,OAAO,GAAG,IAAIhB,KAAJ,CAAUe,aAAV,CAAhB;AACA,QAAME,QAAQ,GAAGlB,IAAI,CAACC,KAAK,CAACkB,SAAN,CAAgBC,OAAjB,EAA0BH,OAA1B,CAArB,CAFqC,CAIrC;;AACAlB,EAAAA,KAAK,CAACsB,MAAN,CAAaH,QAAb,EAAuBjB,KAAK,CAACkB,SAA7B,EAAwCF,OAAxC,EAAiD;AAACK,IAAAA,UAAU,EAAE;AAAb,GAAjD,EALqC,CAOrC;;AACAvB,EAAAA,KAAK,CAACsB,MAAN,CAAaH,QAAb,EAAuBD,OAAvB,EAAgC,IAAhC,EAAsC;AAACK,IAAAA,UAAU,EAAE;AAAb,GAAtC,EARqC,CAUrC;;AACAJ,EAAAA,QAAQ,CAACK,MAAT,GAAkB,SAASA,MAAT,CAAgBC,cAAhB,EAAgC;AAChD,WAAOT,cAAc,CAACb,WAAW,CAACc,aAAD,EAAgBQ,cAAhB,CAAZ,CAArB;AACD,GAFD;;AAIA,SAAON,QAAP;AACD,C,CAED;;;AACA,MAAMO,KAAK,GAAGV,cAAc,CAACZ,QAAD,CAA5B,C,CAEA;;AACAsB,KAAK,CAACxB,KAAN,GAAcA,KAAd,C,CAEA;;AACAwB,KAAK,CAACpB,aAAN,GAAsBA,aAAtB;AACAoB,KAAK,CAACnB,WAAN,GAAoBA,WAApB;AACAmB,KAAK,CAAClB,QAAN,GAAiBA,QAAjB;AACAkB,KAAK,CAACjB,OAAN,GAAgBA,OAAhB;AACAiB,KAAK,CAAChB,UAAN,GAAmBA,UAAnB,C,CAEA;;AACAgB,KAAK,CAACf,UAAN,GAAmBA,UAAnB,C,CAEA;;AACAe,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACpB,aAArB,C,CAEA;;AACAoB,KAAK,CAACE,GAAN,GAAY,SAASA,GAAT,CAAaC,QAAb,EAAuB;AACjC,SAAOC,OAAO,CAACF,GAAR,CAAYC,QAAZ,CAAP;AACD,CAFD;;AAIAH,KAAK,CAACd,MAAN,GAAeA,MAAf,C,CAEA;;AACAc,KAAK,CAACb,YAAN,GAAqBA,YAArB,C,CAEA;;AACAa,KAAK,CAACvB,WAAN,GAAoBA,WAApB;AAEAuB,KAAK,CAACZ,YAAN,GAAqBA,YAArB;;AAEAY,KAAK,CAACK,UAAN,GAAmBC,KAAK,IAAI3B,cAAc,CAACL,KAAK,CAACiC,UAAN,CAAiBD,KAAjB,IAA0B,IAAIE,QAAJ,CAAaF,KAAb,CAA1B,GAAgDA,KAAjD,CAA1C;;AAEAN,KAAK,CAACX,cAAN,GAAuBA,cAAvB;AAEAW,KAAK,CAACS,OAAN,GAAgBT,KAAhB,C,CAEA;;AACA,eAAeA,KAAf","sourcesContent":["'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n"]},"metadata":{},"sourceType":"module"}