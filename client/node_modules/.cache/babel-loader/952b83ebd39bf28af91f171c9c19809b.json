{"ast":null,"code":"var asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = parseKeys;\nfunction parseKeys(buffer) {\n  var password;\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase;\n    buffer = buffer.key;\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  }\n  var stripped = fixProc(buffer, password);\n  var type = stripped.tag;\n  var data = stripped.data;\n  var subtype, ndata;\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n    // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der');\n      }\n      subtype = ndata.algorithm.algorithm.join('.');\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey;\n          return {\n            type: 'ec',\n            data: ndata\n          };\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          };\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n    // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der');\n      data = decrypt(data, password);\n    // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der');\n      subtype = ndata.algorithm.algorithm.join('.');\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          };\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          };\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n    // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der');\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der');\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      };\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der');\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      };\n    default:\n      throw new Error('unknown key type ' + type);\n  }\n}\nparseKeys.signature = asn1.signature;\nfunction decrypt(data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt;\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n  var iv = data.algorithm.decrypt.cipher.iv;\n  var cipherText = data.subjectPrivateKey;\n  var keylen = parseInt(algo.split('-')[1], 10) / 8;\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n  var cipher = ciphers.createDecipheriv(algo, key, iv);\n  var out = [];\n  out.push(cipher.update(cipherText));\n  out.push(cipher.final());\n  return Buffer.concat(out);\n}","map":{"version":3,"names":["asn1","require","aesid","fixProc","ciphers","compat","Buffer","module","exports","parseKeys","buffer","password","isBuffer","passphrase","key","from","stripped","type","tag","data","subtype","ndata","certificate","decode","tbsCertificate","subjectPublicKeyInfo","PublicKey","algorithm","join","RSAPublicKey","subjectPublicKey","subjectPrivateKey","params","pub_key","DSAparam","Error","EncryptedPrivateKey","decrypt","PrivateKey","RSAPrivateKey","curve","privateKey","ECPrivateKey","priv_key","DSAPrivateKey","parameters","value","signature","salt","kde","kdeparams","iters","parseInt","toString","algo","cipher","iv","cipherText","keylen","split","pbkdf2Sync","createDecipheriv","out","push","update","final","concat"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/parse-asn1/index.js"],"sourcesContent":["var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}