{"ast":null,"code":"import { unstable_capitalize as capitalize } from '@mui/utils';\nimport merge from '../merge';\nimport { getPath, getStyleValue as getValue } from '../style';\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from '../breakpoints';\nimport defaultSxConfig from './defaultSxConfig';\n\nfunction objectsHaveSameKeys() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n} // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nexport function unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n\n    if (val == null) {\n      return null;\n    } // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\n\n\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n\n    const themeMapping = getPath(theme, themeKey) || {};\n\n    if (style) {\n      return style(props);\n    }\n\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return {\n        [cssProperty]: value\n      };\n    };\n\n    return handleBreakpoints(props, val, styleFromPropValue);\n  }\n\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig;\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n\n      if (!sxObject) {\n        return null;\n      }\n\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = handleBreakpoints({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = merge(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return removeUnusedBreakpoints(breakpointsKeys, css);\n    }\n\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js"],"names":["unstable_capitalize","capitalize","merge","getPath","getStyleValue","getValue","handleBreakpoints","createEmptyBreakpointObject","removeUnusedBreakpoints","defaultSxConfig","objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","callIfFn","maybeFn","arg","unstable_createStyleFunctionSx","getThemeValue","prop","val","theme","config","props","options","cssProperty","themeKey","transform","style","themeMapping","styleFromPropValue","propValueFinal","value","styleFunctionSx","_theme$unstable_sxCon","sx","unstable_sxConfig","traverse","sxInput","sxObject","emptyBreakpoints","breakpoints","breakpointsKeys","css","forEach","styleKey","undefined","breakpointsValues","x","Array","isArray","map","filterProps"],"mappings":"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","sourcesContent":["import { unstable_capitalize as capitalize } from '@mui/utils';\nimport merge from '../merge';\nimport { getPath, getStyleValue as getValue } from '../style';\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from '../breakpoints';\nimport defaultSxConfig from './defaultSxConfig';\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n    const themeMapping = getPath(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return handleBreakpoints(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig;\n\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = handleBreakpoints({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = merge(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return removeUnusedBreakpoints(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;"]},"metadata":{},"sourceType":"module"}