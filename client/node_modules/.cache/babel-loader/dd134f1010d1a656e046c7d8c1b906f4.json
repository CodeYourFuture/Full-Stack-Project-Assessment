{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar cache;\n\nif (typeof document === 'object') {\n  cache = createCache({\n    key: 'css',\n    prepend: true\n  });\n}\n\nexport default function StyledEngineProvider(props) {\n  var injectFirst = props.injectFirst,\n      children = props.children;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js"],"names":["React","PropTypes","CacheProvider","createCache","jsx","_jsx","cache","document","key","prepend","StyledEngineProvider","props","injectFirst","children","value","process","env","NODE_ENV","propTypes","node","bool"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAIC,KAAJ;;AACA,IAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkC;AAChCD,EAAAA,KAAK,GAAGH,WAAW,CAAC;AAClBK,IAAAA,GAAG,EAAE,KADa;AAElBC,IAAAA,OAAO,EAAE;AAFS,GAAD,CAAnB;AAID;;AACD,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,MACEC,WADF,GAGID,KAHJ,CACEC,WADF;AAAA,MAEEC,QAFF,GAGIF,KAHJ,CAEEE,QAFF;AAIA,SAAOD,WAAW,IAAIN,KAAf,GAAuB,aAAaD,IAAI,CAACH,aAAD,EAAgB;AAC7DY,IAAAA,KAAK,EAAER,KADsD;AAE7DO,IAAAA,QAAQ,EAAEA;AAFmD,GAAhB,CAAxC,GAGFA,QAHL;AAID;AACDE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,oBAAoB,CAACQ,SAArB,GAAiC;AACvE;AACF;AACA;AACEL,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB,IAJmD;;AAKvE;AACF;AACA;AACA;AACA;AACEP,EAAAA,WAAW,EAAEX,SAAS,CAACmB;AAVgD,CAAzE,GAWI,KAAK,CAXT","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet cache;\nif (typeof document === 'object') {\n  cache = createCache({\n    key: 'css',\n    prepend: true\n  });\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;"]},"metadata":{},"sourceType":"module"}