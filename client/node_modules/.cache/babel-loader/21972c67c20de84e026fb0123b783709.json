{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// import \"./App.css\";\n// function extractVideoId(url) {\n//   // Extract the video ID from the YouTube URL\n//   // Implement this function according to your requirements\n//   // Example implementation:\n//   const urlParts = url.split(\"/\");\n//   return urlParts[urlParts.length - 1];\n// }\n// function App() {\n//   const [videos, setVideos] = useState([\n//     {\n//       id: 1,\n//       title: \"Video 1\",\n//       url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n//       votes: 0,\n//     },\n//     {\n//       id: 2,\n//       title: \"Video 2\",\n//       url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n//       votes: 0,\n//     },\n//     {\n//       id: 3,\n//       title: \"Video 3\",\n//       url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n//       votes: 0,\n//     },\n//   ]);\n//   const handleAddVideo = (title, url) => {\n//     const videoId = extractVideoId(url);\n//     const newVideo = {\n//       id: videos.length + 1,\n//       title,\n//       url: `https://www.youtube.com/embed/${videoId}`,\n//       votes: 0,\n//     };\n//     setVideos([...videos, newVideo]);\n//   };\n//   const handleVote = (videoId, increment) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === videoId\n//           ? { ...video, votes: video.votes + increment }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemoveVideo = (videoId) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.filter((video) => video.id !== videoId)\n//     );\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <div className=\"container\">\n//         <VideoList\n//           videos={videos}\n//           handleVote={handleVote}\n//           handleRemove={handleRemoveVideo}\n//         />\n//         <AddVideoForm handleAddVideo={handleAddVideo} />\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useState } from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([{\n    id: 1,\n    title: \"Video 1\",\n    url: \"https://www.youtube.com/embed/VIDEO_ID_1\",\n    votes: 0\n  }, {\n    id: 2,\n    title: \"Video 2\",\n    url: \"https://www.youtube.com/embed/VIDEO_ID_2\",\n    votes: 0\n  }, {\n    id: 3,\n    title: \"Video 3\",\n    url: \"https://www.youtube.com/embed/VIDEO_ID_3\",\n    votes: 0\n  }]);\n\n  const handleAddVideo = (title, url) => {\n    const newVideo = {\n      id: videos.length + 1,\n      title,\n      url,\n      votes: 0\n    };\n    setVideos([...videos, newVideo]);\n  };\n\n  const handleVote = (videoId, increment) => {\n    setVideos(prevVideos => prevVideos.map(video => video.id === videoId ? { ...video,\n      votes: video.votes + increment\n    } : video));\n  };\n\n  const handleRemoveVideo = videoId => {\n    setVideos(prevVideos => prevVideos.filter(video => video.id !== videoId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Video Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(VideoList, {\n        videos: videos,\n        handleVote: handleVote,\n        handleRemove: handleRemoveVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddVideoForm, {\n        handleAddVideo: handleAddVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"42mkz+UqoxOsOteZegQeG1cPSNk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","Container","Typography","VideoList","AddVideoForm","App","videos","setVideos","id","title","url","votes","handleAddVideo","newVideo","length","handleVote","videoId","increment","prevVideos","map","video","handleRemoveVideo","filter"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// import \"./App.css\";\n\n// function extractVideoId(url) {\n//   // Extract the video ID from the YouTube URL\n//   // Implement this function according to your requirements\n//   // Example implementation:\n//   const urlParts = url.split(\"/\");\n//   return urlParts[urlParts.length - 1];\n// }\n\n// function App() {\n//   const [videos, setVideos] = useState([\n//     {\n//       id: 1,\n//       title: \"Video 1\",\n//       url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n//       votes: 0,\n//     },\n//     {\n//       id: 2,\n//       title: \"Video 2\",\n//       url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n//       votes: 0,\n//     },\n//     {\n//       id: 3,\n//       title: \"Video 3\",\n//       url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n//       votes: 0,\n//     },\n//   ]);\n\n//   const handleAddVideo = (title, url) => {\n//     const videoId = extractVideoId(url);\n//     const newVideo = {\n//       id: videos.length + 1,\n//       title,\n//       url: `https://www.youtube.com/embed/${videoId}`,\n//       votes: 0,\n//     };\n//     setVideos([...videos, newVideo]);\n//   };\n\n//   const handleVote = (videoId, increment) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === videoId\n//           ? { ...video, votes: video.votes + increment }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemoveVideo = (videoId) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.filter((video) => video.id !== videoId)\n//     );\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <div className=\"container\">\n//         <VideoList\n//           videos={videos}\n//           handleVote={handleVote}\n//           handleRemove={handleRemoveVideo}\n//         />\n//         <AddVideoForm handleAddVideo={handleAddVideo} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [videos, setVideos] = useState([\n    {\n      id: 1,\n      title: \"Video 1\",\n      url: \"https://www.youtube.com/embed/VIDEO_ID_1\",\n      votes: 0,\n    },\n    {\n      id: 2,\n      title: \"Video 2\",\n      url: \"https://www.youtube.com/embed/VIDEO_ID_2\",\n      votes: 0,\n    },\n    {\n      id: 3,\n      title: \"Video 3\",\n      url: \"https://www.youtube.com/embed/VIDEO_ID_3\",\n      votes: 0,\n    },\n  ]);\n\n  const handleAddVideo = (title, url) => {\n    const newVideo = {\n      id: videos.length + 1,\n      title,\n      url,\n      votes: 0,\n    };\n    setVideos([...videos, newVideo]);\n  };\n\n  const handleVote = (videoId, increment) => {\n    setVideos((prevVideos) =>\n      prevVideos.map((video) =>\n        video.id === videoId ? { ...video, votes: video.votes + increment } : video\n      )\n    );\n  };\n\n  const handleRemoveVideo = (videoId) => {\n    setVideos((prevVideos) => prevVideos.filter((video) => video.id !== videoId));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Typography variant=\"h3\">Video Recommendation</Typography>\n      </header>\n      <Container>\n        <VideoList\n          videos={videos}\n          handleVote={handleVote}\n          handleRemove={handleRemoveVideo}\n        />\n        <AddVideoForm handleAddVideo={handleAddVideo} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}