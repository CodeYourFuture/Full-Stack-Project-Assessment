{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge');\n\nvar parseUrl = require('parseurl');\n\nvar qs = require('qs');\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options);\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/express/lib/middleware/query.js"],"names":["merge","require","parseUrl","qs","module","exports","query","options","opts","queryparse","parse","undefined","allowPrototypes","req","res","next","val"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACvC,MAAIC,IAAI,GAAGR,KAAK,CAAC,EAAD,EAAKO,OAAL,CAAhB;AACA,MAAIE,UAAU,GAAGN,EAAE,CAACO,KAApB;;AAEA,MAAI,OAAOH,OAAP,KAAmB,UAAvB,EAAmC;AACjCE,IAAAA,UAAU,GAAGF,OAAb;AACAC,IAAAA,IAAI,GAAGG,SAAP;AACD;;AAED,MAAIH,IAAI,KAAKG,SAAT,IAAsBH,IAAI,CAACI,eAAL,KAAyBD,SAAnD,EAA8D;AAC5D;AACAH,IAAAA,IAAI,CAACI,eAAL,GAAuB,IAAvB;AACD;;AAED,SAAO,SAASN,KAAT,CAAeO,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8B;AACnC,QAAI,CAACF,GAAG,CAACP,KAAT,EAAgB;AACd,UAAIU,GAAG,GAAGd,QAAQ,CAACW,GAAD,CAAR,CAAcP,KAAxB;AACAO,MAAAA,GAAG,CAACP,KAAJ,GAAYG,UAAU,CAACO,GAAD,EAAMR,IAAN,CAAtB;AACD;;AAEDO,IAAAA,IAAI;AACL,GAPD;AAQD,CAtBD","sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n"]},"metadata":{},"sourceType":"script"}