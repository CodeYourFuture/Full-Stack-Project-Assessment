{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"checked\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSwitch } from '../useSwitch';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var checked = ownerState.checked,\n      disabled = ownerState.disabled,\n      focusVisible = ownerState.focusVisible,\n      readOnly = ownerState.readOnly;\n  var slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    thumb: ['thumb'],\n    input: ['input'],\n    track: ['track']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSwitchUtilityClass));\n};\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switch](https://mui.com/base-ui/react-switch/)\n *\n * API:\n *\n * - [Switch API](https://mui.com/base-ui/react-switch/components-api/#switch)\n */\n\n\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, forwardedRef) {\n  var _slots$root, _slots$thumb, _slots$input, _slots$track;\n\n  var checkedProp = props.checked,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      readOnlyProp = props.readOnly,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    disabled: disabledProp,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    onFocusVisible: onFocusVisible,\n    readOnly: readOnlyProp\n  };\n\n  var _useSwitch = useSwitch(useSwitchProps),\n      getInputProps = _useSwitch.getInputProps,\n      checked = _useSwitch.checked,\n      disabled = _useSwitch.disabled,\n      focusVisible = _useSwitch.focusVisible,\n      readOnly = _useSwitch.readOnly;\n\n  var ownerState = _extends({}, props, {\n    checked: checked,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    readOnly: readOnly\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var Root = (_slots$root = slots.root) != null ? _slots$root : 'span';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var Thumb = (_slots$thumb = slots.thumb) != null ? _slots$thumb : 'span';\n  var thumbProps = useSlotProps({\n    elementType: Thumb,\n    externalSlotProps: slotProps.thumb,\n    ownerState: ownerState,\n    className: classes.thumb\n  });\n  var Input = (_slots$input = slots.input) != null ? _slots$input : 'input';\n  var inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: getInputProps,\n    externalSlotProps: slotProps.input,\n    ownerState: ownerState,\n    className: classes.input\n  });\n  var Track = slots.track === null ? function () {\n    return null;\n  } : (_slots$track = slots.track) != null ? _slots$track : 'span';\n  var trackProps = useSlotProps({\n    elementType: Track,\n    externalSlotProps: slotProps.track,\n    ownerState: ownerState,\n    className: classes.track\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  })\n} : void 0;\nexport { Switch };","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/Switch/Switch.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_composeClasses","composeClasses","useSwitch","useSlotProps","useClassNamesOverride","getSwitchUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","focusVisible","readOnly","slots","root","thumb","input","track","Switch","forwardRef","props","forwardedRef","_slots$root","_slots$thumb","_slots$input","_slots$track","checkedProp","defaultChecked","disabledProp","onBlur","onChange","onFocus","onFocusVisible","readOnlyProp","slotProps","other","useSwitchProps","getInputProps","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","Thumb","thumbProps","Input","inputProps","getSlotProps","Track","trackProps","children","process","env","NODE_ENV","propTypes","bool","string","func","required","shape","oneOfType","object","oneOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSwitch } from '../useSwitch';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    thumb: ['thumb'],\n    input: ['input'],\n    track: ['track']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSwitchUtilityClass));\n};\n\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switch](https://mui.com/base-ui/react-switch/)\n *\n * API:\n *\n * - [Switch API](https://mui.com/base-ui/react-switch/components-api/#switch)\n */\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, forwardedRef) {\n  var _slots$root, _slots$thumb, _slots$input, _slots$track;\n  const {\n      checked: checkedProp,\n      defaultChecked,\n      disabled: disabledProp,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly: readOnlyProp,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(useSwitchProps);\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Thumb = (_slots$thumb = slots.thumb) != null ? _slots$thumb : 'span';\n  const thumbProps = useSlotProps({\n    elementType: Thumb,\n    externalSlotProps: slotProps.thumb,\n    ownerState,\n    className: classes.thumb\n  });\n  const Input = (_slots$input = slots.input) != null ? _slots$input : 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: getInputProps,\n    externalSlotProps: slotProps.input,\n    ownerState,\n    className: classes.input\n  });\n  const Track = slots.track === null ? () => null : (_slots$track = slots.track) != null ? _slots$track : 'span';\n  const trackProps = useSlotProps({\n    elementType: Track,\n    externalSlotProps: slotProps.track,\n    ownerState,\n    className: classes.track\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  })\n} : void 0;\nexport { Switch };"]},"metadata":{},"sourceType":"module"}