{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([{\n    id: \"video1\",\n    votes: 0\n  }, {\n    id: \"video2\",\n    votes: 0\n  }, {\n    id: \"video3\",\n    votes: 0\n  }]);\n  const [url, setUrl] = useState(\"\");\n\n  const handleInputChange = e => {\n    setUrl(e.target.value);\n  };\n\n  const handleAddVideo = () => {\n    if (url.trim() !== \"\") {\n      const videoId = extractVideoId(url);\n\n      if (videoId) {\n        setVideos([...videos, {\n          id: videoId,\n          votes: 0\n        }]);\n        setUrl(\"\");\n      }\n    }\n  };\n\n  const handleRemoveVideo = index => {\n    const updatedVideos = [...videos];\n    updatedVideos.splice(index, 1);\n    setVideos(updatedVideos);\n  };\n\n  const handleVote = (index, type) => {\n    const updatedVideos = [...videos];\n\n    if (type === \"up\") {\n      updatedVideos[index].votes += 1;\n    } else if (type === \"down\") {\n      updatedVideos[index].votes -= 1;\n    }\n\n    setVideos(updatedVideos);\n  };\n\n  const extractVideoId = url => {\n    const regex = /(?:youtu.be\\/|youtube(?:-nocookie)?.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([^?&\\s]+)/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list-container\",\n      children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: `Video ${index + 1}`,\n          width: \"560\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${video.id}`,\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveVideo(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(index, \"up\"),\n            children: \"Vote Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(index, \"down\"),\n            children: \"Vote Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Votes: \", video.votes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter video URL\",\n        value: url,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddVideo,\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jFhLqfeLjpdwIzABJSHS921NnmQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","App","videos","setVideos","id","votes","url","setUrl","handleInputChange","e","target","value","handleAddVideo","trim","videoId","extractVideoId","handleRemoveVideo","index","updatedVideos","splice","handleVote","type","regex","match","map","video"],"mappings":"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","sourcesContent":["// App.js\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([\n    { id: \"video1\", votes: 0 },\n    { id: \"video2\", votes: 0 },\n    { id: \"video3\", votes: 0 },\n  ]);\n  const [url, setUrl] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setUrl(e.target.value);\n  };\n\n  const handleAddVideo = () => {\n    if (url.trim() !== \"\") {\n      const videoId = extractVideoId(url);\n      if (videoId) {\n        setVideos([...videos, { id: videoId, votes: 0 }]);\n        setUrl(\"\");\n      }\n    }\n  };\n\n  const handleRemoveVideo = (index) => {\n    const updatedVideos = [...videos];\n    updatedVideos.splice(index, 1);\n    setVideos(updatedVideos);\n  };\n\n  const handleVote = (index, type) => {\n    const updatedVideos = [...videos];\n    if (type === \"up\") {\n      updatedVideos[index].votes += 1;\n    } else if (type === \"down\") {\n      updatedVideos[index].votes -= 1;\n    }\n    setVideos(updatedVideos);\n  };\n\n  const extractVideoId = (url) => {\n    const regex =\n      /(?:youtu.be\\/|youtube(?:-nocookie)?.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([^?&\\s]+)/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Video Player</h1>\n\n      <div className=\"video-list-container\">\n        {videos.map((video, index) => (\n          <div className=\"video-item\" key={video.id}>\n            <iframe\n              title={`Video ${index + 1}`}\n              width=\"560\"\n              height=\"315\"\n              src={`https://www.youtube.com/embed/${video.id}`}\n              frameBorder=\"0\"\n              allowFullScreen\n            ></iframe>\n            <div className=\"video-actions\">\n              <button onClick={() => handleRemoveVideo(index)}>Remove</button>\n              <button onClick={() => handleVote(index, \"up\")}>Vote Up</button>\n              <button onClick={() => handleVote(index, \"down\")}>\n                Vote Down\n              </button>\n              <span>Votes: {video.votes}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"add-video-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter video URL\"\n          value={url}\n          onChange={handleInputChange}\n        />\n        <button onClick={handleAddVideo}>Add Video</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}