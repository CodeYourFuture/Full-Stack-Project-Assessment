{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GlobalStyles(_ref) {\n  var styles = _ref.styles,\n      themeId = _ref.themeId,\n      _ref$defaultTheme = _ref.defaultTheme,\n      defaultTheme = _ref$defaultTheme === void 0 ? {} : _ref$defaultTheme;\n  var upperTheme = useTheme(defaultTheme);\n  var globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  styles: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js"],"names":["React","PropTypes","GlobalStyles","MuiGlobalStyles","useTheme","jsx","_jsx","styles","themeId","defaultTheme","upperTheme","globalStyles","process","env","NODE_ENV","propTypes","object","oneOfType","array","func","number","string","bool"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAY,IAAIC,eAAzB,QAAgD,oBAAhD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,SAASJ,YAAT,OAIG;AAAA,MAHDK,MAGC,QAHDA,MAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,+BADDC,YACC;AAAA,MADDA,YACC,kCADc,EACd;AACD,MAAMC,UAAU,GAAGN,QAAQ,CAACK,YAAD,CAA3B;AACA,MAAME,YAAY,GAAG,OAAOJ,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACC,OAAO,GAAGE,UAAU,CAACF,OAAD,CAAV,IAAuBE,UAA1B,GAAuCA,UAA/C,CAArC,GAAkGH,MAAvH;AACA,SAAO,aAAaD,IAAI,CAACH,eAAD,EAAkB;AACxCI,IAAAA,MAAM,EAAEI;AADgC,GAAlB,CAAxB;AAGD;;AACDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,YAAY,CAACa;AAAU;AAAvB,EAAgD;AACtF;AACA;AACA;AACA;;AACA;AACF;AACA;AACEN,EAAAA,YAAY,EAAER,SAAS,CAACe,MAR8D;;AAStF;AACF;AACA;AACET,EAAAA,MAAM,EAAEN;AAAU;AAAD,GAAuCgB,SAAhD,CAA0D,CAAChB,SAAS,CAACiB,KAAX,EAAkBjB,SAAS,CAACkB,IAA5B,EAAkClB,SAAS,CAACmB,MAA5C,EAAoDnB,SAAS,CAACe,MAA9D,EAAsEf,SAAS,CAACoB,MAAhF,EAAwFpB,SAAS,CAACqB,IAAlG,CAA1D,CAZ8E;;AAatF;AACF;AACA;AACEd,EAAAA,OAAO,EAAEP,SAAS,CAACoB;AAhBmE,CAAxF,GAiBI,KAAK,CAjBT;AAkBA,eAAenB,YAAf","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;"]},"metadata":{},"sourceType":"module"}