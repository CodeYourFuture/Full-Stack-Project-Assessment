{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"onItemsChange\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { useMenu } from '../useMenu';\nimport { MenuProvider } from '../useMenu/MenuProvider';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Popper } from '../Popper';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListActionTypes } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', open && 'expanded'],\n    listbox: ['listbox', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuUtilityClass));\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Menu API](https://mui.com/base-ui/react-menu/components-api/#menu)\n */\n\n\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(props, forwardedRef) {\n  var _slots$root, _slots$listbox;\n\n  const {\n    actions,\n    children,\n    onItemsChange,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    contextValue,\n    getListboxProps,\n    dispatch,\n    open,\n    triggerElement\n  } = useMenu({\n    onItemsChange\n  });\n  React.useImperativeHandle(actions, () => ({\n    dispatch,\n    resetHighlight: () => dispatch({\n      type: ListActionTypes.resetHighlight,\n      event: null\n    })\n  }), [dispatch]);\n\n  const ownerState = _extends({}, props, {\n    open\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef,\n      role: undefined\n    },\n    className: classes.root,\n    ownerState\n  });\n  const Listbox = (_slots$listbox = slots.listbox) != null ? _slots$listbox : 'ul';\n  const listboxProps = useSlotProps({\n    elementType: Listbox,\n    getSlotProps: getListboxProps,\n    externalSlotProps: slotProps.listbox,\n    className: classes.listbox,\n    ownerState\n  });\n\n  if (open === true && triggerElement == null) {\n    return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(Listbox, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(MenuProvider, {\n          value: contextValue,\n          children: children\n        })\n      }))\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(Popper, _extends({}, rootProps, {\n    open: open,\n    anchorEl: triggerElement,\n    slots: {\n      root: Root\n    },\n    children: /*#__PURE__*/_jsx(Listbox, _extends({}, listboxProps, {\n      children: /*#__PURE__*/_jsx(MenuProvider, {\n        value: contextValue,\n        children: children\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref with imperative actions that can be performed on the menu.\n   */\n  actions: refType,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Function called when the items displayed in the menu change.\n   */\n  onItemsChange: PropTypes.func,\n\n  /**\n   * The props used for each slot inside the Menu.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Menu.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Menu };","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/Menu/Menu.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","refType","getMenuUtilityClass","useMenu","MenuProvider","unstable_composeClasses","composeClasses","Popper","useSlotProps","useClassNamesOverride","ListActionTypes","jsx","_jsx","useUtilityClasses","ownerState","open","slots","root","listbox","Menu","forwardRef","props","forwardedRef","_slots$root","_slots$listbox","actions","children","onItemsChange","slotProps","other","contextValue","getListboxProps","dispatch","triggerElement","useImperativeHandle","resetHighlight","type","event","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","role","undefined","className","Listbox","listboxProps","getSlotProps","value","anchorEl","process","env","NODE_ENV","propTypes","node","string","func","shape","oneOfType","object"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"onItemsChange\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { useMenu } from '../useMenu';\nimport { MenuProvider } from '../useMenu/MenuProvider';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Popper } from '../Popper';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListActionTypes } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', open && 'expanded'],\n    listbox: ['listbox', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuUtilityClass));\n}\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Menu API](https://mui.com/base-ui/react-menu/components-api/#menu)\n */\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(props, forwardedRef) {\n  var _slots$root, _slots$listbox;\n  const {\n      actions,\n      children,\n      onItemsChange,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    contextValue,\n    getListboxProps,\n    dispatch,\n    open,\n    triggerElement\n  } = useMenu({\n    onItemsChange\n  });\n  React.useImperativeHandle(actions, () => ({\n    dispatch,\n    resetHighlight: () => dispatch({\n      type: ListActionTypes.resetHighlight,\n      event: null\n    })\n  }), [dispatch]);\n  const ownerState = _extends({}, props, {\n    open\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef,\n      role: undefined\n    },\n    className: classes.root,\n    ownerState\n  });\n  const Listbox = (_slots$listbox = slots.listbox) != null ? _slots$listbox : 'ul';\n  const listboxProps = useSlotProps({\n    elementType: Listbox,\n    getSlotProps: getListboxProps,\n    externalSlotProps: slotProps.listbox,\n    className: classes.listbox,\n    ownerState\n  });\n  if (open === true && triggerElement == null) {\n    return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(Listbox, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(MenuProvider, {\n          value: contextValue,\n          children: children\n        })\n      }))\n    }));\n  }\n  return /*#__PURE__*/_jsx(Popper, _extends({}, rootProps, {\n    open: open,\n    anchorEl: triggerElement,\n    slots: {\n      root: Root\n    },\n    children: /*#__PURE__*/_jsx(Listbox, _extends({}, listboxProps, {\n      children: /*#__PURE__*/_jsx(MenuProvider, {\n        value: contextValue,\n        children: children\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref with imperative actions that can be performed on the menu.\n   */\n  actions: refType,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Function called when the items displayed in the menu change.\n   */\n  onItemsChange: PropTypes.func,\n  /**\n   * The props used for each slot inside the Menu.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Menu.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Menu };"]},"metadata":{},"sourceType":"module"}