{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx\";\n//import VideosList from \"./VideosList\";\n// function Video(props) {\n//   const videoId = getVideoIdFromUrl(props.videoObj.url);\n//   return (\n//     <div className=\"cardContainer\">\n//       <div className=\"videoCard\" >\n//         <h2 className=\"card-title\">{props.videoObj.title}</h2>\n//         <iframe\n//           width=\"100%\"\n//           height=\"315\"\n//           src={`https://www.youtube.com/embed/${videoId}`}\n//           title=\"YouTube video player\"\n//         ></iframe>\n//         <p>requested at </p>\n//         <div className=\"btnCounter\">\n//           <button type=\"button\" className=\"btn btn-success\">\n//             +\n//           </button>\n//           <p>Vote: </p>\n//           <button  type=\"button\" className=\"btn btn-danger\">\n//             -\n//           </button>\n//           <button  type=\"button\" className=\"btn btn-danger\">\n//             Delete\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Video;\n// export default Video;\n// function getVideoIdFromUrl(url) {\n//   const videoId = url.split(\"v=\")[1];\n//   return videoId;\n// }\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Video() {\n  const videos = exampleResponse; // Assuming exampleResponse contains your video data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"100%\",\n            height: \"200\",\n            src: `https://www.youtube.com/embed/${video.videoId}`,\n            title: \"YouTube video player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Video;\nexport default VideoPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx"],"names":["React","Video","videos","exampleResponse","map","video","index","title","videoId","VideoPlay"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,MAAM,GAAGC,eAAf,CADe,CACiB;;AAEhC,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCAEE;AAAA,sBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,MAAM,EAAC,KAFT;AAGE,YAAA,GAAG,EAAG,iCAAgCF,KAAK,CAACG,OAAQ,EAHtD;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA+BF,KAA/B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;KAxBQL,K;AA0BT,eAAeQ,SAAf","sourcesContent":["//import VideosList from \"./VideosList\";\n// function Video(props) {\n//   const videoId = getVideoIdFromUrl(props.videoObj.url);\n//   return (\n//     <div className=\"cardContainer\">\n//       <div className=\"videoCard\" >\n//         <h2 className=\"card-title\">{props.videoObj.title}</h2>\n//         <iframe\n//           width=\"100%\"\n//           height=\"315\"\n//           src={`https://www.youtube.com/embed/${videoId}`}\n//           title=\"YouTube video player\"\n\n//         ></iframe>\n//         <p>requested at </p>\n\n//         <div className=\"btnCounter\">\n//           <button type=\"button\" className=\"btn btn-success\">\n//             +\n//           </button>\n//           <p>Vote: </p>\n//           <button  type=\"button\" className=\"btn btn-danger\">\n//             -\n//           </button>\n//           <button  type=\"button\" className=\"btn btn-danger\">\n//             Delete\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Video;\n\n\n// export default Video;\n// function getVideoIdFromUrl(url) {\n//   const videoId = url.split(\"v=\")[1];\n//   return videoId;\n// }\nimport React from 'react';\n\nfunction Video() {\n  const videos = exampleResponse; // Assuming exampleResponse contains your video data\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        {videos.map((video, index) => (\n          <div className=\"col-md-4\" key={index}>\n            <div className=\"video-card\">\n              {/* Display your video content here */}\n              <h5>{video.title}</h5>\n              <iframe\n                width=\"100%\"\n                height=\"200\"\n                src={`https://www.youtube.com/embed/${video.videoId}`}\n                title=\"YouTube video player\"\n\n              ></iframe>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default VideoPlay;\n"]},"metadata":{},"sourceType":"module"}