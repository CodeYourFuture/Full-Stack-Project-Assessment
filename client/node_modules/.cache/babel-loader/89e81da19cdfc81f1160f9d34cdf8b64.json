{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onura\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\components\\\\addvideo\\\\AddVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './AddVideo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddVideo(_ref) {\n  _s();\n\n  let {\n    handleAddVideo\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Form submitted\");\n\n    if (title.trim() === \"\" || !isValidUrl(url)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          url\n        })\n      });\n\n      if (response.ok) {\n        setTitle(\"\");\n        setUrl(\"\");\n      } else {\n        console.error(\"Error adding video:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n    }\n  };\n\n  const isValidUrl = url => {\n    return url.trim() !== \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVideo, \"2XkSbuFLNK1LOX3PsOenYC/bPt8=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/src/components/addvideo/AddVideo.js"],"names":["React","useState","AddVideo","handleAddVideo","title","setTitle","url","setUrl","handleSubmit","e","preventDefault","console","log","trim","isValidUrl","response","fetch","method","headers","body","JSON","stringify","ok","error","statusText","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;;AAGA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAIR,KAAK,CAACS,IAAN,OAAiB,EAAjB,IAAuB,CAACC,UAAU,CAACR,GAAD,CAAtC,EAA6C;AAC3C;AACD;;AAED,QAAI;AACF,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,wBAAF,EAA2B;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF4C;AAKrDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjB,UAAAA,KAAF;AAASE,UAAAA;AAAT,SAAf;AAL+C,OAA3B,CAA5B;;AAQA,UAAIS,QAAQ,CAACO,EAAb,EAAiB;AACfjB,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,MAAM,CAAC,EAAD,CAAN;AACD,OAHD,MAGO;AACLI,QAAAA,OAAO,CAACY,KAAR,CAAc,qBAAd,EAAqCR,QAAQ,CAACS,UAA9C;AACD;AACF,KAfD,CAeE,OAAOD,KAAP,EAAc;AACdZ,MAAAA,OAAO,CAACY,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,GAzBD;;AA2BA,QAAMT,UAAU,GAAIR,GAAD,IAAS;AAC1B,WAAOA,GAAG,CAACO,IAAJ,OAAe,EAAtB;AACD,GAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEJ,KAHT;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEpB,GAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,MAAM,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAhEQxB,Q;;KAAAA,Q;AAkET,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './AddVideo.css';\r\n\r\nfunction AddVideo({ handleAddVideo }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n  \r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      console.log(\"Form submitted\");\r\n      if (title.trim() === \"\" || !isValidUrl(url)) {\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        const response = await fetch(`http://localhost:5000/`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ title, url }),\r\n        });\r\n  \r\n        if (response.ok) {\r\n          setTitle(\"\");\r\n          setUrl(\"\");\r\n        } else {\r\n          console.error(\"Error adding video:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding video:\", error);\r\n      }\r\n    };\r\n  \r\n    const isValidUrl = (url) => {\r\n      return url.trim() !== \"\";\r\n    };\r\n\r\n  return (\r\n    <div className=\"add-video-container\">\r\n      <h2>Add a Video</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Title:</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>URL:</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Add Video\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddVideo;"]},"metadata":{},"sourceType":"module"}