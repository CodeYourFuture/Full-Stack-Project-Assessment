{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref, ref) => {\n  let {\n    as: Component = 'div',\n    className,\n    type = 'valid',\n    tooltip = false,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n  });\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/Feedback.js"],"names":["classNames","React","PropTypes","jsx","_jsx","propTypes","type","string","tooltip","bool","as","elementType","Feedback","forwardRef","ref","Component","className","props","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,SAAS,GAAG;AAChB;AACF;AACA;AACA;AACA;AACEC,EAAAA,IAAI,EAAEJ,SAAS,CAACK,MANA;;AAOhB;AACAC,EAAAA,OAAO,EAAEN,SAAS,CAACO,IARH;AAShBC,EAAAA,EAAE,EAAER,SAAS,CAACS;AATE,CAAlB;AAWA,MAAMC,QAAQ,GAAG,aAAaX,KAAK,CAACY,UAAN,EAC9B;AACA,OAMGC,GANH;AAAA,MAAC;AACCJ,IAAAA,EAAE,EAAEK,SAAS,GAAG,KADjB;AAECC,IAAAA,SAFD;AAGCV,IAAAA,IAAI,GAAG,OAHR;AAICE,IAAAA,OAAO,GAAG,KAJX;AAKC,OAAGS;AALJ,GAAD;AAAA,SAMW,aAAab,IAAI,CAACW,SAAD,EAAY,EACtC,GAAGE,KADmC;AAEtCH,IAAAA,GAAG,EAAEA,GAFiC;AAGtCE,IAAAA,SAAS,EAAEhB,UAAU,CAACgB,SAAD,EAAa,GAAEV,IAAK,IAAGE,OAAO,GAAG,SAAH,GAAe,UAAW,EAAxD;AAHiB,GAAZ,CAN5B;AAAA,CAF8B,CAA9B;AAaAI,QAAQ,CAACM,WAAT,GAAuB,UAAvB;AACAN,QAAQ,CAACP,SAAT,GAAqBA,SAArB;AACA,eAAeO,QAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;"]},"metadata":{},"sourceType":"module"}