{"ast":null,"code":"'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @param {?Object} response The response object\r\n *\r\n * @returns {*} The resulting transformed data\r\n */\n\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n  headers.normalize();\n  return data;\n}","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/axios/lib/core/transformData.js"],"names":["utils","defaults","AxiosHeaders","transformData","fns","response","config","context","headers","from","data","forEach","transform","fn","call","normalize","status","undefined"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,QAA5B,EAAsC;AACnD,QAAMC,MAAM,GAAG,QAAQL,QAAvB;AACA,QAAMM,OAAO,GAAGF,QAAQ,IAAIC,MAA5B;AACA,QAAME,OAAO,GAAGN,YAAY,CAACO,IAAb,CAAkBF,OAAO,CAACC,OAA1B,CAAhB;AACA,MAAIE,IAAI,GAAGH,OAAO,CAACG,IAAnB;AAEAV,EAAAA,KAAK,CAACW,OAAN,CAAcP,GAAd,EAAmB,SAASQ,SAAT,CAAmBC,EAAnB,EAAuB;AACxCH,IAAAA,IAAI,GAAGG,EAAE,CAACC,IAAH,CAAQR,MAAR,EAAgBI,IAAhB,EAAsBF,OAAO,CAACO,SAAR,EAAtB,EAA2CV,QAAQ,GAAGA,QAAQ,CAACW,MAAZ,GAAqBC,SAAxE,CAAP;AACD,GAFD;AAIAT,EAAAA,OAAO,CAACO,SAAR;AAEA,SAAOL,IAAP;AACD","sourcesContent":["'use strict';\r\n\r\nimport utils from './../utils.js';\r\nimport defaults from '../defaults/index.js';\r\nimport AxiosHeaders from '../core/AxiosHeaders.js';\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @param {?Object} response The response object\r\n *\r\n * @returns {*} The resulting transformed data\r\n */\r\nexport default function transformData(fns, response) {\r\n  const config = this || defaults;\r\n  const context = response || config;\r\n  const headers = AxiosHeaders.from(context.headers);\r\n  let data = context.data;\r\n\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\r\n  });\r\n\r\n  headers.normalize();\r\n\r\n  return data;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}