{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Video(prop) {\n  const videoId = getVideoIdFromUrl(prop.videoObj.url);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h5 className=\"videoTitle\">{prop.videoObj.title}</h5>\n    //   <iframe\n    //     width=\"100%\"\n    //     height=\"200\"\n    //     src={`https://www.youtube.com/embed/${videoId}`}\n    //     title=\"YouTube video player\"\n    //   ></iframe>\n    //   <p>Res</p>\n    //   <div className=\"btnCounter\">\n    //     <button type=\"button\"> &#128077; </button>\n    //     <p>{prop.videoObj.rating} </p>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#128078;\n    //     </button>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#xF5DE;\n    //     </button>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `https://www.youtube.com/embed/${videoId}`,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        title: \"YouTube video player\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          children: prop.videoObj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: \"Re\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            children: \" \\uD83D\\uDC4D \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [prop.videoObj.rating, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-warning\",\n            children: \" \\uD83D\\uDC4E \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-trash-o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = Video;\nexport default Video;\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx"],"names":["React","Video","prop","videoId","getVideoIdFromUrl","videoObj","url","title","rating","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,QAAMC,OAAO,GAAGC,iBAAiB,CAACF,IAAI,CAACG,QAAL,CAAcC,GAAf,CAAjC;AACA;AAAA;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AACE,QAAA,GAAG,EAAG,iCAAgCH,OAAQ,EADhD;AAEE,QAAA,WAAW,EAAC,GAFd;AAGE,QAAA,KAAK,EAAC,yEAHR;AAIE,QAAA,KAAK,EAAC,sBAJR;AAKE,QAAA,eAAe;AALjB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,YAAV;AAAA,oBAAwBD,IAAI,CAACG,QAAL,CAAcE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uBAAIL,IAAI,CAACG,QAAL,CAAcG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,gBAA5B;AAAA,mCACE;AAAG,cAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBF;AA8CD;;KAhDQP,K;AAiDT,eAAeA,KAAf;;AACA,SAASG,iBAAT,CAA2BE,GAA3B,EAAgC;AAC9B,QAAMH,OAAO,GAAGG,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,SAAON,OAAP;AACD","sourcesContent":["import React from \"react\";\n\nfunction Video(prop) {\n  const videoId = getVideoIdFromUrl(prop.videoObj.url);\n  return (\n    // <div>\n\n    //   <h5 className=\"videoTitle\">{prop.videoObj.title}</h5>\n    //   <iframe\n    //     width=\"100%\"\n    //     height=\"200\"\n    //     src={`https://www.youtube.com/embed/${videoId}`}\n    //     title=\"YouTube video player\"\n    //   ></iframe>\n    //   <p>Res</p>\n    //   <div className=\"btnCounter\">\n\n    //     <button type=\"button\"> &#128077; </button>\n    //     <p>{prop.videoObj.rating} </p>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#128078;\n    //     </button>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#xF5DE;\n    //     </button>\n    //   </div>\n    // </div>\n\n    <div class=\"card\">\n      <iframe\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        title=\"YouTube video player\"\n        allowfullscreen\n      ></iframe>\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{prop.videoObj.title}</h5>\n        <p class=\"card-text\">Re</p>\n        <div className=\"buttons\">\n          <button type=\"button\" class=\"btn btn-primary\"> &#128077; </button>\n          <p>{prop.videoObj.rating} </p>\n          <button type=\"button\" class=\"btn btn-warning\"> &#128078; </button>\n          <button type=\"button\" class=\"btn btn-danger\">\n            <i class=\"fa fa-trash-o\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Video;\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n"]},"metadata":{},"sourceType":"module"}