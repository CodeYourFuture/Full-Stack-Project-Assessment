{"ast":null,"code":"var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\nfunction _getPrimes() {\n  if (primes !== null) return primes;\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++) if (k % res[j] === 0) break;\n    if (i !== j && res[j] <= sqrt) continue;\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n  for (var i = 0; i < primes.length; i++) if (p.modn(primes[i]) === 0) {\n    if (p.cmpn(primes[i]) === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n  var num, n2;\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n}","map":{"version":3,"names":["randomBytes","require","module","exports","findPrime","simpleSieve","fermatTest","BN","TWENTYFOUR","MillerRabin","millerRabin","ONE","TWO","FIVE","SIXTEEN","EIGHT","TEN","THREE","SEVEN","ELEVEN","FOUR","TWELVE","primes","_getPrimes","limit","res","i","k","sqrt","Math","ceil","j","p","length","modn","cmpn","red","mont","toRed","redPow","subn","fromRed","bits","gen","num","n2","bitLength","ishrn","isEven","iadd","testn","cmp","mod","shrn","test"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/diffie-hellman/lib/generatePrime.js"],"sourcesContent":["var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}