{"ast":null,"code":"var _jsxFileName = \"/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/AddVideoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddVideoForm = _ref => {\n  _s();\n\n  let {\n    onAddVideo\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleCancel = () => {\n    setTitle('');\n    setUrl('');\n  }; // const handleAddVideo = (e) => {\n  //   e.preventDefault();\n  //   if (title && url) {\n  //     onAddVideo({ title, url });\n  //     setTitle('');\n  //     setUrl('');\n  //   }\n  //   // const newInput = {\n  //   //   title: title,\n  //   //   url: url\n  //   // };\n  //   // onAddVideo(newInput);\n  //   // setTitle(\"\");\n  //   // setUrl(\"\");\n  // }\n\n\n  const validateUrl = url => {\n    // Simple validation for YouTube URLs\n    return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+$/.test(url);\n  };\n\n  const handleAddVideo = () => {\n    if (title.trim() === '') {\n      setErrorMessage('Please enter a title');\n      return;\n    }\n\n    if (!validateUrl(url)) {\n      setErrorMessage('Please enter a valid YouTube URL');\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      // Generate a unique ID\n      title: title,\n      url: url,\n      rating: video.rati\n    };\n    onAddVideo(newVideo);\n    setTitle('');\n    setUrl('');\n    setErrorMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"0#\",\n        className: \"addVideo\",\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddVideo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"err-p\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            value: url,\n            onChange: e => setUrl(e.target.value),\n            placeholder: \"Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cancel-add-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning input\",\n            type: \"submit\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success input\",\n            type: \"submit\",\n            onClick: handleAddVideo,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-input\",\n            type: \"text\",\n            name: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddVideoForm, \"LwqGU5Os1QJg43xH8MfLSylsuNo=\");\n\n_c = AddVideoForm;\nexport default AddVideoForm; // import React, { useState } from 'react';\n// const AddVideoForm = ({ onAddVideo }) => {\n//   const [title, setTitle] = useState('');\n//   const [url, setUrl] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const handleTitleChange = (event) => {\n//     setTitle(event.target.value);\n//   };\n//   const handleUrlChange = (event) => {\n//     setUrl(event.target.value);\n//   };\n//   const validateUrl = (url) => {\n//     // Simple validation for YouTube URLs\n//     return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+$/.test(url);\n//   };\n//   const handleAddVideo = () => {\n//     if (title.trim() === '') {\n//       setErrorMessage('Please enter a title');\n//       return;\n//     }\n//     if (!validateUrl(url)) {\n//       setErrorMessage('Please enter a valid YouTube URL');\n//       return;\n//     }\n//     const newVideo = {\n//       id: Date.now(), // Generate a unique ID\n//       title: title,\n//       url: url,\n//       rating: 0,\n//     };\n//     onAddVideo(newVideo);\n//     setTitle('');\n//     setUrl('');\n//     setErrorMessage('');\n//   };\n//   return (\n//     <div>\n//       <h3>Add a New Video</h3>\n//       <input type=\"text\" placeholder=\"Title\" value={title} onChange={handleTitleChange} />\n//       <input type=\"text\" placeholder=\"URL\" value={url} onChange={handleUrlChange} />\n//       <button onClick={handleAddVideo}>Add Video</button>\n//       {errorMessage && <p>{errorMessage}</p>}\n//     </div>\n//   );\n// };\n// export default AddVideoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideoForm\");","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/AddVideoForm.jsx"],"names":["React","useState","AddVideoForm","onAddVideo","title","setTitle","url","setUrl","errorMessage","setErrorMessage","handleCancel","validateUrl","test","handleAddVideo","trim","newVideo","id","Date","now","rating","video","rati","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst AddVideoForm = ({ onAddVideo }) => {\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n    const handleCancel = () => {\n    setTitle('');\n    setUrl('');\n  };\n\n  // const handleAddVideo = (e) => {\n  //   e.preventDefault();\n  //   if (title && url) {\n  //     onAddVideo({ title, url });\n  //     setTitle('');\n  //     setUrl('');\n  //   }\n  //   // const newInput = {\n  //   //   title: title,\n  //   //   url: url\n  //   // };\n  //   // onAddVideo(newInput);\n  //   // setTitle(\"\");\n  //   // setUrl(\"\");\n\n  // }\n\n    const validateUrl = (url) => {\n    // Simple validation for YouTube URLs\n    return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+$/.test(url);\n  };\n\n  const handleAddVideo = () => {\n    if (title.trim() === '') {\n      setErrorMessage('Please enter a title');\n      return;\n    }\n\n    if (!validateUrl(url)) {\n      setErrorMessage('Please enter a valid YouTube URL');\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(), // Generate a unique ID\n      title: title,\n      url: url,\n      rating: video.rati,\n    };\n    onAddVideo(newVideo);\n    setTitle('');\n    setUrl('');\n    setErrorMessage('');\n  };\n\n  return (\n    <>\n    <div className=\"add-video-form\">\n      <a href='0#' className='addVideo'>Add Video</a>\n\n      <form onSubmit={handleAddVideo}>\n          <div className='title'>\n          <span>Title</span>\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder='Title' />\n          {errorMessage && <p className='err-p' >{errorMessage}</p>}\n          </div>\n\n          <div className='url'>\n          <span>URL</span>\n          <input type=\"url\" value={url} onChange={(e) => setUrl(e.target.value)} placeholder='Url' />\n          </div>  \n        \n        <div className='cancel-add-btn'>\n        <button className='btn btn-warning input' type=\"submit\" onClick={handleCancel}>Cancel</button>\n        <button className='btn btn-success input' type=\"submit\" onClick={handleAddVideo}>Add</button>\n        \n        </div>\n      </form>\n      </div>\n\n      <div className='search'>\n      <form>\n        <label>\n          Search\n          <input className='search-input' type=\"text\" name=\"search\" />\n        </label>\n      </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddVideoForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n\n// const AddVideoForm = ({ onAddVideo }) => {\n//   const [title, setTitle] = useState('');\n//   const [url, setUrl] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const handleTitleChange = (event) => {\n//     setTitle(event.target.value);\n//   };\n\n//   const handleUrlChange = (event) => {\n//     setUrl(event.target.value);\n//   };\n\n//   const validateUrl = (url) => {\n//     // Simple validation for YouTube URLs\n//     return /^https?:\\/\\/(www\\.)?youtube\\.com\\/watch\\?v=[\\w-]+$/.test(url);\n//   };\n\n//   const handleAddVideo = () => {\n//     if (title.trim() === '') {\n//       setErrorMessage('Please enter a title');\n//       return;\n//     }\n\n//     if (!validateUrl(url)) {\n//       setErrorMessage('Please enter a valid YouTube URL');\n//       return;\n//     }\n\n//     const newVideo = {\n//       id: Date.now(), // Generate a unique ID\n//       title: title,\n//       url: url,\n//       rating: 0,\n//     };\n//     onAddVideo(newVideo);\n//     setTitle('');\n//     setUrl('');\n//     setErrorMessage('');\n//   };\n\n//   return (\n//     <div>\n//       <h3>Add a New Video</h3>\n//       <input type=\"text\" placeholder=\"Title\" value={title} onChange={handleTitleChange} />\n//       <input type=\"text\" placeholder=\"URL\" value={url} onChange={handleUrlChange} />\n//       <button onClick={handleAddVideo}>Add Video</button>\n//       {errorMessage && <p>{errorMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default AddVideoForm;\n\n"]},"metadata":{},"sourceType":"module"}