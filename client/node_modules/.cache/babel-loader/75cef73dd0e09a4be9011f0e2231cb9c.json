{"ast":null,"code":"'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst DERDecoder = require('./der');\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n  const label = options.label.toUpperCase();\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null) continue;\n    if (match[2] !== label) continue;\n    if (start === -1) {\n      if (match[1] !== 'BEGIN') break;\n      start = i;\n    } else {\n      if (match[1] !== 'END') break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};","map":{"version":3,"names":["inherits","require","Buffer","DERDecoder","PEMDecoder","entity","call","enc","module","exports","prototype","decode","data","options","lines","toString","split","label","toUpperCase","re","start","end","i","length","match","Error","base64","slice","join","replace","input","from"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/asn1.js/lib/asn1/decoders/pem.js"],"sourcesContent":["'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC,CAACC,MAAM;AAE7C,MAAMC,UAAU,GAAGF,OAAO,CAAC,OAAO,CAAC;AAEnC,SAASG,UAAUA,CAACC,MAAM,EAAE;EAC1BF,UAAU,CAACG,IAAI,CAAC,IAAI,EAAED,MAAM,CAAC;EAC7B,IAAI,CAACE,GAAG,GAAG,KAAK;AAClB;AACAP,QAAQ,CAACI,UAAU,EAAED,UAAU,CAAC;AAChCK,MAAM,CAACC,OAAO,GAAGL,UAAU;AAE3BA,UAAU,CAACM,SAAS,CAACC,MAAM,GAAG,SAASA,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3D,MAAMC,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE,CAACC,KAAK,CAAC,UAAU,CAAC;EAE/C,MAAMC,KAAK,GAAGJ,OAAO,CAACI,KAAK,CAACC,WAAW,EAAE;EAEzC,MAAMC,EAAE,GAAG,iCAAiC;EAC5C,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAME,KAAK,GAAGV,KAAK,CAACQ,CAAC,CAAC,CAACE,KAAK,CAACL,EAAE,CAAC;IAChC,IAAIK,KAAK,KAAK,IAAI,EAChB;IAEF,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKP,KAAK,EACpB;IAEF,IAAIG,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAII,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EACtB;MACFJ,KAAK,GAAGE,CAAC;IACX,CAAC,MAAM;MACL,IAAIE,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,EACpB;MACFH,GAAG,GAAGC,CAAC;MACP;IACF;EACF;EACA,IAAIF,KAAK,KAAK,CAAC,CAAC,IAAIC,GAAG,KAAK,CAAC,CAAC,EAC5B,MAAM,IAAII,KAAK,CAAC,6BAA6B,GAAGR,KAAK,CAAC;EAExD,MAAMS,MAAM,GAAGZ,KAAK,CAACa,KAAK,CAACP,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;EACnD;EACAF,MAAM,CAACG,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;EAErC,MAAMC,KAAK,GAAG5B,MAAM,CAAC6B,IAAI,CAACL,MAAM,EAAE,QAAQ,CAAC;EAC3C,OAAOvB,UAAU,CAACO,SAAS,CAACC,MAAM,CAACL,IAAI,CAAC,IAAI,EAAEwB,KAAK,EAAEjB,OAAO,CAAC;AAC/D,CAAC"},"metadata":{},"sourceType":"script"}