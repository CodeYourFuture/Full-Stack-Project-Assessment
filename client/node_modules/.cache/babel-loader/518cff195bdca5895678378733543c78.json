{"ast":null,"code":"var _jsxFileName = \"/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SearchVideo from \"./SearchVideo\";\nimport VideoComponent from \"./VideoComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddVideo(title, url) {\n  _s();\n\n  const [VideosData, setVideosData] = useState({\n    VideosData\n  });\n  const [searchVideos, setSearchVideos] = useState([]);\n  let newVideo = {\n    id: Math.floor(Math.random() * 1000000),\n    title: title,\n    url: url,\n    rating: Math.floor(Math.random() * 10000)\n  };\n  let updateList = VideosData.concat(newVideo);\n  setVideosData(updateList); //Search Video function\n\n  function search(e) {\n    e.preventDefault();\n    let searchQuery = e.target.value;\n    console.log(\"searching:\", searchQuery);\n    const filteredResult = VideosData.filter(element => {\n      return element.title.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setSearchVideos(filteredResult);\n  } // Function delete videos\n\n\n  const removeVideo = id => {\n    const dataCopy = [...VideosData];\n    console.log(`remove video with id:${id}`);\n    const index = dataCopy.findIndex(video => {\n      return video.id === id;\n    });\n    dataCopy.splice(index, 1);\n    setVideosData(dataCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-section\",\n      children: [/*#__PURE__*/_jsxDEV(SearchVideo, {\n        search: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddVideo, {\n        AddVideo: AddVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), searchVideos.length > 0 ? /*#__PURE__*/_jsxDEV(Video, {\n        data: searchVideos,\n        delete: removeVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(VideoComponent, {\n        data: VideosData,\n        delete: removeVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVideo, \"y7EctZduqiaF+kl+C98SE5QFrhU=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddVideo.js"],"names":["React","useState","SearchVideo","VideoComponent","AddVideo","title","url","VideosData","setVideosData","searchVideos","setSearchVideos","newVideo","id","Math","floor","random","rating","updateList","concat","search","e","preventDefault","searchQuery","target","value","console","log","filteredResult","filter","element","toLowerCase","includes","removeVideo","dataCopy","index","findIndex","video","splice","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport SearchVideo from \"./SearchVideo\";\nimport VideoComponent from \"./VideoComponent\";\n\n\n\nfunction AddVideo(title, url) {\n    const [VideosData, setVideosData] = useState({VideosData});\n    const [searchVideos, setSearchVideos] = useState([]);\n   let newVideo = {\n      id: Math.floor(Math.random() * 1000000),\n      title: title,\n      url: url,\n      rating: Math.floor(Math.random() * 10000),\n    };\n\n    let updateList = VideosData.concat(newVideo);\n    setVideosData(updateList);\n  \n\n  //Search Video function\n  function search(e) {\n    e.preventDefault();\n    let searchQuery = e.target.value;\n    console.log(\"searching:\", searchQuery);\n\n    const filteredResult = VideosData.filter((element) => {\n      return element.title.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setSearchVideos(filteredResult);\n  }\n  // Function delete videos\n  const removeVideo = (id) => {\n    const dataCopy = [...VideosData];\n    console.log(`remove video with id:${id}`);\n\n    const index = dataCopy.findIndex((video) => {\n      return video.id === id;\n    });\n    dataCopy.splice(index, 1);\n    setVideosData(dataCopy);\n  };\n     return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Video Recommendation</h1>\n      </header>\n      <div className=\"body-section\">\n        <SearchVideo search={search} />\n        <AddVideo AddVideo={AddVideo} />\n\n        {searchVideos.length > 0 ? (\n          <Video data={searchVideos} delete={removeVideo} />\n        ) : (\n          <VideoComponent data={VideosData} delete={removeVideo} />\n        )}\n      </div>\n    </div>\n  );\n}\nexport default AddVideo"]},"metadata":{},"sourceType":"module"}