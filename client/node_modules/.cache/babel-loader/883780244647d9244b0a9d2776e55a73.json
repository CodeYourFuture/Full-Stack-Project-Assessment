{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"slots\", \"slotProps\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport debounce from '../utils/debounce';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport tabsClasses, { getTabsUtilityClass } from './tabsClasses';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return list.firstChild;\n};\n\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return list.lastChild;\n};\n\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\n\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({\n    overflow: 'hidden',\n    minHeight: 48,\n    // Add iOS momentum scrolling for iOS < 13.0\n    WebkitOverflowScrolling: 'touch',\n    display: 'flex'\n  }, ownerState.vertical && {\n    flexDirection: 'column'\n  }, ownerState.scrollButtonsHideMobile && {\n    [`& .${tabsClasses.scrollButtons}`]: {\n      [theme.breakpoints.down('sm')]: {\n        display: 'none'\n      }\n    }\n  });\n});\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})(_ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return _extends({\n    position: 'relative',\n    display: 'inline-block',\n    flex: '1 1 auto',\n    whiteSpace: 'nowrap'\n  }, ownerState.fixed && {\n    overflowX: 'hidden',\n    width: '100%'\n  }, ownerState.hideScrollbar && {\n    // Hide dimensionless scrollbar on macOS\n    scrollbarWidth: 'none',\n    // Firefox\n    '&::-webkit-scrollbar': {\n      display: 'none' // Safari + Chrome\n\n    }\n  }, ownerState.scrollableX && {\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }, ownerState.scrollableY && {\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  });\n});\nconst FlexContainer = styled('div', {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})(_ref3 => {\n  let {\n    ownerState\n  } = _ref3;\n  return _extends({\n    display: 'flex'\n  }, ownerState.vertical && {\n    flexDirection: 'column'\n  }, ownerState.centered && {\n    justifyContent: 'center'\n  });\n});\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(_ref4 => {\n  let {\n    ownerState,\n    theme\n  } = _ref4;\n  return _extends({\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create()\n  }, ownerState.indicatorColor === 'primary' && {\n    backgroundColor: (theme.vars || theme).palette.primary.main\n  }, ownerState.indicatorColor === 'secondary' && {\n    backgroundColor: (theme.vars || theme).palette.secondary.main\n  }, ownerState.vertical && {\n    height: '100%',\n    width: 2,\n    right: 0\n  });\n});\nconst TabsScrollbarSize = styled(ScrollbarSize, {\n  name: 'MuiTabs',\n  slot: 'ScrollbarSize'\n})({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n});\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    slots = {},\n    slotProps = {},\n    TabIndicatorProps = {},\n    TabScrollButtonProps = {},\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  const ownerState = _extends({}, props, {\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 && // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n\n    if (vertical) {\n      startIndicator = 'top';\n\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n\n      if (tabMeta && tabsMeta) {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + correction);\n      }\n    }\n\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    }; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[startIndicator]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = function (scrollValue) {\n    let {\n      animation = true\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      slots: {\n        StartScrollButtonIcon: slots.StartScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      slots: {\n        EndScrollButtonIcon: slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        endScrollButtonIcon: endScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let resizeObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [updateIndicatorState]);\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp == null ? void 0 : childrenProp.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, _extends({}, TabIndicatorProps, {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    ownerState: ownerState,\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = currentFocus.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    as: component\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      ownerState: ownerState,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        ownerState: ownerState,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/Tabs/Tabs.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","isFragment","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","useSlotProps","styled","useThemeProps","useTheme","debounce","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","TabScrollButton","useEventCallback","tabsClasses","getTabsUtilityClass","ownerDocument","ownerWindow","jsx","_jsx","jsxs","_jsxs","nextItem","list","item","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","useUtilityClasses","ownerState","vertical","fixed","hideScrollbar","scrollableX","scrollableY","centered","scrollButtonsHideMobile","classes","slots","root","scroller","flexContainer","indicator","scrollButtons","TabsRoot","name","slot","overridesResolver","props","styles","theme","overflow","minHeight","WebkitOverflowScrolling","display","flexDirection","breakpoints","down","TabsScroller","position","flex","whiteSpace","overflowX","width","scrollbarWidth","overflowY","FlexContainer","flexContainerVertical","justifyContent","TabsIndicator","height","bottom","transition","transitions","create","indicatorColor","backgroundColor","vars","palette","primary","main","secondary","right","TabsScrollbarSize","defaultIndicatorStyle","warnedOnceTabPresent","Tabs","forwardRef","inProps","ref","isRtl","direction","ariaLabel","ariaLabelledBy","action","children","childrenProp","className","component","allowScrollButtonsMobile","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","slotProps","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","other","scrollable","scrollStart","start","end","clientSize","size","startScrollButtonIconProps","elementType","StartScrollButtonIcon","externalSlotProps","startScrollButtonIcon","endScrollButtonIconProps","EndScrollButtonIcon","endScrollButtonIcon","process","env","NODE_ENV","console","error","mounted","setMounted","useState","indicatorStyle","setIndicatorStyle","displayStartScroll","setDisplayStartScroll","displayEndScroll","setDisplayEndScroll","updateScrollObserver","setUpdateScrollObserver","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","scrollWidth","top","left","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","startIndicator","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","animation","duration","standard","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","getConditionalElements","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","useEffect","handleResize","win","addEventListener","resizeObserver","ResizeObserver","forEach","child","observe","clear","removeEventListener","disconnect","tabListChildren","IntersectionObserver","firstTab","lastTab","observerOptions","threshold","handleScrollButtonStart","entries","isIntersecting","firstObserver","handleScrollButtonEnd","lastObserver","undefined","useImperativeHandle","updateIndicator","updateScrollButtons","style","childIndex","Children","map","isValidElement","childValue","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","activeElement","role","previousItemKey","nextItemKey","key","preventDefault","as","onKeyDown","propTypes","bool","string","node","object","oneOfType","oneOf","func","shape","sx","arrayOf","any"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"slots\", \"slotProps\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport debounce from '../utils/debounce';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport tabsClasses, { getTabsUtilityClass } from './tabsClasses';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return list.firstChild;\n};\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return list.lastChild;\n};\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n      wrappedOnce = true;\n    }\n\n    // Same logic as useAutocomplete.js\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  overflow: 'hidden',\n  minHeight: 48,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  display: 'flex'\n}, ownerState.vertical && {\n  flexDirection: 'column'\n}, ownerState.scrollButtonsHideMobile && {\n  [`& .${tabsClasses.scrollButtons}`]: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n}));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap'\n}, ownerState.fixed && {\n  overflowX: 'hidden',\n  width: '100%'\n}, ownerState.hideScrollbar && {\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n}, ownerState.scrollableX && {\n  overflowX: 'auto',\n  overflowY: 'hidden'\n}, ownerState.scrollableY && {\n  overflowY: 'auto',\n  overflowX: 'hidden'\n}));\nconst FlexContainer = styled('div', {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex'\n}, ownerState.vertical && {\n  flexDirection: 'column'\n}, ownerState.centered && {\n  justifyContent: 'center'\n}));\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create()\n}, ownerState.indicatorColor === 'primary' && {\n  backgroundColor: (theme.vars || theme).palette.primary.main\n}, ownerState.indicatorColor === 'secondary' && {\n  backgroundColor: (theme.vars || theme).palette.secondary.main\n}, ownerState.vertical && {\n  height: '100%',\n  width: 2,\n  right: 0\n}));\nconst TabsScrollbarSize = styled(ScrollbarSize, {\n  name: 'MuiTabs',\n  slot: 'ScrollbarSize'\n})({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n});\n\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      action,\n      centered = false,\n      children: childrenProp,\n      className,\n      component = 'div',\n      allowScrollButtonsMobile = false,\n      indicatorColor = 'primary',\n      onChange,\n      orientation = 'horizontal',\n      ScrollButtonComponent = TabScrollButton,\n      scrollButtons = 'auto',\n      selectionFollowsFocus,\n      slots = {},\n      slotProps = {},\n      TabIndicatorProps = {},\n      TabScrollButtonProps = {},\n      textColor = 'primary',\n      value,\n      variant = 'standard',\n      visibleScrollbar = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = _extends({}, props, {\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  });\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect();\n      // create a new object with ClientRect class props + scrollLeft\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n    let tabMeta;\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 &&\n          // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n    if (vertical) {\n      startIndicator = 'top';\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n      if (tabMeta && tabsMeta) {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + correction);\n      }\n    }\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n\n    // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(indicatorStyle[startIndicator]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n      // Fix for Edge\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n    scroll(scrollValue);\n  };\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n        break;\n      }\n      totalSize += tab[clientSize];\n    }\n    return totalSize;\n  };\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  };\n\n  // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      slots: {\n        StartScrollButtonIcon: slots.StartScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      slots: {\n        EndScrollButtonIcon: slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        endScrollButtonIcon: endScrollButtonIconProps\n      },\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    return conditionalElements;\n  };\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [updateIndicatorState]);\n\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp == null ? void 0 : childrenProp.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, _extends({}, TabIndicatorProps, {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    ownerState: ownerState,\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement;\n    // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n    const role = currentFocus.getAttribute('role');\n    if (role !== 'tab') {\n      return;\n    }\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n      default:\n        break;\n    }\n  };\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    as: component\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      ownerState: ownerState,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        ownerState: ownerState,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes /* @typescript-to-proptypes-ignore */.oneOf(['auto', false, true]),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n  /**\n   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}