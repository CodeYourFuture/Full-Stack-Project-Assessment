{"ast":null,"code":"var _jsxFileName = \"/Users/anuthapaliya/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddNewVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css'; // import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewVideo = ({\n  addVideoButton\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState(''); // const [error, setError] = useState('');\n  // const correctYoutubeUrl = (url) => {\n  // try {\n  // const youtubeUrl = new URL(url);\n  // return (\n  // youtubeUrl.hostname === 'www.youtube.com' ||\n  // youtubeUrl.hostname === 'youtube.com'\n  // );\n  // } catch (error) {\n  // return false;\n  // }\n  // };\n  // const submitButton = async (e) => {\n  // e.preventDefault();\n  // if (title.trim() === '') {\n  // setError('Title cannot be empty.');\n  // return;\n  // }\n  // if (!correctYoutubeUrl(url)) {\n  // setError('Invalid youTube URL.');\n  // return;\n  // }\n  // setError('');\n  // try {\n  // const response = await axios.post('http://localhost:8000/videos', {\n  // title: title,\n  // url: url,\n  // });\n  // if (response.status === 201) {\n  // if successful, fetch updated videos and clear input fields\n  // fetchVideos();\n  // setTitle('');\n  // setUrl('');\n  // }\n  // } catch (error) {\n  // console.error('Error adding video:', error);\n  // }\n  // };\n\n  const handleAddVideo = () => {\n    const newVideo = {\n      title: title,\n      url: url,\n      rating: 0\n    };\n    addVideoButton(newVideo);\n    setTitle('');\n    setUrl('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-video-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ty: true,\n        pe: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddVideo,\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AddNewVideo, \"72MpAzgDUQlEdTFufuGkfu+ySnY=\");\n\n_c = AddNewVideo;\nexport default AddNewVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewVideo\");","map":{"version":3,"sources":["/Users/anuthapaliya/Documents/GitHub/Full-Stack-Project-Assessment/client/src/AddNewVideo.js"],"names":["React","useState","AddNewVideo","addVideoButton","title","setTitle","url","setUrl","handleAddVideo","newVideo","rating","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CACA;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B,CAF4C,CAG5C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMO,cAAc,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAG;AACjBL,MAAAA,KAAK,EAAEA,KADU;AAEjBE,MAAAA,GAAG,EAAEA,GAFY;AAGjBI,MAAAA,MAAM,EAAE;AAHS,KAAjB;AAKAP,IAAAA,cAAc,CAACM,QAAD,CAAd;AACAJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACC,GATD;;AAYA,sBACA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACA;AAAA,gBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACA;AAAA,kBAAO;AAAP;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEH,KAA1B;AAAiC,QAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAO;AAAP;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAO,QAAA,EAAE,MAAT;AACA,QAAA,EAAE,EAAC,MADH;AACU,QAAA,KAAK,EAAEP,GADjB;AACsB,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,MAAM,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAD7C;AAAA;AAAA;AAAA;AAAA,cAJA,eAMA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEL,cAA/B;AAAA,kBAA+C;AAA/C;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAeC,CApFD;;GAAMN,W;;KAAAA,W;AAqFN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n// import axios from 'axios';\n\n\nconst AddNewVideo = ({ addVideoButton }) => {\nconst [title, setTitle] = useState('');\nconst [url, setUrl] = useState('');\n// const [error, setError] = useState('');\n\n\n// const correctYoutubeUrl = (url) => {\n// try {\n// const youtubeUrl = new URL(url);\n// return (\n// youtubeUrl.hostname === 'www.youtube.com' ||\n// youtubeUrl.hostname === 'youtube.com'\n// );\n// } catch (error) {\n// return false;\n// }\n// };\n\n\n\n\n// const submitButton = async (e) => {\n// e.preventDefault();\n\n\n// if (title.trim() === '') {\n// setError('Title cannot be empty.');\n// return;\n// }\n\n\n// if (!correctYoutubeUrl(url)) {\n// setError('Invalid youTube URL.');\n// return;\n// }\n\n\n// setError('');\n\n\n// try {\n// const response = await axios.post('http://localhost:8000/videos', {\n// title: title,\n// url: url,\n// });\n\n\n// if (response.status === 201) {\n// if successful, fetch updated videos and clear input fields\n// fetchVideos();\n// setTitle('');\n// setUrl('');\n// }\n// } catch (error) {\n// console.error('Error adding video:', error);\n// }\n// };\nconst handleAddVideo = () => {\nconst newVideo = {\ntitle: title,\nurl: url,\nrating: 0,\n};\naddVideoButton(newVideo);\nsetTitle('');\nsetUrl('');\n}\n\n\nreturn (\n<div className=\"add-video-form\">\n<h2>Add a New Video</h2>\n<form>\n<label>Title:</label>\n<input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n<label>URL:</label>\n<input ty\npe='text' value={url} onChange={(e) => setUrl(e.target.value)} />\n<button type=\"button\" onClick={handleAddVideo}>\nAdd Video\n</button>\n</form>\n</div>\n);\n};\nexport default AddNewVideo;\n"]},"metadata":{},"sourceType":"module"}