{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(props) {\n  _s();\n\n  const [videos, setVideos] = useState(props.result);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos.map(video => {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), \")(\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false);\n}\n\n_s(ShowingVideos, \"m5XAOzZ20O9i4mgZED0RSfJqLe4=\");\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["useState","ShowingVideos","props","videos","setVideos","result","map","video","title","rating"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAApC;AACA,sBACE;AAAA,cACGF,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACrB;AAAA;AAAA,gCACE;AAAA,oBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,qBAC0B;AAAA,oBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAD1B;AAAA;AAGD,KAJA;AADH,mBADF;AASD;;GAXQR,a;;KAAAA,a;AAaT,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction ShowingVideos(props) {\n  const [videos, setVideos] = useState(props.result);\n  return (\n    <>\n      {videos.map((video) => {\n        <>\n          <h1>{video.title}</h1>)(<p>{video.rating}</p>\n        </>;\n      })}\n    </>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}