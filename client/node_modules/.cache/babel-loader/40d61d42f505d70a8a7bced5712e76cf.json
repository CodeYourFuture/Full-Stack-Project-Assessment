{"ast":null,"code":"var _jsxFileName = \"/Users/tairatodumosu/Documents/GitHub/HTML-CSS-Coursework-Week1/Full-Stack-Project-Assessment/client/src/loadVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport videoData from \"./exampleresponse.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadVideo() {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const thumbsUp = () => {\n    setCount(count + 1);\n  };\n\n  const thumbsDown = () => {\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: videoData.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${video.id}`,\n        title: \"YouTube video player\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: thumbsUp,\n        children: \"thumbs up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onC: true,\n        children: \"thumbs down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoadVideo, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = LoadVideo;\nexport default LoadVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadVideo\");","map":{"version":3,"sources":["/Users/tairatodumosu/Documents/GitHub/HTML-CSS-Coursework-Week1/Full-Stack-Project-Assessment/client/src/loadVideo.js"],"names":["React","useState","videoData","LoadVideo","count","setCount","thumbsUp","thumbsDown","map","video","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACE,GAFD;;AAGD,QAAMG,UAAU,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAFD;;AAIC,sBACE;AAAA,cACGF,SAAS,CAACM,GAAV,CAAeC,KAAD,iBACb;AAAA,8BACE;AAAA,kBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,GAAG,EAAG,iCAAgCD,KAAK,CAACE,EAAG,EAHjD;AAIE,QAAA,KAAK,EAAC,sBAJR;AAKE,QAAA,WAAW,EAAC,GALd;AAME,QAAA,KAAK,EAAC,0FANR;AAOE,QAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA,cAHF,eAYE;AAAQ,QAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAQ,QAAA,GAAG,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,OAAUG,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhCQR,S;;KAAAA,S;AAkCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport videoData from \"./exampleresponse.json\";\n\nfunction LoadVideo() {\n\n  const [count, setCount] = useState(0);\n\n  const thumbsUp = () => {\n setCount(count + 1);\n  }\n const thumbsDown = () => {\n  setCount(count - 1)\n };\n\n  return (\n    <div>\n      {videoData.map((video) => (\n        <div key={video.id}>\n          <h2>{video.title}</h2>\n          \n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${video.id}`}\n            title=\"YouTube video player\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n          <button onClick={thumbsUp}>thumbs up</button>\n          <button onC>thumbs down</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default LoadVideo;\n"]},"metadata":{},"sourceType":"module"}