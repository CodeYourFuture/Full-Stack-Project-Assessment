{"ast":null,"code":"var _jsxFileName = \"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Uploadvideo() {\n  _s();\n\n  const [videoData, setVideoData] = useState([]);\n\n  function isValidURL(url) {\n    const pattern = /^(https?:\\/\\/)?[a-z0-9\\-._~:/?#[\\]@!$&'()*+,;=]+$/i;\n    return pattern.test(url);\n  }\n  /*const allVideoData = */\n  //  useEffect(() => {\n  //   async function fetchVideoData(){\n  //     try{\n  //       const response = await fetch('/videos');\n  //       const jsonVideo = await response.json();\n  //       setVideoData(jsonVideo);\n  //     }catch (error){\n  //       console.error('Error fetching data:', error);\n  //     }\n  //   }\n  //   fetchVideoData();\n  // }, []);\n  //const [videoData, setVideoData] = useState([]);\n\n\n  useEffect(() => {\n    fetch('/videos').then(response => response.json()).then(updatedData => {\n      setVideoData(updatedData);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); ////////////////////\n\n  const [title, setTitle] = useState('');\n  const [url, setURL] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (title.trim() === '') {\n      return alert('Title cannot be empty.');\n    }\n\n    if (!isValidURL(url)) {\n      return alert('Please enter a valid URL.');\n    }\n\n    const currentDate = new Date();\n    const formattedDate = currentDate.toISOString();\n    const formData = {\n      id: videoData[videoData.length - 1].id + 1,\n      rating: 0,\n      title: title,\n      url: url.split('watch?')[0] + 'embed/' + url.split('?')[1],\n      submittedAt: formattedDate\n    };\n\n    try {\n      const response = await fetch('/videos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        console.log('Form data submitted successfully');\n      } else {\n        console.error('Form data submission failed');\n      }\n    } catch (error) {\n      console.log('Error submitting form:', error);\n    }\n  }; ///////\n\n\n  const [showForm, setShowForm] = useState(false);\n\n  const handleButtonClick = () => {\n    if (!showForm) {\n      setShowForm(true);\n    }\n  };\n\n  const handleCancelButtonClick = () => {\n    if (showForm) {\n      setShowForm(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"uploadVideo_btn\",\n      onClick: handleButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#0\",\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            type: \"text\",\n            value: title,\n            class: \"input\",\n            name: \"title\",\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"url\",\n            children: \"url:\\xA0\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"url\",\n            value: url,\n            class: \"input\",\n            type: \"url\",\n            name: \"url\",\n            onChange: e => setURL(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"formBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"cancelBtn\",\n            onClick: handleCancelButtonClick,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"uploadBtn\",\n            type: \"submit\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Uploadvideo, \"+pqjahtVKOvdfJzCSwJdLiQGi88=\");\n\n_c = Uploadvideo;\n\nfunction Searchvideo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"searchid\",\n      children: \"Search:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchid\",\n      type: \"text\",\n      class: \"searchVideo\",\n      name: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Searchvideo;\nexport default function Search() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(Uploadvideo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Searchvideo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Search;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Uploadvideo\");\n$RefreshReg$(_c2, \"Searchvideo\");\n$RefreshReg$(_c3, \"Search\");","map":{"version":3,"sources":["/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/src/Search.js"],"names":["React","useEffect","useState","Uploadvideo","videoData","setVideoData","isValidURL","url","pattern","test","fetch","then","response","json","updatedData","catch","error","console","title","setTitle","setURL","handleSubmit","event","preventDefault","trim","alert","currentDate","Date","formattedDate","toISOString","formData","id","length","rating","split","submittedAt","method","headers","body","JSON","stringify","ok","log","showForm","setShowForm","handleButtonClick","handleCancelButtonClick","e","target","value","Searchvideo","Search"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from 'react';\n\n\nfunction Uploadvideo() {\n  const [videoData, setVideoData] = useState([]);\n\n  function isValidURL(url) {\n    const pattern = /^(https?:\\/\\/)?[a-z0-9\\-._~:/?#[\\]@!$&'()*+,;=]+$/i;\n    return pattern.test(url);\n  }\n /*const allVideoData = */\n//  useEffect(() => {\n//   async function fetchVideoData(){\n//     try{\n//       const response = await fetch('/videos');\n//       const jsonVideo = await response.json();\n//       setVideoData(jsonVideo);\n//     }catch (error){\n//       console.error('Error fetching data:', error);\n//     }\n//   }\n//   fetchVideoData();\n// }, []);\n//const [videoData, setVideoData] = useState([]);\n\nuseEffect(() => {\n  fetch('/videos')\n  .then(response => response.json())\n  .then(updatedData => {\n    setVideoData(updatedData);\n  })\n  .catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n\n   \n  }, []);\n\n////////////////////\n  const [title, setTitle] = useState('');\n  const [url, setURL] = useState('');\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (title.trim() === '') {\n          return  (alert('Title cannot be empty.'));\n      \n    }\n    \n    if (!isValidURL(url)) {\n      return (alert('Please enter a valid URL.'));\n      \n    }\n    \n    const currentDate = new Date();\n    const formattedDate = currentDate.toISOString();\n    \n    const formData = {\n      id: (videoData[(videoData.length-1)].id)+1,\n      rating:0,\n      title: title,\n      url: url.split('watch?')[0]+'embed/'+url.split('?')[1],\n      submittedAt: formattedDate\n    };\n    \n  \n    \n    \n    try{\n      const response = await fetch('/videos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'},\n          body: JSON.stringify(formData),\n        });\n        if(response.ok){\n          console.log('Form data submitted successfully');\n        }else{\n          console.error('Form data submission failed');\n        }\n\n      } catch (error) {\n        console.log('Error submitting form:', error);\n      }\n    \n  };\n  \n///////\n\n\nconst [showForm, setShowForm] = useState(false);\n  \n  const handleButtonClick = () => {\n    if (!showForm) {\n      setShowForm(true);\n    }\n\n  };\n  const handleCancelButtonClick = () => {\n    if (showForm) {\n      setShowForm(false);\n    }\n\n  };\n  \n\n  return (\n    \n    <div>\n        <button class=\"uploadVideo_btn\" onClick={handleButtonClick}>\n      \n        <a href=\"#0\">Upload Video</a>\n      </button>\n      {showForm && (\n        <div class=\"container\"> \n\n        <form onSubmit={handleSubmit}>\n\n              <div>\n                <label htmlFor=\"title\">Title:</label>\n                <input id=\"title\"type=\"text\" value={title} class=\"input\" name=\"title\" onChange={(e)=>setTitle(e.target.value)} required></input>\n              </div>\n              <div>\n                <label htmlFor=\"url\">url:&nbsp;&nbsp;&nbsp;</label>\n                <input id=\"url\" value={url} class=\"input\" type=\"url\"  name=\"url\" onChange={(e)=>setURL(e.target.value)} required></input>\n              </div>\n              <div class=\"formBtn\">\n                <button class=\"cancelBtn\" onClick={handleCancelButtonClick}>Cancel</button>\n                <button class=\"uploadBtn\" type=\"submit\">Upload</button>\n              </div>\n      </form>\n      </div>\n       \n      )}\n      \n        </div>\n  \n  );\n}\nfunction Searchvideo() {\n  return (\n    <div>\n      <label for=\"searchid\">Search:</label>\n      <input id=\"searchid\" type=\"text\" class=\"searchVideo\" name=\"search\"></input>\n    </div>\n  );\n}\n\nexport default function Search() {\n  return (\n    <div class=\"search\">\n      <Uploadvideo />\n      <Searchvideo />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}