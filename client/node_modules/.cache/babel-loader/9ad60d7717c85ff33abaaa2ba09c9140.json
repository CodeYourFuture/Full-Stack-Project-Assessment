{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onura\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\components\\\\AddVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddVideo = _ref => {\n  _s();\n\n  let {\n    onAddVideo\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (title.trim() === '' || !isValidYouTubeUrl(url)) {\n      return;\n    }\n\n    const newVideo = {\n      id: Date.now(),\n      title,\n      url,\n      votes: 0,\n      uploadedDate: new Date().toLocaleString()\n    };\n    onAddVideo(newVideo);\n    setTitle('');\n    setUrl('');\n  };\n\n  const isValidYouTubeUrl = url => {\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"YouTube URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddVideo, \"72MpAzgDUQlEdTFufuGkfu+ySnY=\");\n\n_c = AddVideo;\nexport default AddVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVideo\");","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/src/components/AddVideo.js"],"names":["React","useState","AddVideo","onAddVideo","title","setTitle","url","setUrl","handleSubmit","e","preventDefault","trim","isValidYouTubeUrl","newVideo","id","Date","now","votes","uploadedDate","toLocaleString","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIN,KAAK,CAACO,IAAN,OAAiB,EAAjB,IAAuB,CAACC,iBAAiB,CAACN,GAAD,CAA7C,EAAoD;AAChD;AACH;;AAED,UAAMO,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADS;AAEbZ,MAAAA,KAFa;AAGbE,MAAAA,GAHa;AAIbW,MAAAA,KAAK,EAAE,CAJM;AAKbC,MAAAA,YAAY,EAAE,IAAIH,IAAJ,GAAWI,cAAX;AALD,KAAjB;AAQAhB,IAAAA,UAAU,CAACU,QAAD,CAAV;AAEAR,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACH,GAnBD;;AAqBA,QAAMK,iBAAiB,GAAIN,GAAD,IAAS;AAE/B,WAAO,IAAP;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACI;AAAA,0CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEJ,KAFX;AAGI,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,gDAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEf,GAFX;AAGI,UAAA,QAAQ,EAAGG,CAAD,IAAOF,MAAM,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAtDD;;GAAMnB,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddVideo = ({ onAddVideo }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (title.trim() === '' || !isValidYouTubeUrl(url)) {\r\n            return;\r\n        }\r\n       \r\n        const newVideo = {\r\n            id: Date.now(),\r\n            title,\r\n            url,\r\n            votes: 0,\r\n            uploadedDate: new Date().toLocaleString(),\r\n        };\r\n\r\n        onAddVideo(newVideo);\r\n\r\n        setTitle('');\r\n        setUrl('');\r\n    };\r\n\r\n    const isValidYouTubeUrl = (url) => {\r\n\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Add a Video</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Title:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    YouTube URL:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={url}\r\n                        onChange={(e) => setUrl(e.target.value)}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Add Video</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddVideo;\r\n"]},"metadata":{},"sourceType":"module"}