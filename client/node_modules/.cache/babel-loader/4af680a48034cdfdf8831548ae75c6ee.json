{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = _ref => {\n  let {\n    video\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: video.title,\n      width: \"560\",\n      height: \"315\",\n      src: video.url,\n      frameBorder: \"0\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Video;\n\nconst VideoList = _ref2 => {\n  _s();\n\n  let {\n    videos,\n    handleAddVideo\n  } = _ref2;\n  const [newVideoUrl, setNewVideoUrl] = useState(\"\");\n\n  const handleInputChange = e => {\n    setNewVideoUrl(e.target.value);\n  };\n\n  const addVideo = () => {\n    if (newVideoUrl) {\n      const newVideo = {\n        id: videos.length + 1,\n        title: `Video ${videos.length + 1}`,\n        url: newVideoUrl\n      };\n      handleAddVideo(newVideo);\n      setNewVideoUrl(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), videos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n      video: video\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter YouTube URL\",\n        value: newVideoUrl,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addVideo,\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoList, \"UxX4EBpBOAXP6NGrnANDtMOa9+Y=\");\n\n_c2 = VideoList;\n\nconst App = () => {\n  _s2();\n\n  const [videos, setVideos] = useState([{\n    id: 1,\n    title: \"Video 1\",\n    url: \"https://www.youtube.com/embed/VIDEO_ID\"\n  }, {\n    id: 2,\n    title: \"Video 2\",\n    url: \"https://www.youtube.com/embed/VIDEO_ID\"\n  }]);\n\n  const handleAddVideo = newVideo => {\n    setVideos(prevVideos => [...prevVideos, newVideo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos,\n      handleAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"phjEL5nwyBkYk4R34ZzxuiCs5TQ=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"VideoList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","Video","video","title","url","VideoList","videos","handleAddVideo","newVideoUrl","setNewVideoUrl","handleInputChange","e","target","value","addVideo","newVideo","id","length","map","App","setVideos","prevVideos"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst Video = ({ video }) => {\n  return (\n    <div className=\"video\">\n      <h3>{video.title}</h3>\n      <iframe\n        title={video.title}\n        width=\"560\"\n        height=\"315\"\n        src={video.url}\n        frameBorder=\"0\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n};\n\nconst VideoList = ({ videos, handleAddVideo }) => {\n  const [newVideoUrl, setNewVideoUrl] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setNewVideoUrl(e.target.value);\n  };\n\n  const addVideo = () => {\n    if (newVideoUrl) {\n      const newVideo = {\n        id: videos.length + 1,\n        title: `Video ${videos.length + 1}`,\n        url: newVideoUrl,\n      };\n\n      handleAddVideo(newVideo);\n      setNewVideoUrl(\"\");\n    }\n  };\n\n  return (\n    <div className=\"video-list\">\n      <h2>Video List</h2>\n      {videos.map((video) => (\n        <Video key={video.id} video={video} />\n      ))}\n      <div className=\"add-video\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter YouTube URL\"\n          value={newVideoUrl}\n          onChange={handleInputChange}\n        />\n        <button onClick={addVideo}>Add Video</button>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [videos, setVideos] = useState([\n    {\n      id: 1,\n      title: \"Video 1\",\n      url: \"https://www.youtube.com/embed/VIDEO_ID\",\n    },\n    {\n      id: 2,\n      title: \"Video 2\",\n      url: \"https://www.youtube.com/embed/VIDEO_ID\",\n    },\n  ]);\n\n  const handleAddVideo = (newVideo) => {\n    setVideos((prevVideos) => [...prevVideos, newVideo]);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Video Player</h1>\n      <VideoList videos={videos} handleAddVideo={handleAddVideo} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}