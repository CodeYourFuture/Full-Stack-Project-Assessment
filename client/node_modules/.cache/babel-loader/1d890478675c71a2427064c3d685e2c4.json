{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// import \"./App.css\";\n// function extractVideoId(url) {\n//   // Extract the video ID from the YouTube URL\n//   // Implement this function according to your requirements\n//   // Example implementation:\n//   const urlParts = url.split(\"/\");\n//   return urlParts[urlParts.length - 1];\n// }\n// function App() {\n//   const [videos, setVideos] = useState([\n//     {\n//       id: 1,\n//       title: \"Video 1\",\n//       url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n//       votes: 0,\n//     },\n//     {\n//       id: 2,\n//       title: \"Video 2\",\n//       url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n//       votes: 0,\n//     },\n//     {\n//       id: 3,\n//       title: \"Video 3\",\n//       url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n//       votes: 0,\n//     },\n//   ]);\n//   const handleAddVideo = (title, url) => {\n//     const videoId = extractVideoId(url);\n//     const newVideo = {\n//       id: videos.length + 1,\n//       title,\n//       url: `https://www.youtube.com/embed/${videoId}`,\n//       votes: 0,\n//     };\n//     setVideos([...videos, newVideo]);\n//   };\n//   const handleVote = (videoId, increment) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === videoId\n//           ? { ...video, votes: video.votes + increment }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemoveVideo = (videoId) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.filter((video) => video.id !== videoId)\n//     );\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <div className=\"container\">\n//         <VideoList\n//           videos={videos}\n//           handleVote={handleVote}\n//           handleRemove={handleRemoveVideo}\n//         />\n//         <AddVideoForm handleAddVideo={handleAddVideo} />\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { useEffect, useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([{\n    id: 1,\n    title: \"Default Video 1\",\n    url: \"https://www.youtube.com/embed/default_video_1\",\n    votes: 0\n  }, {\n    id: 2,\n    title: \"Default Video 2\",\n    url: \"https://www.youtube.com/embed/default_video_2\",\n    votes: 0\n  }]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/\").then(response => response.json()).then(data => {\n      setVideos(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  const handleAddVideo = (title, url) => {\n    const video = {\n      title: title,\n      url: url\n    };\n    fetch(\"http://127.0.0.1:5000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(video)\n    }).then(response => response.json()).then(data => {\n      if (data.id) {\n        // Video added successfully\n        const newVideo = {\n          id: data.id,\n          title: title,\n          url: url\n        };\n        setVideos([...videos, newVideo]);\n      } else {\n        // Failed to add video\n        console.error(data.message);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddVideoForm, {\n      handleAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"C3G5XpfazAtS+b1tqTXT0wh9pPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useEffect","useState","VideoList","AddVideoForm","App","videos","setVideos","id","title","url","votes","fetch","then","response","json","data","catch","error","console","handleAddVideo","video","method","headers","body","JSON","stringify","newVideo","message"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// import \"./App.css\";\n\n// function extractVideoId(url) {\n//   // Extract the video ID from the YouTube URL\n//   // Implement this function according to your requirements\n//   // Example implementation:\n//   const urlParts = url.split(\"/\");\n//   return urlParts[urlParts.length - 1];\n// }\n\n// function App() {\n//   const [videos, setVideos] = useState([\n//     {\n//       id: 1,\n//       title: \"Video 1\",\n//       url: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n//       votes: 0,\n//     },\n//     {\n//       id: 2,\n//       title: \"Video 2\",\n//       url: \"https://www.youtube.com/embed/K4DyBUG242c\",\n//       votes: 0,\n//     },\n//     {\n//       id: 3,\n//       title: \"Video 3\",\n//       url: \"https://www.youtube.com/embed/tgbNymZ7vqY\",\n//       votes: 0,\n//     },\n//   ]);\n\n//   const handleAddVideo = (title, url) => {\n//     const videoId = extractVideoId(url);\n//     const newVideo = {\n//       id: videos.length + 1,\n//       title,\n//       url: `https://www.youtube.com/embed/${videoId}`,\n//       votes: 0,\n//     };\n//     setVideos([...videos, newVideo]);\n//   };\n\n//   const handleVote = (videoId, increment) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === videoId\n//           ? { ...video, votes: video.votes + increment }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemoveVideo = (videoId) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.filter((video) => video.id !== videoId)\n//     );\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//       <div className=\"container\">\n//         <VideoList\n//           videos={videos}\n//           handleVote={handleVote}\n//           handleRemove={handleRemoveVideo}\n//         />\n//         <AddVideoForm handleAddVideo={handleAddVideo} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useState } from \"react\";\nimport VideoList from \"./components/VideoList\";\nimport AddVideoForm from \"./components/AddVideoForm\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([\n    {\n      id: 1,\n      title: \"Default Video 1\",\n      url: \"https://www.youtube.com/embed/default_video_1\",\n      votes: 0,\n    },\n    {\n      id: 2,\n      title: \"Default Video 2\",\n      url: \"https://www.youtube.com/embed/default_video_2\",\n      votes: 0,\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/\")\n      .then((response) => response.json())\n      .then((data) => {\n        setVideos(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  const handleAddVideo = (title, url) => {\n    const video = {\n      title: title,\n      url: url,\n    };\n\n    fetch(\"http://127.0.0.1:5000/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(video),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.id) {\n          // Video added successfully\n          const newVideo = { id: data.id, title: title, url: url };\n          setVideos([...videos, newVideo]);\n        } else {\n          // Failed to add video\n          console.error(data.message);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Video Website</h1>\n      <VideoList videos={videos} />\n      <AddVideoForm handleAddVideo={handleAddVideo} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}