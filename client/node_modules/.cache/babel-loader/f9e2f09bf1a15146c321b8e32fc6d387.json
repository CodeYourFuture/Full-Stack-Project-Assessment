{"ast":null,"code":"var _jsxFileName = \"/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoItem = _ref => {\n  _s();\n\n  let {\n    video,\n    onDelete\n  } = _ref;\n  // const [videos, setVideos] = useState([]);\n  const [rating, setRating] = useState(video.rating);\n\n  const handleUpVote = videoToUpdate => {\n    // Update the vote count for the video\n    //   const updatedVideosUpVote = videos.map((video) =>\n    //     video.id === videoToUpdate.id\n    //       ? { ...video, votes: video.votes + 1 }\n    //       : video\n    //   );\n    //   setVideos(updatedVideosUpVote);\n    // };\n    const incRating = () => {\n      setRating(rating + 1);\n    }; // Update the vote count for the video\n    // const handleDownVote = (videoToUpdate) => {\n    //   const updatedVideosDownVote = videos.map((video) =>\n    //     video.id === videoToUpdate.id\n    //       ? { ...video, votes: Math.max(video.votes - 1, 0) }\n    //       : video\n    //   );\n    //   setVideos(updatedVideosDownVote);\n    // };\n\n\n    const decRating = () => {\n      if (video.rating < video.rating) {\n        setRating(rating - 1);\n      } else {\n        setRating(video.rating);\n      }\n    };\n\n    const videoId = video.url.split('v=')[1];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        title: \"YouTube video player\" // frameborder=\"0\" \n        ,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" // allowfullscreen\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Votes: \", video.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: incRating,\n        type: \"button\",\n        style: {\n          fontSize: '24px'\n        },\n        className: \"fa fa-thumbs-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: decRating,\n        type: \"button\",\n        style: {\n          fontSize: '24px'\n        },\n        className: \"fa fa-thumbs-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(video.id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_s(VideoItem, \"f3jip8S1KSIla2q/dUmG55SMBOk=\");\n\n_c = VideoItem;\nexport default VideoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoItem\");","map":{"version":3,"sources":["/Users/salihapopal/Desktop/cyf-directory/Full-Stack-Project-Assessment/client/src/VideoItem.jsx"],"names":["React","useState","VideoItem","video","onDelete","rating","setRating","handleUpVote","videoToUpdate","incRating","decRating","videoId","url","split","title","fontSize","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACzC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACE,KAAK,CAACE,MAAP,CAApC;;AAEA,QAAME,YAAY,GAAIC,aAAD,IAAmB;AAEtC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,SAAS,GAAG,MAAM;AACtBH,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,KAFD,CAXwC,CAexC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAMK,SAAS,GAAG,MAAM;AACtB,UAAIP,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAzB,EAAiC;AAC/BC,QAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,OAFD,MAEM;AACJC,QAAAA,SAAS,CAACH,KAAK,CAACE,MAAP,CAAT;AACD;AAEF,KAPD;;AASA,UAAMM,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAhB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AACA,QAAA,KAAK,EAAC,KADN;AAEA,QAAA,MAAM,EAAC,KAFP;AAGA,QAAA,GAAG,EAAG,iCAAgCF,OAAQ,EAH9C;AAIA,QAAA,KAAK,EAAC,sBAJN,CAKA;AALA;AAMA,QAAA,KAAK,EAAC,0FANN,CAOA;;AAPA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBAAKR,KAAK,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA,8BAAWX,KAAK,CAACE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAG,QAAA,OAAO,EAAEI,SAAZ;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,KAAK,EAAE;AAAEM,UAAAA,QAAQ,EAAE;AAAZ,SAA5C;AAAmE,QAAA,SAAS,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,cAfF,eAiBE;AAAG,QAAA,OAAO,EAAEL,SAAZ;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,KAAK,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAA5C;AAAmE,QAAA,SAAS,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,cAjBF,eAmBE;AACA,QAAA,OAAO,EAAE,MAAMX,QAAQ,CAACD,KAAK,CAACa,EAAP,CADvB;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,SAAS,EAAC,gBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD,GAjEC;AAkED,CAtED;;GAAMd,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst VideoItem = ({ video, onDelete }) => {\n  // const [videos, setVideos] = useState([]);\n  const [rating, setRating] = useState(video.rating);\n\n  const handleUpVote = (videoToUpdate) => {\n\n    // Update the vote count for the video\n  //   const updatedVideosUpVote = videos.map((video) =>\n  //     video.id === videoToUpdate.id\n  //       ? { ...video, votes: video.votes + 1 }\n  //       : video\n  //   );\n  //   setVideos(updatedVideosUpVote);\n  // };\n\n  const incRating = () => {\n    setRating(rating + 1);\n  }\n\n  // Update the vote count for the video\n  // const handleDownVote = (videoToUpdate) => {\n  //   const updatedVideosDownVote = videos.map((video) =>\n  //     video.id === videoToUpdate.id\n  //       ? { ...video, votes: Math.max(video.votes - 1, 0) }\n  //       : video\n  //   );\n  //   setVideos(updatedVideosDownVote);\n  // };\n\n  const decRating = () => {\n    if (video.rating < video.rating ){\n      setRating(rating - 1);\n    } else{\n      setRating(video.rating)\n    }\n    \n  }\n\n  const videoId = video.url.split('v=')[1];\n  \n  return (\n    <div className=\"video-item\">  \n      <iframe \n      width=\"560\" \n      height=\"315\" \n      src={`https://www.youtube.com/embed/${videoId}`} \n      title=\"YouTube video player\" \n      // frameborder=\"0\" \n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n      // allowfullscreen\n      >\n      </iframe>\n      <h5>{video.title}</h5>\n      <p>Votes: {video.rating}</p>\n\n      {/* <i onClick={() => handleUpVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i> */}\n      <i onClick={incRating} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-up\"></i>\n      {/* <i onClick={() => handleDownVote(video.id)} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i> */}\n      <i onClick={decRating} type='button' style={{ fontSize: '24px' }}  className=\"fa fa-thumbs-down\"></i>\n      \n      <button\n      onClick={() => onDelete(video.id)}\n      type='button'\n      className='btn btn-danger'\n      >\n        Delete\n      </button>\n    </div>\n  ); \n}\n}\n\n\nexport default VideoItem;\n"]},"metadata":{},"sourceType":"module"}