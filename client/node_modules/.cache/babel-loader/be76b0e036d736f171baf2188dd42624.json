{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    children,\n    in: inProp = false,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    appear = false,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/OffcanvasToggling.js"],"names":["classNames","React","ENTERED","ENTERING","EXITING","transitionEndListener","TransitionWrapper","useBootstrapPrefix","jsx","_jsx","transitionStyles","OffcanvasToggling","forwardRef","ref","bsPrefix","className","children","in","inProp","mountOnEnter","unmountOnExit","appear","props","addEndListener","childRef","status","innerProps","cloneElement","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,OAA5B,QAA2C,mCAA3C;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,gBAAgB,GAAG;AACvB,GAACP,QAAD,GAAY,MADW;AAEvB,GAACD,OAAD,GAAW;AAFY,CAAzB;AAIA,MAAMS,iBAAiB,GAAG,aAAaV,KAAK,CAACW,UAAN,CAAiB,OASrDC,GATqD,KAS7C;AAAA,MAT8C;AACvDC,IAAAA,QADuD;AAEvDC,IAAAA,SAFuD;AAGvDC,IAAAA,QAHuD;AAIvDC,IAAAA,EAAE,EAAEC,MAAM,GAAG,KAJ0C;AAKvDC,IAAAA,YAAY,GAAG,KALwC;AAMvDC,IAAAA,aAAa,GAAG,KANuC;AAOvDC,IAAAA,MAAM,GAAG,KAP8C;AAQvD,OAAGC;AARoD,GAS9C;AACTR,EAAAA,QAAQ,GAAGP,kBAAkB,CAACO,QAAD,EAAW,WAAX,CAA7B;AACA,SAAO,aAAaL,IAAI,CAACH,iBAAD,EAAoB;AAC1CO,IAAAA,GAAG,EAAEA,GADqC;AAE1CU,IAAAA,cAAc,EAAElB,qBAF0B;AAG1CY,IAAAA,EAAE,EAAEC,MAHsC;AAI1CC,IAAAA,YAAY,EAAEA,YAJ4B;AAK1CC,IAAAA,aAAa,EAAEA,aAL2B;AAM1CC,IAAAA,MAAM,EAAEA,MANkC;AAO1C,OAAGC,KAPuC;AAQ1CE,IAAAA,QAAQ,EAAER,QAAQ,CAACH,GARuB;AAS1CG,IAAAA,QAAQ,EAAE,CAACS,MAAD,EAASC,UAAT,KAAwB,aAAazB,KAAK,CAAC0B,YAAN,CAAmBX,QAAnB,EAA6B,EAC1E,GAAGU,UADuE;AAE1EX,MAAAA,SAAS,EAAEf,UAAU,CAACe,SAAD,EAAYC,QAAQ,CAACM,KAAT,CAAeP,SAA3B,EAAsC,CAACU,MAAM,KAAKtB,QAAX,IAAuBsB,MAAM,KAAKrB,OAAnC,KAAgD,GAAEU,QAAS,WAAjG,EAA6GJ,gBAAgB,CAACe,MAAD,CAA7H;AAFqD,KAA7B;AATL,GAApB,CAAxB;AAcD,CAzBsC,CAAvC;AA0BAd,iBAAiB,CAACiB,WAAlB,GAAgC,mBAAhC;AACA,eAAejB,iBAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;"]},"metadata":{},"sourceType":"module"}