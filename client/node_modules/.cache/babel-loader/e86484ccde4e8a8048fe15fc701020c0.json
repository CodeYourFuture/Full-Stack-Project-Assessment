{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onura\\\\Documents\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AddVideo from './AddVideo';\nimport axios from 'axios';\nimport VideoTable from './VideoTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [order, setOrder] = useState('desc');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Update the URL to match the server endpoint (\"/\" in your case)\n        const response = await axios.get('http://localhost:5000/');\n        setVideos(response.data);\n      } catch (error) {\n        console.error('Error fetching data from the server:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAdd = newVideo => {\n    setVideos(prevVideos => [...prevVideos, newVideo]);\n  };\n\n  const toggleOrder = () => {\n    setOrder(order === 'asc' ? 'desc' : 'asc');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"embed-responsive embed-responsive-16by9\",\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                className: \"embed-responsive-item\",\n                src: video.url.startsWith(\"https://www.youtube.com/watch?v=\") ? convertWatchToEmbedLink(video.url) : video.url,\n                title: video.title,\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Uploaded: \", video.uploadDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+p/KuNkGCI9yLnAxDIm8Ui+Amas=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","useEffect","AddVideo","axios","VideoTable","App","videos","setVideos","order","setOrder","fetchData","response","get","data","error","console","handleAdd","newVideo","prevVideos","toggleOrder","map","video","title","url","startsWith","convertWatchToEmbedLink","uploadDate","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,MAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF;AACA,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,wBAAV,CAAvB;AACAL,QAAAA,SAAS,CAACI,QAAQ,CAACE,IAAV,CAAT;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,sCAAd,EAAsDA,KAAtD;AACD;AACF,KARD;;AAUAJ,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMM,SAAS,GAAIC,QAAD,IAAc;AAC9BV,IAAAA,SAAS,CAAEW,UAAD,IAAgB,CAAC,GAAGA,UAAJ,EAAgBD,QAAhB,CAAjB,CAAT;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBV,IAAAA,QAAQ,CAACD,KAAK,KAAK,KAAV,GAAkB,MAAlB,GAA2B,KAA5B,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGF,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACV;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BA,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,yCAAf;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,uBADZ;AAEE,gBAAA,GAAG,EACDD,KAAK,CAACE,GAAN,CAAUC,UAAV,CAAqB,kCAArB,IACIC,uBAAuB,CAACJ,KAAK,CAACE,GAAP,CAD3B,GAEIF,KAAK,CAACE,GALd;AAOE,gBAAA,KAAK,EAAEF,KAAK,CAACC,KAPf;AAQE,gBAAA,eAAe;AARjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAcE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,uCAAoCD,KAAK,CAACK,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAoCL,KAAK,CAACM,EAA1C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAvDQtB,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport AddVideo from './AddVideo';\r\nimport axios from 'axios';\r\nimport VideoTable from './VideoTable';\r\n\r\nfunction App() {\r\n  const [videos, setVideos] = useState([]);\r\n  const [order, setOrder] = useState('desc');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Update the URL to match the server endpoint (\"/\" in your case)\r\n        const response = await axios.get('http://localhost:5000/');\r\n        setVideos(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data from the server:', error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAdd = (newVideo) => {\r\n    setVideos((prevVideos) => [...prevVideos, newVideo]);\r\n  };\r\n\r\n  const toggleOrder = () => {\r\n    setOrder(order === 'asc' ? 'desc' : 'asc');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {videos.map((video) => (\r\n          <div className=\"col-md-3 mb-4\" key={video.id}>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{video.title}</h5>\r\n                <div className=\"embed-responsive embed-responsive-16by9\">\r\n                  <iframe\r\n                    className=\"embed-responsive-item\"\r\n                    src={\r\n                      video.url.startsWith(\"https://www.youtube.com/watch?v=\")\r\n                        ? convertWatchToEmbedLink(video.url)\r\n                        : video.url\r\n                    }\r\n                    title={video.title}\r\n                    allowFullScreen\r\n                  />\r\n                </div>\r\n                <p className=\"card-text\">Uploaded: {video.uploadDate}</p>\r\n                {/* Add Rating component here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}