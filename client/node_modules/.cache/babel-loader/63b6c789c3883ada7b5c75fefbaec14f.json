{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideosList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Video from \"./Video\";\nimport AddVideo from \"./AddVideo\";\nimport \"../index.css\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideosList() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchResult, setSearchResult] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5050/videos\").then(res => res.json()).then(data => {\n      console.log(data);\n      setVideos(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n\n  const newVideo = newInput => {\n    newInput.id = videos.length + 1;\n    newInput.rating = 0;\n    fetch(\"http://127.0.0.1:5050/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      },\n      body: JSON.stringify(newInput)\n    }).then(res => {\n      fetchVideos();\n      return res.json();\n    }).then(data => {\n      if (data && data.message === \"Video stored successfully\") {\n        setVideos([...videos, newInput]);\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      alert(\"Something went wrong\");\n    });\n  };\n\n  const deleteVideoItem = videoId => {\n    fetch(`http://127.0.0.1:5050/videos/${videoId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      }\n    }).then(res => {\n      const videoDeleted = videos.filter(el => el.id !== videoId);\n      res.setVideos(videoDeleted);\n    });\n  };\n\n  const fetchVideos = () => {\n    fetch(\"http://127.0.0.1:5050/videos/$\").then(res => res.json()).then(data => {\n      setVideos(data);\n      searchResult(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  };\n\n  const searchByName = () => {\n    fetch(`http://127.0.0.1:5050/videos/search?query`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/JSON\"\n      }\n    }).then(res => res.json()).then(data => {\n      setSearchResult(data);\n      console.log(data);\n    });\n  };\n\n  const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: searchByName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddVideo, {\n      onVidAdd: newVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: searchResult.length > 0 ? searchResult.map(video => /*#__PURE__*/_jsxDEV(Video, {\n        videoObj: video,\n        deleteVideo: deleteVideoItem\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 39\n      }, this)) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : sortedVideos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n        videoObj: video,\n        deleteVideo: deleteVideoItem\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VideosList, \"EXx38FZWUjOdDNM/gjHNO2MFzgI=\");\n\n_c = VideosList;\nexport default VideosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideosList\");","map":{"version":3,"sources":["/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideosList.jsx"],"names":["React","useEffect","useState","Video","AddVideo","Search","VideosList","videos","setVideos","loading","setLoading","searchResult","setSearchResult","fetch","then","res","json","data","console","log","catch","error","newVideo","newInput","id","length","rating","method","headers","body","JSON","stringify","fetchVideos","message","alert","deleteVideoItem","videoId","videoDeleted","filter","el","searchByName","sortedVideos","sort","a","b","map","video"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,SAAS,CAACS,IAAD,CAAT;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KANH,EAOGU,KAPH,CAOUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BA,IAAAA,QAAQ,CAACC,EAAT,GAAcjB,MAAM,CAACkB,MAAP,GAAgB,CAA9B;AACAF,IAAAA,QAAQ,CAACG,MAAT,GAAkB,CAAlB;AACAb,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCc,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAL8B,KAAjC,CAAL,CAOGT,IAPH,CAOSC,GAAD,IAAS;AACbiB,MAAAA,WAAW;AACX,aAAOjB,GAAG,CAACC,IAAJ,EAAP;AACD,KAVH,EAWGF,IAXH,CAWSG,IAAD,IAAU;AACd,UAAIA,IAAI,IAAIA,IAAI,CAACgB,OAAL,KAAiB,2BAA7B,EAA0D;AACxDzB,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYgB,QAAZ,CAAD,CAAT;AACD;AACF,KAfH,EAgBGH,KAhBH,CAgBUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAa,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,KAnBH;AAoBD,GAvBD;;AAyBA,QAAMC,eAAe,GAAIC,OAAD,IAAa;AACnCvB,IAAAA,KAAK,CAAE,gCAA+BuB,OAAQ,EAAzC,EAA4C;AAC/CT,MAAAA,MAAM,EAAE,QADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFsC,KAA5C,CAAL,CAKGd,IALH,CAKSC,GAAD,IAAS;AACf,YAAMsB,YAAY,GAAG9B,MAAM,CAAC+B,MAAP,CAAeC,EAAD,IAAQA,EAAE,CAACf,EAAH,KAAUY,OAAhC,CAArB;AACArB,MAAAA,GAAG,CAACP,SAAJ,CAAc6B,YAAd;AACD,KARD;AASD,GAVD;;AAYA,QAAML,WAAW,GAAG,MAAM;AACxBnB,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdT,MAAAA,SAAS,CAACS,IAAD,CAAT;AACAN,MAAAA,YAAY,CAACM,IAAD,CAAZ;AACD,KALH,EAMGG,KANH,CAMUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KARH;AASD,GAVD;;AAWA,QAAMmB,YAAY,GAAG,MAAM;AACzB3B,IAAAA,KAAK,CAAE,2CAAF,EAA8C;AACjDc,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFwC,KAA9C,CAAL,CAIGd,IAJH,CAISC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJjB,EAKGF,IALH,CAKSG,IAAD,IAAU;AACdL,MAAAA,eAAe,CAACK,IAAD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KARH;AASD,GAVD;;AAWA,QAAMwB,YAAY,GAAG,CAAC,GAAGlC,MAAJ,EAAYmC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAClB,MAAF,GAAWiB,CAAC,CAACjB,MAAxC,CAArB;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEc;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAElB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGX,YAAY,CAACc,MAAb,GAAsB,CAAtB,GACCd,YAAY,CAACkC,GAAb,CAAkBC,KAAD,iBAAW,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA,KAAjB;AAAuC,QAAA,WAAW,EAAEX;AAApD,SAA6BW,KAAK,CAACtB,EAAnC;AAAA;AAAA;AAAA;AAAA,cAA5B,CADD,GAEGf,OAAO,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,GAGTgC,YAAY,CAACI,GAAb,CAAkBC,KAAD,iBAAW,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA,KAAjB;AAAuC,QAAA,WAAW,EAAEX;AAApD,SAA6BW,KAAK,CAACtB,EAAnC;AAAA;AAAA;AAAA;AAAA,cAA5B;AANJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAeD;;GA7FQlB,U;;KAAAA,U;AA+FT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Video from \"./Video\";\nimport AddVideo from \"./AddVideo\";\nimport \"../index.css\";\nimport Search from \"./Search\";\n\nfunction VideosList() {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchResult, setSearchResult] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5050/videos\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setVideos(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const newVideo = (newInput) => {\n    newInput.id = videos.length + 1;\n    newInput.rating = 0;\n    fetch(\"http://127.0.0.1:5050/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n      },\n      body: JSON.stringify(newInput),\n    })\n      .then((res) => {\n        fetchVideos();\n        return res.json();\n      })\n      .then((data) => {\n        if (data && data.message === \"Video stored successfully\") {\n          setVideos([...videos, newInput]);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        alert(\"Something went wrong\");\n      });\n  };\n\n  const deleteVideoItem = (videoId) => {\n    fetch(`http://127.0.0.1:5050/videos/${videoId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n      },\n    }).then((res) => {\n      const videoDeleted = videos.filter((el) => el.id !== videoId);\n      res.setVideos(videoDeleted);\n    });\n  };\n\n  const fetchVideos = () => {\n    fetch(\"http://127.0.0.1:5050/videos/$\")\n      .then((res) => res.json())\n      .then((data) => {\n        setVideos(data);\n        searchResult(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  };\n  const searchByName = () => {\n    fetch(`http://127.0.0.1:5050/videos/search?query`, {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/JSON\" },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setSearchResult(data);\n        console.log(data)\n      });\n  };\n  const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n  return (\n    <>\n      <Search onSearch={searchByName} />\n      <AddVideo onVidAdd={newVideo} />\n      <div className=\"container mt-5\">\n        {searchResult.length > 0 ? (\n          searchResult.map((video) => <Video videoObj={video} key={video.id} deleteVideo={deleteVideoItem} />)\n        ) : loading ? (\n          <p>Loading...</p>\n        ) : (\n          sortedVideos.map((video) => <Video videoObj={video} key={video.id} deleteVideo={deleteVideoItem} />)\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default VideosList;\n"]},"metadata":{},"sourceType":"module"}