{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// function ShowingVideos(props) {\n//   const [videos, setVideos] = useState(props.result);\n//   function convertToEmbedUrl(url) {\n//     const videoId = url.split(\"v=\")[1];\n//     return `https://www.youtube.com/embed/${videoId}`;\n//   }\n//   function deleteVideo(id) {\n//     const updatedVideos = videos.filter((video) => video.id !== id);\n//     setVideos(updatedVideos);\n//   }\n//   function handleRating(id, type) {\n//     const updatedVideos = videos.map((video) => {\n//       if (video.id === id) {\n//         if (type === \"thumbs-up\") {\n//           return { ...video, rating: video.rating + 1 };\n//         } else if (type === \"thumbs-down\") {\n//           return { ...video, rating: video.rating - 1 };\n//         }\n//       }\n//       return video;\n//     });\n//     setVideos(updatedVideos);\n//   }\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n//   return (\n//     <div className=\"ShowingVideos\">\n//       {sortedVideos.map((video) => (\n//         <div className=\"videos\" key={video.id}>\n//           <p>{video.title}</p>\n//           <div className=\"buttons\">\n//             <i\n//               className=\"fa-solid fa-thumbs-up\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//             <h4>{video.rating}</h4>\n//             <i\n//               className=\"fa-solid fa-thumbs-down\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//           </div>\n//           <iframe\n//             className=\"allVideos\"\n//             width=\"300\"\n//             height=\"220\"\n//             src={convertToEmbedUrl(video.url)}\n//             title={video.title}\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//           <button onClick={() => deleteVideo(video.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n// export default ShowingVideos;\n// import React, { useState } from \"react\";\n// // function ShowingVideos(props) {\n// //   const [videos, setVideos] = useState(props.result);\n// //   function convertToEmbedUrl(url) {\n// //     const videoId = url.split(\"v=\")[1];\n// //     return `https://www.youtube.com/embed/${videoId}`;\n// //   }\n// //   function deleteVideo(id) {\n// //     const updatedVideos = videos.filter((video) => video.id !== id);\n// //     setVideos(updatedVideos);\n// //   }\n// //   function handleRating(id, type) {\n// //     const updatedVideos = videos.map((video) => {\n// //       if (video.id === id) {\n// //         if (type === \"thumbs-up\") {\n// //           return { ...video, rating: video.rating + 1 };\n// //         } else if (type === \"thumbs-down\") {\n// //           return { ...video, rating: video.rating - 1 };\n// //         }\n// //       }\n// //       return video;\n// //     });\n// //     setVideos(updatedVideos);\n// //   }\n// //   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n// //   return (\n// //     <div className=\"ShowingVideos\">\n// //       {sortedVideos.map((video) => (\n// //         <div className=\"videos\" key={video.id}>\n// //           <p>{video.title}</p>\n// //           <div className=\"buttons\">\n// //             <i\n// //               className=\"fa-solid fa-thumbs-up\"\n// //               onClick={() => handleRating(video.id, \"thumbs-up\")}\n// //             ></i>\n// //             <h4>{video.rating}</h4>\n// //             <i\n// //               className=\"fa-solid fa-thumbs-down\"\n// //               onClick={() => handleRating(video.id, \"thumbs-down\")}\n// //             ></i>\n// //           </div>\n// //           <iframe\n// //             className=\"allVideos\"\n// //             width=\"300\"\n// //             height=\"220\"\n// //             src={convertToEmbedUrl(video.url)}\n// //             title={video.title}\n// //             frameBorder=\"0\"\n// //             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n// //             allowFullScreen\n// //           ></iframe>\n// //           <button onClick={() => deleteVideo(video.id)}>Delete</button>\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n// // export default ShowingVideos;\n// import React, { useState, useEffect } from \"react\";\n// function ShowingVideos() {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     fetch(\"http://127.0.0.1:5000\")\n//       .then((response) => {\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setVideos(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//   }, []);\n//   function convertToEmbedUrl(url) {\n//     const videoId = url.split(\"v=\")[1];\n//     return `https://www.youtube.com/embed/${videoId}`;\n//   }\n//   function deleteVideo(id) {\n//     fetch(`http://127.0.0.1:5000/${id}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => {\n//         response.json();\n//         setVideos((prevVideos) =>\n//           prevVideos.filter((video) => video.id !== id)\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting video:\", error);\n//       });\n//   }\n//   function handleRating(id, type) {\n//     fetch(`http://127.0.0.1:5000/rate/${id}/${type}`, {\n//       method: \"PUT\",\n//     })\n//       .then((response) => {\n//         return response.json();\n//       })\n//       .then((updatedVideo) => {\n//         setVideos((prevVideos) =>\n//           prevVideos.map((video) => {\n//             if (video.id === id) {\n//               return { ...video, rating: updatedVideo.rating };\n//             }\n//             return video;\n//           })\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error updating rating:\", error);\n//       });\n//   }\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n//   return (\n//     <div className=\"ShowingVideos\">\n//       {sortedVideos.map((video) => (\n//         <div className=\"videos\" key={video.id}>\n//           <p>{video.title}</p>\n//           <div className=\"buttons\">\n//             <i\n//               className=\"fa-solid fa-thumbs-up\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//             <h4>{video.rating}</h4>\n//             <i\n//               className=\"fa-solid fa-thumbs-down\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//           </div>\n//           <iframe\n//             className=\"allVideos\"\n//             width=\"300\"\n//             height=\"220\"\n//             src={convertToEmbedUrl(video.url)}\n//             title={video.title}\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//           <button onClick={() => deleteVideo(video.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n// export default ShowingVideos;\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [orderBy, setOrderBy] = useState(\"desc\"); // Default ordering is descending\n\n  useEffect(() => {\n    // Fetch data from the server based on the current orderBy value\n    fetch(`http://127.0.0.1:5000/?order=${orderBy}`).then(response => response.json()).then(data => {\n      setVideos(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, [orderBy]); // Toggle the orderBy value when the button is clicked\n\n  const toggleOrder = () => {\n    setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\n  };\n\n  const convertToEmbedUrl = url => {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  };\n\n  const deleteVideo = id => {\n    fetch(`http://127.0.0.1:5000/${id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      response.json();\n      setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n    }).catch(error => {\n      console.error(\"Error deleting video:\", error);\n    });\n  };\n\n  const handleRating = (id, type) => {\n    fetch(`http://127.0.0.1:5000/rate/${id}/${type}`, {\n      method: \"PUT\"\n    }).then(response => {\n      return response.json();\n    }).then(updatedVideo => {\n      setVideos(prevVideos => prevVideos.map(video => {\n        if (video.id === id) {\n          return { ...video,\n            rating: updatedVideo.rating\n          };\n        }\n\n        return video;\n      }));\n    }).catch(error => {\n      console.error(\"Error updating rating:\", error);\n    });\n  };\n\n  const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShowingVideos\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleOrder,\n      children: orderBy === \"asc\" ? \"Order Ascending\" : \"Order Descending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), sortedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-up\",\n          onClick: () => handleRating(video.id, \"up\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: video.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-down\",\n          onClick: () => handleRating(video.id, \"down\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"allVideos\",\n        width: \"300\",\n        height: \"220\",\n        src: convertToEmbedUrl(video.url),\n        title: video.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteVideo(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowingVideos, \"oO/dRP0bhbnX51KVt1r27sjnlVk=\");\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","useState","useEffect","ShowingVideos","videos","setVideos","orderBy","setOrderBy","fetch","then","response","json","data","catch","error","console","toggleOrder","convertToEmbedUrl","url","videoId","split","deleteVideo","id","method","prevVideos","filter","video","handleRating","type","updatedVideo","map","rating","sortedVideos","sort","a","b","title"],"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","sourcesContent":["// import React, { useState } from \"react\";\n\n// function ShowingVideos(props) {\n//   const [videos, setVideos] = useState(props.result);\n\n//   function convertToEmbedUrl(url) {\n//     const videoId = url.split(\"v=\")[1];\n//     return `https://www.youtube.com/embed/${videoId}`;\n//   }\n\n//   function deleteVideo(id) {\n//     const updatedVideos = videos.filter((video) => video.id !== id);\n//     setVideos(updatedVideos);\n//   }\n\n//   function handleRating(id, type) {\n//     const updatedVideos = videos.map((video) => {\n//       if (video.id === id) {\n//         if (type === \"thumbs-up\") {\n//           return { ...video, rating: video.rating + 1 };\n//         } else if (type === \"thumbs-down\") {\n//           return { ...video, rating: video.rating - 1 };\n//         }\n//       }\n//       return video;\n//     });\n\n//     setVideos(updatedVideos);\n//   }\n\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n//   return (\n//     <div className=\"ShowingVideos\">\n//       {sortedVideos.map((video) => (\n//         <div className=\"videos\" key={video.id}>\n//           <p>{video.title}</p>\n//           <div className=\"buttons\">\n//             <i\n//               className=\"fa-solid fa-thumbs-up\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//             <h4>{video.rating}</h4>\n//             <i\n//               className=\"fa-solid fa-thumbs-down\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//           </div>\n\n//           <iframe\n//             className=\"allVideos\"\n//             width=\"300\"\n//             height=\"220\"\n//             src={convertToEmbedUrl(video.url)}\n//             title={video.title}\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//           <button onClick={() => deleteVideo(video.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default ShowingVideos;\n\n// import React, { useState } from \"react\";\n\n// // function ShowingVideos(props) {\n// //   const [videos, setVideos] = useState(props.result);\n\n// //   function convertToEmbedUrl(url) {\n// //     const videoId = url.split(\"v=\")[1];\n// //     return `https://www.youtube.com/embed/${videoId}`;\n// //   }\n\n// //   function deleteVideo(id) {\n// //     const updatedVideos = videos.filter((video) => video.id !== id);\n// //     setVideos(updatedVideos);\n// //   }\n\n// //   function handleRating(id, type) {\n// //     const updatedVideos = videos.map((video) => {\n// //       if (video.id === id) {\n// //         if (type === \"thumbs-up\") {\n// //           return { ...video, rating: video.rating + 1 };\n// //         } else if (type === \"thumbs-down\") {\n// //           return { ...video, rating: video.rating - 1 };\n// //         }\n// //       }\n// //       return video;\n// //     });\n\n// //     setVideos(updatedVideos);\n// //   }\n\n// //   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n// //   return (\n// //     <div className=\"ShowingVideos\">\n// //       {sortedVideos.map((video) => (\n// //         <div className=\"videos\" key={video.id}>\n// //           <p>{video.title}</p>\n// //           <div className=\"buttons\">\n// //             <i\n// //               className=\"fa-solid fa-thumbs-up\"\n// //               onClick={() => handleRating(video.id, \"thumbs-up\")}\n// //             ></i>\n// //             <h4>{video.rating}</h4>\n// //             <i\n// //               className=\"fa-solid fa-thumbs-down\"\n// //               onClick={() => handleRating(video.id, \"thumbs-down\")}\n// //             ></i>\n// //           </div>\n\n// //           <iframe\n// //             className=\"allVideos\"\n// //             width=\"300\"\n// //             height=\"220\"\n// //             src={convertToEmbedUrl(video.url)}\n// //             title={video.title}\n// //             frameBorder=\"0\"\n// //             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n// //             allowFullScreen\n// //           ></iframe>\n// //           <button onClick={() => deleteVideo(video.id)}>Delete</button>\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n\n// // export default ShowingVideos;\n// import React, { useState, useEffect } from \"react\";\n\n// function ShowingVideos() {\n//   const [videos, setVideos] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://127.0.0.1:5000\")\n//       .then((response) => {\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setVideos(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//   }, []);\n\n//   function convertToEmbedUrl(url) {\n//     const videoId = url.split(\"v=\")[1];\n//     return `https://www.youtube.com/embed/${videoId}`;\n//   }\n\n//   function deleteVideo(id) {\n//     fetch(`http://127.0.0.1:5000/${id}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => {\n//         response.json();\n//         setVideos((prevVideos) =>\n//           prevVideos.filter((video) => video.id !== id)\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting video:\", error);\n//       });\n//   }\n\n//   function handleRating(id, type) {\n//     fetch(`http://127.0.0.1:5000/rate/${id}/${type}`, {\n//       method: \"PUT\",\n//     })\n//       .then((response) => {\n//         return response.json();\n//       })\n//       .then((updatedVideo) => {\n//         setVideos((prevVideos) =>\n//           prevVideos.map((video) => {\n//             if (video.id === id) {\n//               return { ...video, rating: updatedVideo.rating };\n//             }\n//             return video;\n//           })\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error updating rating:\", error);\n//       });\n//   }\n\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n//   return (\n//     <div className=\"ShowingVideos\">\n//       {sortedVideos.map((video) => (\n//         <div className=\"videos\" key={video.id}>\n//           <p>{video.title}</p>\n//           <div className=\"buttons\">\n//             <i\n//               className=\"fa-solid fa-thumbs-up\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//             <h4>{video.rating}</h4>\n//             <i\n//               className=\"fa-solid fa-thumbs-down\"\n//               onClick={() => handleRating(video.id)}\n//             ></i>\n//           </div>\n\n//           <iframe\n//             className=\"allVideos\"\n//             width=\"300\"\n//             height=\"220\"\n//             src={convertToEmbedUrl(video.url)}\n//             title={video.title}\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//           <button onClick={() => deleteVideo(video.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default ShowingVideos;\nimport React, { useState, useEffect } from \"react\";\n\nfunction ShowingVideos() {\n  const [videos, setVideos] = useState([]);\n  const [orderBy, setOrderBy] = useState(\"desc\"); // Default ordering is descending\n\n  useEffect(() => {\n    // Fetch data from the server based on the current orderBy value\n    fetch(`http://127.0.0.1:5000/?order=${orderBy}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setVideos(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, [orderBy]);\n\n  // Toggle the orderBy value when the button is clicked\n  const toggleOrder = () => {\n    setOrderBy(orderBy === \"asc\" ? \"desc\" : \"asc\");\n  };\n\n  const convertToEmbedUrl = (url) => {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  };\n\n  const deleteVideo = (id) => {\n    fetch(`http://127.0.0.1:5000/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        response.json();\n        setVideos((prevVideos) =>\n          prevVideos.filter((video) => video.id !== id)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error deleting video:\", error);\n      });\n  };\n\n  const handleRating = (id, type) => {\n    fetch(`http://127.0.0.1:5000/rate/${id}/${type}`, {\n      method: \"PUT\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((updatedVideo) => {\n        setVideos((prevVideos) =>\n          prevVideos.map((video) => {\n            if (video.id === id) {\n              return { ...video, rating: updatedVideo.rating };\n            }\n            return video;\n          })\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error updating rating:\", error);\n      });\n  };\n\n  const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n  return (\n    <div className=\"ShowingVideos\">\n      <button onClick={toggleOrder}>\n        {orderBy === \"asc\" ? \"Order Ascending\" : \"Order Descending\"}\n      </button>\n\n      {sortedVideos.map((video) => (\n        <div className=\"videos\" key={video.id}>\n          <p>{video.title}</p>\n          <div className=\"buttons\">\n            <i\n              className=\"fa-solid fa-thumbs-up\"\n              onClick={() => handleRating(video.id, \"up\")}\n            ></i>\n            <h4>{video.rating}</h4>\n            <i\n              className=\"fa-solid fa-thumbs-down\"\n              onClick={() => handleRating(video.id, \"down\")}\n            ></i>\n          </div>\n\n          <iframe\n            className=\"allVideos\"\n            width=\"300\"\n            height=\"220\"\n            src={convertToEmbedUrl(video.url)}\n            title={video.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <button onClick={() => deleteVideo(video.id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}