{"ast":null,"code":"var xor = require('buffer-xor');\nvar Buffer = require('safe-buffer').Buffer;\nvar incr32 = require('../incr32');\nfunction getBlock(self) {\n  var out = self._cipher.encryptBlockRaw(self._prev);\n  incr32(self._prev);\n  return out;\n}\nvar blockSize = 16;\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize);\n  var start = self._cache.length;\n  self._cache = Buffer.concat([self._cache, Buffer.allocUnsafe(chunkNum * blockSize)]);\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self);\n    var offset = start + i * blockSize;\n    self._cache.writeUInt32BE(out[0], offset + 0);\n    self._cache.writeUInt32BE(out[1], offset + 4);\n    self._cache.writeUInt32BE(out[2], offset + 8);\n    self._cache.writeUInt32BE(out[3], offset + 12);\n  }\n  var pad = self._cache.slice(0, chunk.length);\n  self._cache = self._cache.slice(chunk.length);\n  return xor(chunk, pad);\n};","map":{"version":3,"names":["xor","require","Buffer","incr32","getBlock","self","out","_cipher","encryptBlockRaw","_prev","blockSize","exports","encrypt","chunk","chunkNum","Math","ceil","length","start","_cache","concat","allocUnsafe","i","offset","writeUInt32BE","pad","slice"],"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/browserify-aes/modes/ctr.js"],"sourcesContent":["var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC/B,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAa,CAAC,CAACC,MAAM;AAC1C,IAAIC,MAAM,GAAGF,OAAO,CAAC,WAAW,CAAC;AAEjC,SAASG,QAAQA,CAAEC,IAAI,EAAE;EACvB,IAAIC,GAAG,GAAGD,IAAI,CAACE,OAAO,CAACC,eAAe,CAACH,IAAI,CAACI,KAAK,CAAC;EAClDN,MAAM,CAACE,IAAI,CAACI,KAAK,CAAC;EAClB,OAAOH,GAAG;AACZ;AAEA,IAAII,SAAS,GAAG,EAAE;AAClBC,OAAO,CAACC,OAAO,GAAG,UAAUP,IAAI,EAAEQ,KAAK,EAAE;EACvC,IAAIC,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,GAAGP,SAAS,CAAC;EAClD,IAAIQ,KAAK,GAAGb,IAAI,CAACc,MAAM,CAACF,MAAM;EAC9BZ,IAAI,CAACc,MAAM,GAAGjB,MAAM,CAACkB,MAAM,CAAC,CAC1Bf,IAAI,CAACc,MAAM,EACXjB,MAAM,CAACmB,WAAW,CAACP,QAAQ,GAAGJ,SAAS,CAAC,CACzC,CAAC;EACF,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,QAAQ,EAAEQ,CAAC,EAAE,EAAE;IACjC,IAAIhB,GAAG,GAAGF,QAAQ,CAACC,IAAI,CAAC;IACxB,IAAIkB,MAAM,GAAGL,KAAK,GAAGI,CAAC,GAAGZ,SAAS;IAClCL,IAAI,CAACc,MAAM,CAACK,aAAa,CAAClB,GAAG,CAAC,CAAC,CAAC,EAAEiB,MAAM,GAAG,CAAC,CAAC;IAC7ClB,IAAI,CAACc,MAAM,CAACK,aAAa,CAAClB,GAAG,CAAC,CAAC,CAAC,EAAEiB,MAAM,GAAG,CAAC,CAAC;IAC7ClB,IAAI,CAACc,MAAM,CAACK,aAAa,CAAClB,GAAG,CAAC,CAAC,CAAC,EAAEiB,MAAM,GAAG,CAAC,CAAC;IAC7ClB,IAAI,CAACc,MAAM,CAACK,aAAa,CAAClB,GAAG,CAAC,CAAC,CAAC,EAAEiB,MAAM,GAAG,EAAE,CAAC;EAChD;EACA,IAAIE,GAAG,GAAGpB,IAAI,CAACc,MAAM,CAACO,KAAK,CAAC,CAAC,EAAEb,KAAK,CAACI,MAAM,CAAC;EAC5CZ,IAAI,CAACc,MAAM,GAAGd,IAAI,CAACc,MAAM,CAACO,KAAK,CAACb,KAAK,CAACI,MAAM,CAAC;EAC7C,OAAOjB,GAAG,CAACa,KAAK,EAAEY,GAAG,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"script"}