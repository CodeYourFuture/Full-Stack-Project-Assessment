{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    WebkitTapHighlightColor: 'transparent',\n    marginLeft: -11,\n    marginRight: 16,\n    // used for row presentation of radio/checkbox\n    [`&.${formControlLabelClasses.disabled}`]: {\n      cursor: 'default'\n    }\n  }, ownerState.labelPlacement === 'start' && {\n    flexDirection: 'row-reverse',\n    marginLeft: 16,\n    // used for row presentation of radio/checkbox\n    marginRight: -11\n  }, ownerState.labelPlacement === 'top' && {\n    flexDirection: 'column-reverse',\n    marginLeft: 16\n  }, ownerState.labelPlacement === 'bottom' && {\n    flexDirection: 'column',\n    marginLeft: 16\n  }, {\n    [`& .${formControlLabelClasses.label}`]: {\n      [`&.${formControlLabelClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      }\n    }\n  });\n});\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    [`&.${formControlLabelClasses.error}`]: {\n      color: (theme.vars || theme).palette.error.main\n    }\n  };\n});\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end',\n    required: requiredProp,\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","useFormControl","Stack","Typography","capitalize","styled","useThemeProps","formControlLabelClasses","getFormControlLabelUtilityClasses","formControlState","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disabled","labelPlacement","error","required","slots","root","label","asterisk","FormControlLabelRoot","name","slot","overridesResolver","props","styles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","vars","palette","text","AsteriskComponent","main","FormControlLabel","forwardRef","inProps","ref","_ref","_slotProps$typography","className","componentsProps","control","disabledProp","disableTypography","labelProp","requiredProp","slotProps","other","muiFormControl","controlProps","forEach","key","fcs","states","typographySlotProps","typography","type","component","children","cloneElement","direction","process","env","NODE_ENV","propTypes","checked","bool","object","string","shape","element","isRequired","inputRef","node","oneOf","onChange","func","sx","oneOfType","arrayOf","value","any"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"]},"metadata":{},"sourceType":"module"}