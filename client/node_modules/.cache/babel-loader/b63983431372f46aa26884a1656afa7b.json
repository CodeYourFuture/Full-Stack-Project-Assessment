{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Portal } from '../Portal';\nimport { ModalManager, ariaHidden } from './ModalManager';\nimport { FocusTrap } from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\n * *   [Menu](https://mui.com/material-ui/api/menu/)\n * *   [Popover](https://mui.com/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/)\n *\n * API:\n *\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _props$ariaHidden, _slots$root;\n\n  const {\n    children,\n    closeAfterTransition = false,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    manager: managerProp = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n    onTransitionEnter,\n    onTransitionExited,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded); // TODO: `modal`` must change its type in this file to match the type of methods\n  // provided by `ModalManager`\n\n\n  const manager = managerProp;\n  const [exited, setExited] = React.useState(!open);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, forwardedRef);\n  const hasTransition = getHasTransition(children);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node || !modalRef.current) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal // @ts-expect-error TODO: include ref to Base UI Portal props\n  , {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Modal };","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/Modal/Modal.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","unstable_composeClasses","composeClasses","Portal","ModalManager","ariaHidden","FocusTrap","getModalUtilityClass","useSlotProps","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","slots","root","backdrop","getContainer","container","getHasTransition","children","props","hasOwnProperty","defaultManager","Modal","forwardRef","forwardedRef","_props$ariaHidden","_slots$root","closeAfterTransition","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","managerProp","onBackdropClick","onClose","onKeyDown","onTransitionEnter","onTransitionExited","slotProps","other","setExited","useState","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","classes","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","role","className","BackdropComponent","backdropProps","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","bool","oneOfType","func","shape","object"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Portal } from '../Portal';\nimport { ModalManager, ariaHidden } from './ModalManager';\nimport { FocusTrap } from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst defaultManager = new ModalManager();\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\n * *   [Menu](https://mui.com/material-ui/api/menu/)\n * *   [Popover](https://mui.com/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/)\n *\n * API:\n *\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _props$ariaHidden, _slots$root;\n  const {\n      children,\n      closeAfterTransition = false,\n      container,\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      // private\n      manager: managerProp = defaultManager,\n      onBackdropClick,\n      onClose,\n      onKeyDown,\n      open,\n      onTransitionEnter,\n      onTransitionExited,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  // TODO: `modal`` must change its type in this file to match the type of methods\n  // provided by `ModalManager`\n  const manager = managerProp;\n  const [exited, setExited] = React.useState(!open);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, forwardedRef);\n  const hasTransition = getHasTransition(children);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node || !modalRef.current) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const ownerState = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleEnter = () => {\n    setExited(false);\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n  const handleExited = () => {\n    setExited(true);\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal\n  // @ts-expect-error TODO: include ref to Base UI Portal props\n  , {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Modal };"]},"metadata":{},"sourceType":"module"}