{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useControlled as useControlled, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible, visuallyHidden } from '@mui/utils';\nimport { areArraysEqual } from '../utils';\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\n\nfunction asc(a, b) {\n  return a - b;\n}\n\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n\nfunction findClosest(values, currentValue) {\n  var _values$reduce;\n\n  const {\n    index: closestIndex\n  } = (_values$reduce = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n\n    return acc;\n  }, null)) != null ? _values$reduce : {};\n  return closestIndex;\n}\n\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  } // The event is MouseEvent\n\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction setValueIndex(_ref) {\n  let {\n    values,\n    newValue,\n    index\n  } = _ref;\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\n\nfunction focusThumb(_ref2) {\n  let {\n    sliderRef,\n    activeIndex,\n    setActive\n  } = _ref2;\n\n  var _sliderRef$current, _doc$activeElement;\n\n  const doc = ownerDocument(sliderRef.current);\n\n  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null || (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute('data-index')) !== activeIndex) {\n    var _sliderRef$current2;\n\n    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n\nfunction areValuesEqual(newValue, oldValue) {\n  if (typeof newValue === 'number' && typeof oldValue === 'number') {\n    return newValue === oldValue;\n  }\n\n  if (typeof newValue === 'object' && typeof oldValue === 'object') {\n    return areArraysEqual(newValue, oldValue);\n  }\n\n  return false;\n}\n\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nexport const Identity = x => x; // TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\n\nlet cachedSupportsTouchActionNone;\n\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n\n  return cachedSupportsTouchActionNone;\n}\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Slider](https://mui.com/base-ui/react-slider/#hook)\r\n *\r\n * API:\r\n *\r\n * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)\r\n */\n\n\nexport function useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    rootRef: ref,\n    scale = Identity,\n    step = 1,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef(); // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue != null ? defaultValue : min,\n    name: 'Slider'\n  });\n\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event; // @ts-ignore The nativeEvent is function, not object\n\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  const handleRef = useForkRef(ref, handleFocusRef);\n\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusedThumbIndex(index);\n    }\n\n    setOpen(index);\n    otherHandlers == null || (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n  };\n\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusedThumbIndex(-1);\n    }\n\n    setOpen(-1);\n    otherHandlers == null || (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      var _document$activeEleme; // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n\n\n      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();\n    }\n  }, [disabled]);\n\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    var _otherHandlers$onChan;\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value); // @ts-ignore\n\n    let newValue = event.target.valueAsNumber;\n\n    if (marks && step == null) {\n      const maxMarksValue = marksValues[marksValues.length - 1];\n\n      if (newValue > maxMarksValue) {\n        newValue = maxMarksValue;\n      } else if (newValue < marksValues[0]) {\n        newValue = marksValues[0];\n      } else {\n        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n      }\n    }\n\n    newValue = clamp(newValue, min, max);\n\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index; // Potentially swap the index if needed.\n\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(event, newValue, index);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n\n  const previousIndex = React.useRef();\n  let axis = orientation;\n\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n\n  const getFingerNewValue = _ref3 => {\n    let {\n      finger,\n      move = false\n    } = _ref3;\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      } // Bound the new value to the thumb's neighbours.\n\n\n      if (disableSwap) {\n        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      }); // Potentially swap the index if needed.\n\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    moveCount.current += 1; // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n\n    if (!finger) {\n      return;\n    }\n\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n\n    touchId.current = undefined; // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    } // If touch-action: none; is not supported we need to prevent the scroll manually.\n\n\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n\n    const touch = nativeEvent.changedTouches[0];\n\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      // @ts-ignore\n      slider.removeEventListener('touchstart', handleTouchStart, {\n        passive: doesSupportTouchActionNone()\n      });\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (disabled) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    } // Only handle left clicks\n\n\n    if (event.button !== 0) {\n      return;\n    } // Avoid text selection\n\n\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(otherHandlers || {})\n    };\n\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n\n    return _extends({\n      ref: handleRef\n    }, mergedEventHandlers);\n  };\n\n  const createHandleMouseOver = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n\n    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous3;\n\n    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n    setOpen(-1);\n  };\n\n  const getThumbProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(otherHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(otherHandlers || {})\n    };\n    return _extends({}, otherHandlers, ownEventHandlers);\n  };\n\n  const getThumbStyle = index => {\n    return {\n      // So the non active thumb doesn't show its label on hover.\n      pointerEvents: active !== -1 && active !== index ? 'none' : undefined\n    };\n  };\n\n  const getHiddenInputProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _parameters$step;\n\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(otherHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(otherHandlers || {})\n    };\n\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n\n    return _extends({\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: parameters.step === null && parameters.marks ? 'any' : (_parameters$step = parameters.step) != null ? _parameters$step : undefined,\n      disabled\n    }, mergedEventHandlers, {\n      style: _extends({}, visuallyHidden, {\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      })\n    });\n  };\n\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    rootRef: handleRef,\n    trackLeap,\n    trackOffset,\n    values,\n    getThumbStyle\n  };\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useSlider/useSlider.js"],"names":["_extends","React","unstable_ownerDocument","ownerDocument","unstable_useControlled","useControlled","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useEventCallback","useEventCallback","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","visuallyHidden","areArraysEqual","INTENTIONAL_DRAG_COUNT_THRESHOLD","asc","a","b","clamp","value","min","max","Math","findClosest","values","currentValue","_values$reduce","index","closestIndex","reduce","acc","distance","abs","trackFinger","event","touchId","current","undefined","changedTouches","touchEvent","i","length","touch","identifier","x","clientX","y","clientY","valueToPercent","percentToValue","percent","getDecimalPrecision","num","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","roundValueToStep","step","nearest","round","Number","toFixed","setValueIndex","newValue","output","slice","sort","focusThumb","sliderRef","activeIndex","setActive","_sliderRef$current","_doc$activeElement","doc","contains","activeElement","getAttribute","_sliderRef$current2","querySelector","focus","areValuesEqual","oldValue","axisProps","horizontal","offset","left","leap","width","right","vertical","bottom","height","Identity","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","useSlider","parameters","ariaLabelledby","defaultValue","disabled","disableSwap","isRtl","marks","marksProp","name","onChange","onChangeCommitted","orientation","rootRef","ref","scale","tabIndex","valueProp","useRef","active","useState","open","setOpen","dragging","setDragging","moveCount","valueDerived","setValueState","controlled","default","handleChange","thumbIndex","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","range","Array","isArray","map","floor","_","marksValues","mark","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","focusedThumbIndex","setFocusedThumbIndex","handleFocusRef","handleRef","createHandleHiddenInputFocus","otherHandlers","_otherHandlers$onFocu","currentTarget","call","createHandleHiddenInputBlur","_otherHandlers$onBlur","document","_document$activeEleme","blur","createHandleHiddenInputChange","_otherHandlers$onChan","marksIndex","indexOf","target","valueAsNumber","maxMarksValue","Infinity","previousValue","previousIndex","axis","getFingerNewValue","finger","move","slider","getBoundingClientRect","handleTouchMove","buttons","handleTouchEnd","stopListening","handleTouchStart","preventDefault","addEventListener","useCallback","removeEventListener","useEffect","passive","createHandleMouseDown","_otherHandlers$onMous","onMouseDown","defaultPrevented","button","trackOffset","trackLeap","getRootProps","ownEventHandlers","mergedEventHandlers","createHandleMouseOver","_otherHandlers$onMous2","onMouseOver","createHandleMouseLeave","_otherHandlers$onMous3","onMouseLeave","getThumbProps","getThumbStyle","pointerEvents","getHiddenInputProps","_parameters$step","style","direction"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_ownerDocument as ownerDocument, unstable_useControlled as useControlled, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible, visuallyHidden } from '@mui/utils';\r\nimport { areArraysEqual } from '../utils';\r\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\r\nfunction asc(a, b) {\r\n  return a - b;\r\n}\r\nfunction clamp(value, min, max) {\r\n  if (value == null) {\r\n    return min;\r\n  }\r\n  return Math.min(Math.max(min, value), max);\r\n}\r\nfunction findClosest(values, currentValue) {\r\n  var _values$reduce;\r\n  const {\r\n    index: closestIndex\r\n  } = (_values$reduce = values.reduce((acc, value, index) => {\r\n    const distance = Math.abs(currentValue - value);\r\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\r\n      return {\r\n        distance,\r\n        index\r\n      };\r\n    }\r\n    return acc;\r\n  }, null)) != null ? _values$reduce : {};\r\n  return closestIndex;\r\n}\r\nfunction trackFinger(event, touchId) {\r\n  // The event is TouchEvent\r\n  if (touchId.current !== undefined && event.changedTouches) {\r\n    const touchEvent = event;\r\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\r\n      const touch = touchEvent.changedTouches[i];\r\n      if (touch.identifier === touchId.current) {\r\n        return {\r\n          x: touch.clientX,\r\n          y: touch.clientY\r\n        };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // The event is MouseEvent\r\n  return {\r\n    x: event.clientX,\r\n    y: event.clientY\r\n  };\r\n}\r\nexport function valueToPercent(value, min, max) {\r\n  return (value - min) * 100 / (max - min);\r\n}\r\nfunction percentToValue(percent, min, max) {\r\n  return (max - min) * percent + min;\r\n}\r\nfunction getDecimalPrecision(num) {\r\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\r\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\r\n  if (Math.abs(num) < 1) {\r\n    const parts = num.toExponential().split('e-');\r\n    const matissaDecimalPart = parts[0].split('.')[1];\r\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\r\n  }\r\n  const decimalPart = num.toString().split('.')[1];\r\n  return decimalPart ? decimalPart.length : 0;\r\n}\r\nfunction roundValueToStep(value, step, min) {\r\n  const nearest = Math.round((value - min) / step) * step + min;\r\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\r\n}\r\nfunction setValueIndex({\r\n  values,\r\n  newValue,\r\n  index\r\n}) {\r\n  const output = values.slice();\r\n  output[index] = newValue;\r\n  return output.sort(asc);\r\n}\r\nfunction focusThumb({\r\n  sliderRef,\r\n  activeIndex,\r\n  setActive\r\n}) {\r\n  var _sliderRef$current, _doc$activeElement;\r\n  const doc = ownerDocument(sliderRef.current);\r\n  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null || (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute('data-index')) !== activeIndex) {\r\n    var _sliderRef$current2;\r\n    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\r\n  }\r\n  if (setActive) {\r\n    setActive(activeIndex);\r\n  }\r\n}\r\nfunction areValuesEqual(newValue, oldValue) {\r\n  if (typeof newValue === 'number' && typeof oldValue === 'number') {\r\n    return newValue === oldValue;\r\n  }\r\n  if (typeof newValue === 'object' && typeof oldValue === 'object') {\r\n    return areArraysEqual(newValue, oldValue);\r\n  }\r\n  return false;\r\n}\r\nconst axisProps = {\r\n  horizontal: {\r\n    offset: percent => ({\r\n      left: `${percent}%`\r\n    }),\r\n    leap: percent => ({\r\n      width: `${percent}%`\r\n    })\r\n  },\r\n  'horizontal-reverse': {\r\n    offset: percent => ({\r\n      right: `${percent}%`\r\n    }),\r\n    leap: percent => ({\r\n      width: `${percent}%`\r\n    })\r\n  },\r\n  vertical: {\r\n    offset: percent => ({\r\n      bottom: `${percent}%`\r\n    }),\r\n    leap: percent => ({\r\n      height: `${percent}%`\r\n    })\r\n  }\r\n};\r\nexport const Identity = x => x;\r\n\r\n// TODO: remove support for Safari < 13.\r\n// https://caniuse.com/#search=touch-action\r\n//\r\n// Safari, on iOS, supports touch action since v13.\r\n// Over 80% of the iOS phones are compatible\r\n// in August 2020.\r\n// Utilizing the CSS.supports method to check if touch-action is supported.\r\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\r\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\r\n// touch-action will be supported\r\nlet cachedSupportsTouchActionNone;\r\nfunction doesSupportTouchActionNone() {\r\n  if (cachedSupportsTouchActionNone === undefined) {\r\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\r\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\r\n    } else {\r\n      cachedSupportsTouchActionNone = true;\r\n    }\r\n  }\r\n  return cachedSupportsTouchActionNone;\r\n}\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Slider](https://mui.com/base-ui/react-slider/#hook)\r\n *\r\n * API:\r\n *\r\n * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)\r\n */\r\nexport function useSlider(parameters) {\r\n  const {\r\n    'aria-labelledby': ariaLabelledby,\r\n    defaultValue,\r\n    disabled = false,\r\n    disableSwap = false,\r\n    isRtl = false,\r\n    marks: marksProp = false,\r\n    max = 100,\r\n    min = 0,\r\n    name,\r\n    onChange,\r\n    onChangeCommitted,\r\n    orientation = 'horizontal',\r\n    rootRef: ref,\r\n    scale = Identity,\r\n    step = 1,\r\n    tabIndex,\r\n    value: valueProp\r\n  } = parameters;\r\n  const touchId = React.useRef();\r\n  // We can't use the :active browser pseudo-classes.\r\n  // - The active state isn't triggered when clicking on the rail.\r\n  // - The active state isn't transferred when inversing a range slider.\r\n  const [active, setActive] = React.useState(-1);\r\n  const [open, setOpen] = React.useState(-1);\r\n  const [dragging, setDragging] = React.useState(false);\r\n  const moveCount = React.useRef(0);\r\n  const [valueDerived, setValueState] = useControlled({\r\n    controlled: valueProp,\r\n    default: defaultValue != null ? defaultValue : min,\r\n    name: 'Slider'\r\n  });\r\n  const handleChange = onChange && ((event, value, thumbIndex) => {\r\n    // Redefine target to allow name and value to be read.\r\n    // This allows seamless integration with the most popular form libraries.\r\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\r\n    // Clone the event to not override `target` of the original event.\r\n    const nativeEvent = event.nativeEvent || event;\r\n    // @ts-ignore The nativeEvent is function, not object\r\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\r\n    Object.defineProperty(clonedEvent, 'target', {\r\n      writable: true,\r\n      value: {\r\n        value,\r\n        name\r\n      }\r\n    });\r\n    onChange(clonedEvent, value, thumbIndex);\r\n  });\r\n  const range = Array.isArray(valueDerived);\r\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\r\n  values = values.map(value => clamp(value, min, max));\r\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\r\n    value: min + step * index\r\n  })) : marksProp || [];\r\n  const marksValues = marks.map(mark => mark.value);\r\n  const {\r\n    isFocusVisibleRef,\r\n    onBlur: handleBlurVisible,\r\n    onFocus: handleFocusVisible,\r\n    ref: focusVisibleRef\r\n  } = useIsFocusVisible();\r\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\r\n  const sliderRef = React.useRef();\r\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\r\n  const handleRef = useForkRef(ref, handleFocusRef);\r\n  const createHandleHiddenInputFocus = otherHandlers => event => {\r\n    var _otherHandlers$onFocu;\r\n    const index = Number(event.currentTarget.getAttribute('data-index'));\r\n    handleFocusVisible(event);\r\n    if (isFocusVisibleRef.current === true) {\r\n      setFocusedThumbIndex(index);\r\n    }\r\n    setOpen(index);\r\n    otherHandlers == null || (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\r\n  };\r\n  const createHandleHiddenInputBlur = otherHandlers => event => {\r\n    var _otherHandlers$onBlur;\r\n    handleBlurVisible(event);\r\n    if (isFocusVisibleRef.current === false) {\r\n      setFocusedThumbIndex(-1);\r\n    }\r\n    setOpen(-1);\r\n    otherHandlers == null || (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\r\n  };\r\n  useEnhancedEffect(() => {\r\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\r\n      var _document$activeEleme;\r\n      // This is necessary because Firefox and Safari will keep focus\r\n      // on a disabled element:\r\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\r\n      // @ts-ignore\r\n      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();\r\n    }\r\n  }, [disabled]);\r\n  if (disabled && active !== -1) {\r\n    setActive(-1);\r\n  }\r\n  if (disabled && focusedThumbIndex !== -1) {\r\n    setFocusedThumbIndex(-1);\r\n  }\r\n  const createHandleHiddenInputChange = otherHandlers => event => {\r\n    var _otherHandlers$onChan;\r\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);\r\n    const index = Number(event.currentTarget.getAttribute('data-index'));\r\n    const value = values[index];\r\n    const marksIndex = marksValues.indexOf(value);\r\n\r\n    // @ts-ignore\r\n    let newValue = event.target.valueAsNumber;\r\n    if (marks && step == null) {\r\n      const maxMarksValue = marksValues[marksValues.length - 1];\r\n      if (newValue > maxMarksValue) {\r\n        newValue = maxMarksValue;\r\n      } else if (newValue < marksValues[0]) {\r\n        newValue = marksValues[0];\r\n      } else {\r\n        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\r\n      }\r\n    }\r\n    newValue = clamp(newValue, min, max);\r\n    if (range) {\r\n      // Bound the new value to the thumb's neighbours.\r\n      if (disableSwap) {\r\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\r\n      }\r\n      const previousValue = newValue;\r\n      newValue = setValueIndex({\r\n        values,\r\n        newValue,\r\n        index\r\n      });\r\n      let activeIndex = index;\r\n\r\n      // Potentially swap the index if needed.\r\n      if (!disableSwap) {\r\n        activeIndex = newValue.indexOf(previousValue);\r\n      }\r\n      focusThumb({\r\n        sliderRef,\r\n        activeIndex\r\n      });\r\n    }\r\n    setValueState(newValue);\r\n    setFocusedThumbIndex(index);\r\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\r\n      handleChange(event, newValue, index);\r\n    }\r\n    if (onChangeCommitted) {\r\n      onChangeCommitted(event, newValue);\r\n    }\r\n  };\r\n  const previousIndex = React.useRef();\r\n  let axis = orientation;\r\n  if (isRtl && orientation === 'horizontal') {\r\n    axis += '-reverse';\r\n  }\r\n  const getFingerNewValue = ({\r\n    finger,\r\n    move = false\r\n  }) => {\r\n    const {\r\n      current: slider\r\n    } = sliderRef;\r\n    const {\r\n      width,\r\n      height,\r\n      bottom,\r\n      left\r\n    } = slider.getBoundingClientRect();\r\n    let percent;\r\n    if (axis.indexOf('vertical') === 0) {\r\n      percent = (bottom - finger.y) / height;\r\n    } else {\r\n      percent = (finger.x - left) / width;\r\n    }\r\n    if (axis.indexOf('-reverse') !== -1) {\r\n      percent = 1 - percent;\r\n    }\r\n    let newValue;\r\n    newValue = percentToValue(percent, min, max);\r\n    if (step) {\r\n      newValue = roundValueToStep(newValue, step, min);\r\n    } else {\r\n      const closestIndex = findClosest(marksValues, newValue);\r\n      newValue = marksValues[closestIndex];\r\n    }\r\n    newValue = clamp(newValue, min, max);\r\n    let activeIndex = 0;\r\n    if (range) {\r\n      if (!move) {\r\n        activeIndex = findClosest(values, newValue);\r\n      } else {\r\n        activeIndex = previousIndex.current;\r\n      }\r\n\r\n      // Bound the new value to the thumb's neighbours.\r\n      if (disableSwap) {\r\n        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\r\n      }\r\n      const previousValue = newValue;\r\n      newValue = setValueIndex({\r\n        values,\r\n        newValue,\r\n        index: activeIndex\r\n      });\r\n\r\n      // Potentially swap the index if needed.\r\n      if (!(disableSwap && move)) {\r\n        activeIndex = newValue.indexOf(previousValue);\r\n        previousIndex.current = activeIndex;\r\n      }\r\n    }\r\n    return {\r\n      newValue,\r\n      activeIndex\r\n    };\r\n  };\r\n  const handleTouchMove = useEventCallback(nativeEvent => {\r\n    const finger = trackFinger(nativeEvent, touchId);\r\n    if (!finger) {\r\n      return;\r\n    }\r\n    moveCount.current += 1;\r\n\r\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\r\n    // @ts-ignore buttons doesn't not exists on touch event\r\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\r\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n      handleTouchEnd(nativeEvent);\r\n      return;\r\n    }\r\n    const {\r\n      newValue,\r\n      activeIndex\r\n    } = getFingerNewValue({\r\n      finger,\r\n      move: true\r\n    });\r\n    focusThumb({\r\n      sliderRef,\r\n      activeIndex,\r\n      setActive\r\n    });\r\n    setValueState(newValue);\r\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\r\n      setDragging(true);\r\n    }\r\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\r\n      handleChange(nativeEvent, newValue, activeIndex);\r\n    }\r\n  });\r\n  const handleTouchEnd = useEventCallback(nativeEvent => {\r\n    const finger = trackFinger(nativeEvent, touchId);\r\n    setDragging(false);\r\n    if (!finger) {\r\n      return;\r\n    }\r\n    const {\r\n      newValue\r\n    } = getFingerNewValue({\r\n      finger,\r\n      move: true\r\n    });\r\n    setActive(-1);\r\n    if (nativeEvent.type === 'touchend') {\r\n      setOpen(-1);\r\n    }\r\n    if (onChangeCommitted) {\r\n      onChangeCommitted(nativeEvent, newValue);\r\n    }\r\n    touchId.current = undefined;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    stopListening();\r\n  });\r\n  const handleTouchStart = useEventCallback(nativeEvent => {\r\n    if (disabled) {\r\n      return;\r\n    }\r\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\r\n    if (!doesSupportTouchActionNone()) {\r\n      nativeEvent.preventDefault();\r\n    }\r\n    const touch = nativeEvent.changedTouches[0];\r\n    if (touch != null) {\r\n      // A number that uniquely identifies the current finger in the touch session.\r\n      touchId.current = touch.identifier;\r\n    }\r\n    const finger = trackFinger(nativeEvent, touchId);\r\n    if (finger !== false) {\r\n      const {\r\n        newValue,\r\n        activeIndex\r\n      } = getFingerNewValue({\r\n        finger\r\n      });\r\n      focusThumb({\r\n        sliderRef,\r\n        activeIndex,\r\n        setActive\r\n      });\r\n      setValueState(newValue);\r\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\r\n        handleChange(nativeEvent, newValue, activeIndex);\r\n      }\r\n    }\r\n    moveCount.current = 0;\r\n    const doc = ownerDocument(sliderRef.current);\r\n    doc.addEventListener('touchmove', handleTouchMove);\r\n    doc.addEventListener('touchend', handleTouchEnd);\r\n  });\r\n  const stopListening = React.useCallback(() => {\r\n    const doc = ownerDocument(sliderRef.current);\r\n    doc.removeEventListener('mousemove', handleTouchMove);\r\n    doc.removeEventListener('mouseup', handleTouchEnd);\r\n    doc.removeEventListener('touchmove', handleTouchMove);\r\n    doc.removeEventListener('touchend', handleTouchEnd);\r\n  }, [handleTouchEnd, handleTouchMove]);\r\n  React.useEffect(() => {\r\n    const {\r\n      current: slider\r\n    } = sliderRef;\r\n    slider.addEventListener('touchstart', handleTouchStart, {\r\n      passive: doesSupportTouchActionNone()\r\n    });\r\n    return () => {\r\n      // @ts-ignore\r\n      slider.removeEventListener('touchstart', handleTouchStart, {\r\n        passive: doesSupportTouchActionNone()\r\n      });\r\n      stopListening();\r\n    };\r\n  }, [stopListening, handleTouchStart]);\r\n  React.useEffect(() => {\r\n    if (disabled) {\r\n      stopListening();\r\n    }\r\n  }, [disabled, stopListening]);\r\n  const createHandleMouseDown = otherHandlers => event => {\r\n    var _otherHandlers$onMous;\r\n    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\r\n    if (disabled) {\r\n      return;\r\n    }\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // Only handle left clicks\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Avoid text selection\r\n    event.preventDefault();\r\n    const finger = trackFinger(event, touchId);\r\n    if (finger !== false) {\r\n      const {\r\n        newValue,\r\n        activeIndex\r\n      } = getFingerNewValue({\r\n        finger\r\n      });\r\n      focusThumb({\r\n        sliderRef,\r\n        activeIndex,\r\n        setActive\r\n      });\r\n      setValueState(newValue);\r\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\r\n        handleChange(event, newValue, activeIndex);\r\n      }\r\n    }\r\n    moveCount.current = 0;\r\n    const doc = ownerDocument(sliderRef.current);\r\n    doc.addEventListener('mousemove', handleTouchMove);\r\n    doc.addEventListener('mouseup', handleTouchEnd);\r\n  };\r\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\r\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\r\n  const getRootProps = (otherHandlers = {}) => {\r\n    const ownEventHandlers = {\r\n      onMouseDown: createHandleMouseDown(otherHandlers || {})\r\n    };\r\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\r\n    return _extends({\r\n      ref: handleRef\r\n    }, mergedEventHandlers);\r\n  };\r\n  const createHandleMouseOver = otherHandlers => event => {\r\n    var _otherHandlers$onMous2;\r\n    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\r\n    const index = Number(event.currentTarget.getAttribute('data-index'));\r\n    setOpen(index);\r\n  };\r\n  const createHandleMouseLeave = otherHandlers => event => {\r\n    var _otherHandlers$onMous3;\r\n    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\r\n    setOpen(-1);\r\n  };\r\n  const getThumbProps = (otherHandlers = {}) => {\r\n    const ownEventHandlers = {\r\n      onMouseOver: createHandleMouseOver(otherHandlers || {}),\r\n      onMouseLeave: createHandleMouseLeave(otherHandlers || {})\r\n    };\r\n    return _extends({}, otherHandlers, ownEventHandlers);\r\n  };\r\n  const getThumbStyle = index => {\r\n    return {\r\n      // So the non active thumb doesn't show its label on hover.\r\n      pointerEvents: active !== -1 && active !== index ? 'none' : undefined\r\n    };\r\n  };\r\n  const getHiddenInputProps = (otherHandlers = {}) => {\r\n    var _parameters$step;\r\n    const ownEventHandlers = {\r\n      onChange: createHandleHiddenInputChange(otherHandlers || {}),\r\n      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),\r\n      onBlur: createHandleHiddenInputBlur(otherHandlers || {})\r\n    };\r\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\r\n    return _extends({\r\n      tabIndex,\r\n      'aria-labelledby': ariaLabelledby,\r\n      'aria-orientation': orientation,\r\n      'aria-valuemax': scale(max),\r\n      'aria-valuemin': scale(min),\r\n      name,\r\n      type: 'range',\r\n      min: parameters.min,\r\n      max: parameters.max,\r\n      step: parameters.step === null && parameters.marks ? 'any' : (_parameters$step = parameters.step) != null ? _parameters$step : undefined,\r\n      disabled\r\n    }, mergedEventHandlers, {\r\n      style: _extends({}, visuallyHidden, {\r\n        direction: isRtl ? 'rtl' : 'ltr',\r\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\r\n        width: '100%',\r\n        height: '100%'\r\n      })\r\n    });\r\n  };\r\n  return {\r\n    active,\r\n    axis: axis,\r\n    axisProps,\r\n    dragging,\r\n    focusedThumbIndex,\r\n    getHiddenInputProps,\r\n    getRootProps,\r\n    getThumbProps,\r\n    marks: marks,\r\n    open,\r\n    range,\r\n    rootRef: handleRef,\r\n    trackLeap,\r\n    trackOffset,\r\n    values,\r\n    getThumbStyle\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}