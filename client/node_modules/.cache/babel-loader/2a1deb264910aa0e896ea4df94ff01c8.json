{"ast":null,"code":"/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded;\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded(req) {\n  if (!req) {\n    throw new TypeError('argument req is required');\n  } // simple header parsing\n\n\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '');\n  var socketAddr = getSocketAddr(req);\n  var addrs = [socketAddr].concat(proxyAddrs); // return all addresses\n\n  return addrs;\n}\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\n\nfunction getSocketAddr(req) {\n  return req.socket ? req.socket.remoteAddress : req.connection.remoteAddress;\n}\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\n\nfunction parse(header) {\n  var end = header.length;\n  var list = [];\n  var start = header.length; // gather addresses, backwards\n\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i;\n        }\n\n        break;\n\n      case 0x2c:\n        /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end));\n        }\n\n        start = end = i;\n        break;\n\n      default:\n        start = i;\n        break;\n    }\n  } // final address\n\n\n  if (start !== end) {\n    list.push(header.substring(start, end));\n  }\n\n  return list;\n}","map":{"version":3,"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/forwarded/index.js"],"names":["module","exports","forwarded","req","TypeError","proxyAddrs","parse","headers","socketAddr","getSocketAddr","addrs","concat","socket","remoteAddress","connection","header","end","length","list","start","i","charCodeAt","push","substring"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAI,CAACA,GAAL,EAAU;AACR,UAAM,IAAIC,SAAJ,CAAc,0BAAd,CAAN;AACD,GAHsB,CAKvB;;;AACA,MAAIC,UAAU,GAAGC,KAAK,CAACH,GAAG,CAACI,OAAJ,CAAY,iBAAZ,KAAkC,EAAnC,CAAtB;AACA,MAAIC,UAAU,GAAGC,aAAa,CAACN,GAAD,CAA9B;AACA,MAAIO,KAAK,GAAG,CAACF,UAAD,EAAaG,MAAb,CAAoBN,UAApB,CAAZ,CARuB,CAUvB;;AACA,SAAOK,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASD,aAAT,CAAwBN,GAAxB,EAA6B;AAC3B,SAAOA,GAAG,CAACS,MAAJ,GACHT,GAAG,CAACS,MAAJ,CAAWC,aADR,GAEHV,GAAG,CAACW,UAAJ,CAAeD,aAFnB;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASP,KAAT,CAAgBS,MAAhB,EAAwB;AACtB,MAAIC,GAAG,GAAGD,MAAM,CAACE,MAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAGJ,MAAM,CAACE,MAAnB,CAHsB,CAKtB;;AACA,OAAK,IAAIG,CAAC,GAAGL,MAAM,CAACE,MAAP,GAAgB,CAA7B,EAAgCG,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,YAAQL,MAAM,CAACM,UAAP,CAAkBD,CAAlB,CAAR;AACE,WAAK,IAAL;AAAW;AACT,YAAID,KAAK,KAAKH,GAAd,EAAmB;AACjBG,UAAAA,KAAK,GAAGH,GAAG,GAAGI,CAAd;AACD;;AACD;;AACF,WAAK,IAAL;AAAW;AACT,YAAID,KAAK,KAAKH,GAAd,EAAmB;AACjBE,UAAAA,IAAI,CAACI,IAAL,CAAUP,MAAM,CAACQ,SAAP,CAAiBJ,KAAjB,EAAwBH,GAAxB,CAAV;AACD;;AACDG,QAAAA,KAAK,GAAGH,GAAG,GAAGI,CAAd;AACA;;AACF;AACED,QAAAA,KAAK,GAAGC,CAAR;AACA;AAdJ;AAgBD,GAvBqB,CAyBtB;;;AACA,MAAID,KAAK,KAAKH,GAAd,EAAmB;AACjBE,IAAAA,IAAI,CAACI,IAAL,CAAUP,MAAM,CAACQ,SAAP,CAAiBJ,KAAjB,EAAwBH,GAAxB,CAAV;AACD;;AAED,SAAOE,IAAP;AACD","sourcesContent":["/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n"]},"metadata":{},"sourceType":"script"}