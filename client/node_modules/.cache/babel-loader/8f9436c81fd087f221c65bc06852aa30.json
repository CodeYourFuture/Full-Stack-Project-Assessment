{"ast":null,"code":"/**\r\n * If `componentProps` is a function, calls it with the provided `ownerState`.\r\n * Otherwise, just returns `componentProps`.\r\n */\nexport function resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n\n  return componentProps;\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/utils/resolveComponentProps.js"],"names":["resolveComponentProps","componentProps","ownerState","slotState"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAT,CAA+BC,cAA/B,EAA+CC,UAA/C,EAA2DC,SAA3D,EAAsE;AAC3E,MAAI,OAAOF,cAAP,KAA0B,UAA9B,EAA0C;AACxC,WAAOA,cAAc,CAACC,UAAD,EAAaC,SAAb,CAArB;AACD;;AACD,SAAOF,cAAP;AACD","sourcesContent":["/**\r\n * If `componentProps` is a function, calls it with the provided `ownerState`.\r\n * Otherwise, just returns `componentProps`.\r\n */\r\nexport function resolveComponentProps(componentProps, ownerState, slotState) {\r\n  if (typeof componentProps === 'function') {\r\n    return componentProps(ownerState, slotState);\r\n  }\r\n  return componentProps;\r\n}"]},"metadata":{},"sourceType":"module"}