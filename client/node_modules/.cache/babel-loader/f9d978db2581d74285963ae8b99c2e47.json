{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction toPercent(num) {\n  if (num <= 0) return '100%';\n  if (num < 1) return `${num * 100}%`;\n  return `${num}%`;\n}\n\nconst Ratio = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    children,\n    aspectRatio = '1x1',\n    style,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\n  const isCustomRatio = typeof aspectRatio === 'number';\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    style: { ...style,\n      ...(isCustomRatio && {\n        '--bs-aspect-ratio': toPercent(aspectRatio)\n      })\n    },\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\n    children: React.Children.only(children)\n  });\n});\nexport default Ratio;","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/node_modules/react-bootstrap/esm/Ratio.js"],"names":["classNames","React","useBootstrapPrefix","jsx","_jsx","toPercent","num","Ratio","forwardRef","ref","bsPrefix","className","children","aspectRatio","style","props","isCustomRatio","Children","only"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIA,GAAG,IAAI,CAAX,EAAc,OAAO,MAAP;AACd,MAAIA,GAAG,GAAG,CAAV,EAAa,OAAQ,GAAEA,GAAG,GAAG,GAAI,GAApB;AACb,SAAQ,GAAEA,GAAI,GAAd;AACD;;AACD,MAAMC,KAAK,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,OAOzCC,GAPyC,KAOjC;AAAA,MAPkC;AAC3CC,IAAAA,QAD2C;AAE3CC,IAAAA,SAF2C;AAG3CC,IAAAA,QAH2C;AAI3CC,IAAAA,WAAW,GAAG,KAJ6B;AAK3CC,IAAAA,KAL2C;AAM3C,OAAGC;AANwC,GAOlC;AACTL,EAAAA,QAAQ,GAAGR,kBAAkB,CAACQ,QAAD,EAAW,OAAX,CAA7B;AACA,QAAMM,aAAa,GAAG,OAAOH,WAAP,KAAuB,QAA7C;AACA,SAAO,aAAaT,IAAI,CAAC,KAAD,EAAQ;AAC9BK,IAAAA,GAAG,EAAEA,GADyB;AAE9B,OAAGM,KAF2B;AAG9BD,IAAAA,KAAK,EAAE,EACL,GAAGA,KADE;AAEL,UAAIE,aAAa,IAAI;AACnB,6BAAqBX,SAAS,CAACQ,WAAD;AADX,OAArB;AAFK,KAHuB;AAS9BF,IAAAA,SAAS,EAAEX,UAAU,CAACU,QAAD,EAAWC,SAAX,EAAsB,CAACK,aAAD,IAAmB,GAAEN,QAAS,IAAGG,WAAY,EAAnE,CATS;AAU9BD,IAAAA,QAAQ,EAAEX,KAAK,CAACgB,QAAN,CAAeC,IAAf,CAAoBN,QAApB;AAVoB,GAAR,CAAxB;AAYD,CAtB0B,CAA3B;AAuBA,eAAeL,KAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction toPercent(num) {\n  if (num <= 0) return '100%';\n  if (num < 1) return `${num * 100}%`;\n  return `${num}%`;\n}\nconst Ratio = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  aspectRatio = '1x1',\n  style,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\n  const isCustomRatio = typeof aspectRatio === 'number';\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    style: {\n      ...style,\n      ...(isCustomRatio && {\n        '--bs-aspect-ratio': toPercent(aspectRatio)\n      })\n    },\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\n    children: React.Children.only(children)\n  });\n});\nexport default Ratio;"]},"metadata":{},"sourceType":"module"}