{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colSpan\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelId\", \"labelRowsPerPage\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"selectId\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { isHostComponent } from '../utils/isHostComponent';\nimport { TablePaginationActions } from './TablePaginationActions';\nimport { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultLabelDisplayedRows(_ref) {\n  let {\n    from,\n    to,\n    count\n  } = _ref;\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));\n};\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Table Pagination](https://mui.com/base-ui/react-table-pagination/)\n *\n * API:\n *\n * - [TablePagination API](https://mui.com/base-ui/react-table-pagination/components-api/#table-pagination)\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, forwardedRef) {\n  var _slots$root, _slots$select, _slots$actions, _slots$menuItem, _slots$selectLabel, _slots$displayedRows, _slots$toolbar, _slots$spacer;\n\n  const {\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'td';\n\n  if (Root === 'td' || !isHostComponent(Root)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = (_slots$select = slots.select) != null ? _slots$select : 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: event => onRowsPerPageChange && onRowsPerPageChange(event),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = (_slots$actions = slots.actions) != null ? _slots$actions : TablePaginationActions;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = (_slots$menuItem = slots.menuItem) != null ? _slots$menuItem : 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = (_slots$selectLabel = slots.selectLabel) != null ? _slots$selectLabel : 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = (_slots$displayedRows = slots.displayedRows) != null ? _slots$displayedRows : 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = (_slots$toolbar = slots.toolbar) != null ? _slots$toolbar : 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = (_slots$spacer = slots.spacer) != null ? _slots$spacer : 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsxs(Toolbar, _extends({}, toolbarProps, {\n      children: [/*#__PURE__*/_jsx(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, _extends({}, selectLabelProps, {\n        children: labelRowsPerPage\n      })), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, _extends({}, selectProps, {\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, _extends({}, menuItemProps, {\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(DisplayedRows, _extends({}, displayedRowsProps, {\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      })), /*#__PURE__*/_jsx(Actions, _extends({}, actionsProps))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport { TablePagination };","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/base/TablePagination/TablePagination.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useId","useId","chainPropTypes","integerPropType","useSlotProps","unstable_composeClasses","composeClasses","isHostComponent","TablePaginationActions","getTablePaginationUtilityClass","useClassNamesOverride","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","defaultLabelDisplayedRows","from","to","count","defaultGetAriaLabel","type","useUtilityClasses","slots","root","toolbar","spacer","selectLabel","select","input","selectIcon","menuItem","displayedRows","actions","TablePagination","forwardRef","props","forwardedRef","_slots$root","_slots$select","_slots$actions","_slots$menuItem","_slots$selectLabel","_slots$displayedRows","_slots$toolbar","_slots$spacer","colSpan","colSpanProp","getItemAriaLabel","labelDisplayedRows","labelId","labelIdProp","labelRowsPerPage","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","selectId","selectIdProp","slotProps","other","ownerState","classes","Root","getLabelDisplayedRowsTo","Math","min","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","Select","selectProps","value","id","onChange","event","toString","filter","Boolean","join","undefined","Actions","actionsProps","MenuItem","menuItemProps","SelectLabel","selectLabelProps","DisplayedRows","displayedRowsProps","Toolbar","toolbarProps","Spacer","spacerProps","children","length","map","rowsPerPageOption","key","label","process","env","NODE_ENV","propTypes","number","isRequired","func","string","node","newLastPage","max","ceil","Error","arrayOf","oneOfType","shape","object"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,kBAArB,EAAyC,oBAAzC,EAA+D,SAA/D,EAA0E,kBAA1E,EAA8F,cAA9F,EAA8G,qBAA9G,EAAqI,MAArI,EAA6I,aAA7I,EAA4J,oBAA5J,EAAkL,UAAlL,EAA8L,WAA9L,EAA2M,OAA3M,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAc,IAAIC,KAA3B,EAAkCC,cAAlC,EAAkDC,eAAlD,QAAyE,YAAzE;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,mBAA1D;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,8BAAT,QAA+C,0BAA/C;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,aAAa,IAAIC,cAA1B,QAAgD,OAAhD;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,SAASC,yBAAT,OAIG;AAAA,MAJgC;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,EAFiC;AAGjCC,IAAAA;AAHiC,GAIhC;AACD,SAAQ,GAAEF,IAAK,IAAGC,EAAG,OAAMC,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,GAAwB,aAAYD,EAAG,EAAE,EAApE;AACD;;AACD,SAASE,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,SAAQ,SAAQA,IAAK,OAArB;AACD;;AACD,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,CADM;AAEZC,IAAAA,OAAO,EAAE,CAAC,SAAD,CAFG;AAGZC,IAAAA,MAAM,EAAE,CAAC,QAAD,CAHI;AAIZC,IAAAA,WAAW,EAAE,CAAC,aAAD,CAJD;AAKZC,IAAAA,MAAM,EAAE,CAAC,QAAD,CALI;AAMZC,IAAAA,KAAK,EAAE,CAAC,OAAD,CANK;AAOZC,IAAAA,UAAU,EAAE,CAAC,YAAD,CAPA;AAQZC,IAAAA,QAAQ,EAAE,CAAC,UAAD,CARE;AASZC,IAAAA,aAAa,EAAE,CAAC,eAAD,CATH;AAUZC,IAAAA,OAAO,EAAE,CAAC,SAAD;AAVG,GAAd;AAYA,SAAO5B,cAAc,CAACkB,KAAD,EAAQd,qBAAqB,CAACD,8BAAD,CAA7B,CAArB;AACD,CAdD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0B,eAAe,GAAG,aAAarC,KAAK,CAACsC,UAAN,CAAiB,SAASD,eAAT,CAAyBE,KAAzB,EAAgCC,YAAhC,EAA8C;AAClG,MAAIC,WAAJ,EAAiBC,aAAjB,EAAgCC,cAAhC,EAAgDC,eAAhD,EAAiEC,kBAAjE,EAAqFC,oBAArF,EAA2GC,cAA3G,EAA2HC,aAA3H;;AACA,QAAM;AACFC,IAAAA,OAAO,EAAEC,WADP;AAEF5B,IAAAA,KAFE;AAGF6B,IAAAA,gBAAgB,GAAG5B,mBAHjB;AAIF6B,IAAAA,kBAAkB,GAAGjC,yBAJnB;AAKFkC,IAAAA,OAAO,EAAEC,WALP;AAMFC,IAAAA,gBAAgB,GAAG,gBANjB;AAOFC,IAAAA,YAPE;AAQFC,IAAAA,mBARE;AASFC,IAAAA,IATE;AAUFC,IAAAA,WAVE;AAWFC,IAAAA,kBAAkB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,CAXnB;AAYFC,IAAAA,QAAQ,EAAEC,YAZR;AAaFC,IAAAA,SAAS,GAAG,EAbV;AAcFrC,IAAAA,KAAK,GAAG;AAdN,MAeAa,KAfN;AAAA,QAgBEyB,KAAK,GAAGlE,6BAA6B,CAACyC,KAAD,EAAQxC,SAAR,CAhBvC;;AAiBA,QAAMkE,UAAU,GAAG1B,KAAnB;AACA,QAAM2B,OAAO,GAAGzC,iBAAiB,EAAjC;AACA,MAAIwB,OAAJ;AACA,QAAMkB,IAAI,GAAG,CAAC1B,WAAW,GAAGf,KAAK,CAACC,IAArB,KAA8B,IAA9B,GAAqCc,WAArC,GAAmD,IAAhE;;AACA,MAAI0B,IAAI,KAAK,IAAT,IAAiB,CAAC1D,eAAe,CAAC0D,IAAD,CAArC,EAA6C;AAC3ClB,IAAAA,OAAO,GAAGC,WAAW,IAAI,IAAzB,CAD2C,CACZ;AAChC;;AAED,QAAMkB,uBAAuB,GAAG,MAAM;AACpC,QAAI9C,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAO,CAACoC,IAAI,GAAG,CAAR,IAAaC,WAApB;AACD;;AACD,WAAOA,WAAW,KAAK,CAAC,CAAjB,GAAqBrC,KAArB,GAA6B+C,IAAI,CAACC,GAAL,CAAShD,KAAT,EAAgB,CAACoC,IAAI,GAAG,CAAR,IAAaC,WAA7B,CAApC;AACD,GALD;;AAMA,QAAME,QAAQ,GAAG1D,KAAK,CAAC2D,YAAD,CAAtB;AACA,QAAMT,OAAO,GAAGlD,KAAK,CAACmD,WAAD,CAArB;AACA,QAAMiB,SAAS,GAAGjE,YAAY,CAAC;AAC7BkE,IAAAA,WAAW,EAAEL,IADgB;AAE7BM,IAAAA,iBAAiB,EAAEV,SAAS,CAACpC,IAFA;AAG7B+C,IAAAA,sBAAsB,EAAEV,KAHK;AAI7BW,IAAAA,eAAe,EAAE;AACf1B,MAAAA,OADe;AAEf2B,MAAAA,GAAG,EAAEpC;AAFU,KAJY;AAQ7ByB,IAAAA,UAR6B;AAS7BY,IAAAA,SAAS,EAAEX,OAAO,CAACvC;AATU,GAAD,CAA9B;AAWA,QAAMmD,MAAM,GAAG,CAACpC,aAAa,GAAGhB,KAAK,CAACK,MAAvB,KAAkC,IAAlC,GAAyCW,aAAzC,GAAyD,QAAxE;AACA,QAAMqC,WAAW,GAAGzE,YAAY,CAAC;AAC/BkE,IAAAA,WAAW,EAAEM,MADkB;AAE/BL,IAAAA,iBAAiB,EAAEV,SAAS,CAAChC,MAFE;AAG/B4C,IAAAA,eAAe,EAAE;AACfK,MAAAA,KAAK,EAAErB,WADQ;AAEfsB,MAAAA,EAAE,EAAEpB,QAFW;AAGfqB,MAAAA,QAAQ,EAAEC,KAAK,IAAI1B,mBAAmB,IAAIA,mBAAmB,CAAC0B,KAAD,CAH9C;AAIf,oBAAcxB,WAAW,CAACyB,QAAZ,EAJC;AAKf,yBAAmB,CAAC/B,OAAD,EAAUQ,QAAV,EAAoBwB,MAApB,CAA2BC,OAA3B,EAAoCC,IAApC,CAAyC,GAAzC,KAAiDC;AALrD,KAHc;AAU/BvB,IAAAA,UAV+B;AAW/BY,IAAAA,SAAS,EAAEX,OAAO,CAACnC;AAXY,GAAD,CAAhC;AAaA,QAAM0D,OAAO,GAAG,CAAC9C,cAAc,GAAGjB,KAAK,CAACU,OAAxB,KAAoC,IAApC,GAA2CO,cAA3C,GAA4DjC,sBAA5E;AACA,QAAMgF,YAAY,GAAGpF,YAAY,CAAC;AAChCkE,IAAAA,WAAW,EAAEiB,OADmB;AAEhChB,IAAAA,iBAAiB,EAAEV,SAAS,CAAC3B,OAFG;AAGhCuC,IAAAA,eAAe,EAAE;AACfjB,MAAAA,IADe;AAEfC,MAAAA,WAFe;AAGfrC,MAAAA,KAHe;AAIfkC,MAAAA,YAJe;AAKfL,MAAAA;AALe,KAHe;AAUhCc,IAAAA,UAVgC;AAWhCY,IAAAA,SAAS,EAAEX,OAAO,CAAC9B;AAXa,GAAD,CAAjC;AAaA,QAAMuD,QAAQ,GAAG,CAAC/C,eAAe,GAAGlB,KAAK,CAACQ,QAAzB,KAAsC,IAAtC,GAA6CU,eAA7C,GAA+D,QAAhF;AACA,QAAMgD,aAAa,GAAGtF,YAAY,CAAC;AACjCkE,IAAAA,WAAW,EAAEmB,QADoB;AAEjClB,IAAAA,iBAAiB,EAAEV,SAAS,CAAC7B,QAFI;AAGjCyC,IAAAA,eAAe,EAAE;AACfK,MAAAA,KAAK,EAAEQ;AADQ,KAHgB;AAMjCvB,IAAAA,UANiC;AAOjCY,IAAAA,SAAS,EAAEX,OAAO,CAAChC;AAPc,GAAD,CAAlC;AASA,QAAM2D,WAAW,GAAG,CAAChD,kBAAkB,GAAGnB,KAAK,CAACI,WAA5B,KAA4C,IAA5C,GAAmDe,kBAAnD,GAAwE,GAA5F;AACA,QAAMiD,gBAAgB,GAAGxF,YAAY,CAAC;AACpCkE,IAAAA,WAAW,EAAEqB,WADuB;AAEpCpB,IAAAA,iBAAiB,EAAEV,SAAS,CAACjC,WAFO;AAGpC6C,IAAAA,eAAe,EAAE;AACfM,MAAAA,EAAE,EAAE5B;AADW,KAHmB;AAMpCY,IAAAA,UANoC;AAOpCY,IAAAA,SAAS,EAAEX,OAAO,CAACpC;AAPiB,GAAD,CAArC;AASA,QAAMiE,aAAa,GAAG,CAACjD,oBAAoB,GAAGpB,KAAK,CAACS,aAA9B,KAAgD,IAAhD,GAAuDW,oBAAvD,GAA8E,GAApG;AACA,QAAMkD,kBAAkB,GAAG1F,YAAY,CAAC;AACtCkE,IAAAA,WAAW,EAAEuB,aADyB;AAEtCtB,IAAAA,iBAAiB,EAAEV,SAAS,CAAC5B,aAFS;AAGtC8B,IAAAA,UAHsC;AAItCY,IAAAA,SAAS,EAAEX,OAAO,CAAC/B;AAJmB,GAAD,CAAvC;AAMA,QAAM8D,OAAO,GAAG,CAAClD,cAAc,GAAGrB,KAAK,CAACE,OAAxB,KAAoC,IAApC,GAA2CmB,cAA3C,GAA4D,KAA5E;AACA,QAAMmD,YAAY,GAAG5F,YAAY,CAAC;AAChCkE,IAAAA,WAAW,EAAEyB,OADmB;AAEhCxB,IAAAA,iBAAiB,EAAEV,SAAS,CAACnC,OAFG;AAGhCqC,IAAAA,UAHgC;AAIhCY,IAAAA,SAAS,EAAEX,OAAO,CAACtC;AAJa,GAAD,CAAjC;AAMA,QAAMuE,MAAM,GAAG,CAACnD,aAAa,GAAGtB,KAAK,CAACG,MAAvB,KAAkC,IAAlC,GAAyCmB,aAAzC,GAAyD,KAAxE;AACA,QAAMoD,WAAW,GAAG9F,YAAY,CAAC;AAC/BkE,IAAAA,WAAW,EAAE2B,MADkB;AAE/B1B,IAAAA,iBAAiB,EAAEV,SAAS,CAAClC,MAFE;AAG/BoC,IAAAA,UAH+B;AAI/BY,IAAAA,SAAS,EAAEX,OAAO,CAACrC;AAJY,GAAD,CAAhC;AAMA,SAAO,aAAaf,IAAI,CAACqD,IAAD,EAAOtE,QAAQ,CAAC,EAAD,EAAK0E,SAAL,EAAgB;AACrD8B,IAAAA,QAAQ,EAAE,aAAanF,KAAK,CAAC+E,OAAD,EAAUpG,QAAQ,CAAC,EAAD,EAAKqG,YAAL,EAAmB;AAC/DG,MAAAA,QAAQ,EAAE,CAAC,aAAavF,IAAI,CAACqF,MAAD,EAAStG,QAAQ,CAAC,EAAD,EAAKuG,WAAL,CAAjB,CAAlB,EAAuDxC,kBAAkB,CAAC0C,MAAnB,GAA4B,CAA5B,IAAiC,aAAaxF,IAAI,CAAC+E,WAAD,EAAchG,QAAQ,CAAC,EAAD,EAAKiG,gBAAL,EAAuB;AAC9JO,QAAAA,QAAQ,EAAE9C;AADoJ,OAAvB,CAAtB,CAAzG,EAELK,kBAAkB,CAAC0C,MAAnB,GAA4B,CAA5B,IAAiC,aAAaxF,IAAI,CAACgE,MAAD,EAASjF,QAAQ,CAAC,EAAD,EAAKkF,WAAL,EAAkB;AACxFsB,QAAAA,QAAQ,EAAEzC,kBAAkB,CAAC2C,GAAnB,CAAuBC,iBAAiB,IAAI,aAAaxF,cAAc,CAAC2E,QAAD,EAAW9F,QAAQ,CAAC,EAAD,EAAK+F,aAAL,EAAoB;AACtHa,UAAAA,GAAG,EAAE,OAAOD,iBAAP,KAA6B,QAA7B,IAAyCA,iBAAiB,CAACE,KAA3D,GAAmEF,iBAAiB,CAACE,KAArF,GAA6FF,iBADoB;AAEtHxB,UAAAA,KAAK,EAAE,OAAOwB,iBAAP,KAA6B,QAA7B,IAAyCA,iBAAiB,CAACxB,KAA3D,GAAmEwB,iBAAiB,CAACxB,KAArF,GAA6FwB;AAFkB,SAApB,CAAnB,EAG7E,OAAOA,iBAAP,KAA6B,QAA7B,IAAyCA,iBAAiB,CAACE,KAA3D,GAAmEF,iBAAiB,CAACE,KAArF,GAA6FF,iBAHhB,CAAvE;AAD8E,OAAlB,CAAjB,CAF7C,EAOL,aAAa1F,IAAI,CAACiF,aAAD,EAAgBlG,QAAQ,CAAC,EAAD,EAAKmG,kBAAL,EAAyB;AACrEK,QAAAA,QAAQ,EAAEjD,kBAAkB,CAAC;AAC3BhC,UAAAA,IAAI,EAAEE,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBoC,IAAI,GAAGC,WAAP,GAAqB,CADlB;AAE3BtC,UAAAA,EAAE,EAAE+C,uBAAuB,EAFA;AAG3B9C,UAAAA,KAAK,EAAEA,KAAK,KAAK,CAAC,CAAX,GAAe,CAAC,CAAhB,GAAoBA,KAHA;AAI3BoC,UAAAA;AAJ2B,SAAD;AADyC,OAAzB,CAAxB,CAPZ,EAcL,aAAa5C,IAAI,CAAC2E,OAAD,EAAU5F,QAAQ,CAAC,EAAD,EAAK6F,YAAL,CAAlB,CAdZ;AADqD,KAAnB,CAAlB;AADyB,GAAhB,CAAf,CAAxB;AAmBD,CAtIoC,CAArC;AAuIAiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCxE,eAAe,CAACyE;AAAU;AAA1B,EAAmD;AACzF;AACA;AACA;AACA;;AACA;AACF;AACA;AACE7D,EAAAA,OAAO,EAAEhD,SAAS,CAAC8G,MARsE;;AASzF;AACF;AACA;AACA;AACA;AACEzF,EAAAA,KAAK,EAAErB,SAAS,CAAC8G,MAAV,CAAiBC,UAdiE;;AAezF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE7D,EAAAA,gBAAgB,EAAElD,SAAS,CAACgH,IA1B6D;;AA2BzF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE7D,EAAAA,kBAAkB,EAAEnD,SAAS,CAACgH,IApC2D;;AAqCzF;AACF;AACA;AACE5D,EAAAA,OAAO,EAAEpD,SAAS,CAACiH,MAxCsE;;AAyCzF;AACF;AACA;AACA;AACA;AACA;AACE3D,EAAAA,gBAAgB,EAAEtD,SAAS,CAACkH,IA/C6D;;AAgDzF;AACF;AACA;AACA;AACA;AACA;AACE3D,EAAAA,YAAY,EAAEvD,SAAS,CAACgH,IAAV,CAAeD,UAtD4D;;AAuDzF;AACF;AACA;AACA;AACA;AACEvD,EAAAA,mBAAmB,EAAExD,SAAS,CAACgH,IA5D0D;;AA6DzF;AACF;AACA;AACEvD,EAAAA,IAAI,EAAEtD,cAAc,CAACC,eAAe,CAAC2G,UAAjB,EAA6BzE,KAAK,IAAI;AACxD,UAAM;AACJjB,MAAAA,KADI;AAEJoC,MAAAA,IAFI;AAGJC,MAAAA;AAHI,QAIFpB,KAJJ;;AAKA,QAAIjB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAO,IAAP;AACD;;AACD,UAAM8F,WAAW,GAAG/C,IAAI,CAACgD,GAAL,CAAS,CAAT,EAAYhD,IAAI,CAACiD,IAAL,CAAUhG,KAAK,GAAGqC,WAAlB,IAAiC,CAA7C,CAApB;;AACA,QAAID,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG0D,WAAvB,EAAoC;AAClC,aAAO,IAAIG,KAAJ,CAAU,6DAA8D,SAAQH,WAAY,iBAAgB1D,IAAK,IAAjH,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAdmB,CAhEqE;;AA+EzF;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAEtD,eAAe,CAAC2G,UApF4D;;AAqFzF;AACF;AACA;AACA;AACA;AACA;AACEpD,EAAAA,kBAAkB,EAAE3D,SAAS,CAACuH,OAAV,CAAkBvH,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAAC8G,MAAX,EAAmB9G,SAAS,CAACyH,KAAV,CAAgB;AAC3FhB,IAAAA,KAAK,EAAEzG,SAAS,CAACiH,MAAV,CAAiBF,UADmE;AAE3FhC,IAAAA,KAAK,EAAE/E,SAAS,CAAC8G,MAAV,CAAiBC;AAFmE,GAAhB,CAAnB,CAApB,EAGjCA,UAHe,CA3FqE;;AA+FzF;AACF;AACA;AACEnD,EAAAA,QAAQ,EAAE5D,SAAS,CAACiH,MAlGqE;;AAmGzF;AACF;AACA;AACA;AACEnD,EAAAA,SAAS,EAAE9D;AAAU;AAAD,GAAuCyH,KAAhD,CAAsD;AAC/DtF,IAAAA,OAAO,EAAEnC,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CADsD;AAE/DxF,IAAAA,aAAa,EAAElC,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CAFgD;AAG/DzF,IAAAA,QAAQ,EAAEjC,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CAHqD;AAI/DhG,IAAAA,IAAI,EAAE1B,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CAJyD;AAK/D5F,IAAAA,MAAM,EAAE9B,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CALuD;AAM/D7F,IAAAA,WAAW,EAAE7B,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CANkD;AAO/D9F,IAAAA,MAAM,EAAE5B,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB,CAPuD;AAQ/D/F,IAAAA,OAAO,EAAE3B,SAAS,CAACwH,SAAV,CAAoB,CAACxH,SAAS,CAACgH,IAAX,EAAiBhH,SAAS,CAAC0H,MAA3B,CAApB;AARsD,GAAtD,CAvG8E;;AAiHzF;AACF;AACA;AACA;AACA;AACEjG,EAAAA,KAAK,EAAEzB,SAAS,CAACyH,KAAV,CAAgB;AACrBtF,IAAAA,OAAO,EAAEnC,SAAS,CAACuE,WADE;AAErBrC,IAAAA,aAAa,EAAElC,SAAS,CAACuE,WAFJ;AAGrBtC,IAAAA,QAAQ,EAAEjC,SAAS,CAACuE,WAHC;AAIrB7C,IAAAA,IAAI,EAAE1B,SAAS,CAACuE,WAJK;AAKrBzC,IAAAA,MAAM,EAAE9B,SAAS,CAACuE,WALG;AAMrB1C,IAAAA,WAAW,EAAE7B,SAAS,CAACuE,WANF;AAOrB3C,IAAAA,MAAM,EAAE5B,SAAS,CAACuE,WAPG;AAQrB5C,IAAAA,OAAO,EAAE3B,SAAS,CAACuE;AARE,GAAhB;AAtHkF,CAA3F,GAgII,KAAK,CAhIT;AAiIA,SAASnC,eAAT","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colSpan\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelId\", \"labelRowsPerPage\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"selectId\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { isHostComponent } from '../utils/isHostComponent';\nimport { TablePaginationActions } from './TablePaginationActions';\nimport { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));\n};\n\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Table Pagination](https://mui.com/base-ui/react-table-pagination/)\n *\n * API:\n *\n * - [TablePagination API](https://mui.com/base-ui/react-table-pagination/components-api/#table-pagination)\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, forwardedRef) {\n  var _slots$root, _slots$select, _slots$actions, _slots$menuItem, _slots$selectLabel, _slots$displayedRows, _slots$toolbar, _slots$spacer;\n  const {\n      colSpan: colSpanProp,\n      count,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelId: labelIdProp,\n      labelRowsPerPage = 'Rows per page:',\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      selectId: selectIdProp,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'td';\n  if (Root === 'td' || !isHostComponent(Root)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = (_slots$select = slots.select) != null ? _slots$select : 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: event => onRowsPerPageChange && onRowsPerPageChange(event),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = (_slots$actions = slots.actions) != null ? _slots$actions : TablePaginationActions;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = (_slots$menuItem = slots.menuItem) != null ? _slots$menuItem : 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = (_slots$selectLabel = slots.selectLabel) != null ? _slots$selectLabel : 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = (_slots$displayedRows = slots.displayedRows) != null ? _slots$displayedRows : 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = (_slots$toolbar = slots.toolbar) != null ? _slots$toolbar : 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = (_slots$spacer = slots.spacer) != null ? _slots$spacer : 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsxs(Toolbar, _extends({}, toolbarProps, {\n      children: [/*#__PURE__*/_jsx(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, _extends({}, selectLabelProps, {\n        children: labelRowsPerPage\n      })), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, _extends({}, selectProps, {\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, _extends({}, menuItemProps, {\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(DisplayedRows, _extends({}, displayedRowsProps, {\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      })), /*#__PURE__*/_jsx(Actions, _extends({}, actionsProps))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport { TablePagination };"]},"metadata":{},"sourceType":"module"}