{"ast":null,"code":"'use strict';\n\n// tar -u\nvar hlo = require('./high-level-opt.js');\nvar r = require('./replace.js');\n// just call tar.r with the filter and mtimeCache\n\nmodule.exports = function (opt_, files, cb) {\n  var opt = hlo(opt_);\n  if (!opt.file) {\n    throw new TypeError('file is required');\n  }\n  if (opt.gzip) {\n    throw new TypeError('cannot append to compressed archives');\n  }\n  if (!files || !Array.isArray(files) || !files.length) {\n    throw new TypeError('no files or directories specified');\n  }\n  files = Array.from(files);\n  mtimeFilter(opt);\n  return r(opt, files, cb);\n};\nvar mtimeFilter = function mtimeFilter(opt) {\n  var filter = opt.filter;\n  if (!opt.mtimeCache) {\n    opt.mtimeCache = new Map();\n  }\n  opt.filter = filter ? function (path, stat) {\n    return filter(path, stat) && !(opt.mtimeCache.get(path) > stat.mtime);\n  } : function (path, stat) {\n    return !(opt.mtimeCache.get(path) > stat.mtime);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}