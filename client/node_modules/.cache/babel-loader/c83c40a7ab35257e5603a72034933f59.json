{"ast":null,"code":"/**\n * React Router DOM v6.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nlet _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    submit,\n    relative,\n    preventScrollReset\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\n\n\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"sources":["/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/node_modules/react-router-dom/dom.ts","/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/node_modules/react-router-dom/index.tsx"],"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","START_TRANSITION","startTransitionImpl","React","BrowserRouter","children","historyRef","useRef","current","v5Compat","setStateImpl","useState","location","v7_startTransition","setState","useCallback","newState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","HistoryRouter","displayName","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","ref","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","DataRouterStateContext","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","ariaCurrent","filter","Boolean","join","Form","props","submit","useSubmit","FormImpl","onSubmit","forwardedRef","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","useDataRouterState","replaceProp","navigate","useNavigate","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","router","UseSubmit","currentRouteId","useRouteId","options","getFormSubmissionInfo","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","routeContext","RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","UseFetcher","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","_extends","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","when","blocker","useBlocker","proceed","confirm","setTimeout","reset"],"mappings":"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","sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}