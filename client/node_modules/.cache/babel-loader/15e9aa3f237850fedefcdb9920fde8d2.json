{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\n/**\r\n * The basic building block for creating custom switches.\r\n *\r\n * Demos:\r\n *\r\n * - [Switch](https://mui.com/base-ui/react-switch/#hook)\r\n *\r\n * API:\r\n *\r\n * - [useSwitch API](https://mui.com/base-ui/react-switch/hooks-api/#use-switch)\r\n */\n\nexport function useSwitch(props) {\n  const {\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'Switch',\n    state: 'checked'\n  });\n\n  const createHandleInputChange = otherProps => event => {\n    var _otherProps$onChange; // Workaround for https://github.com/facebook/react/issues/9023\n\n\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    setCheckedState(event.target.checked);\n    onChange == null ? void 0 : onChange(event);\n    (_otherProps$onChange = otherProps.onChange) == null ? void 0 : _otherProps$onChange.call(otherProps, event);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const inputRef = React.useRef(null);\n\n  const createHandleFocus = otherProps => event => {\n    var _otherProps$onFocus; // Fix for https://github.com/facebook/react/issues/7769\n\n\n    if (!inputRef.current) {\n      inputRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      onFocusVisible == null ? void 0 : onFocusVisible(event);\n    }\n\n    onFocus == null ? void 0 : onFocus(event);\n    (_otherProps$onFocus = otherProps.onFocus) == null ? void 0 : _otherProps$onFocus.call(otherProps, event);\n  };\n\n  const createHandleBlur = otherProps => event => {\n    var _otherProps$onBlur;\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    onBlur == null ? void 0 : onBlur(event);\n    (_otherProps$onBlur = otherProps.onBlur) == null ? void 0 : _otherProps$onBlur.call(otherProps, event);\n  };\n\n  const handleInputRef = useForkRef(focusVisibleRef, inputRef);\n\n  const getInputProps = function () {\n    let otherProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({\n      checked: checkedProp,\n      defaultChecked,\n      disabled,\n      readOnly,\n      ref: handleInputRef,\n      required,\n      type: 'checkbox'\n    }, otherProps, {\n      onChange: createHandleInputChange(otherProps),\n      onFocus: createHandleFocus(otherProps),\n      onBlur: createHandleBlur(otherProps)\n    });\n  };\n\n  return {\n    checked,\n    disabled: Boolean(disabled),\n    focusVisible,\n    getInputProps,\n    inputRef: handleInputRef,\n    readOnly: Boolean(readOnly)\n  };\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useSwitch/useSwitch.js"],"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","useSwitch","props","checked","checkedProp","defaultChecked","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","setCheckedState","controlled","default","Boolean","name","state","createHandleInputChange","otherProps","event","_otherProps$onChange","nativeEvent","defaultPrevented","target","call","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","ref","focusVisibleRef","focusVisible","setFocusVisible","useState","useEffect","current","inputRef","useRef","createHandleFocus","_otherProps$onFocus","currentTarget","createHandleBlur","_otherProps$onBlur","handleInputRef","getInputProps","type"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\r\n/**\r\n * The basic building block for creating custom switches.\r\n *\r\n * Demos:\r\n *\r\n * - [Switch](https://mui.com/base-ui/react-switch/#hook)\r\n *\r\n * API:\r\n *\r\n * - [useSwitch API](https://mui.com/base-ui/react-switch/hooks-api/#use-switch)\r\n */\r\nexport function useSwitch(props) {\r\n  const {\r\n    checked: checkedProp,\r\n    defaultChecked,\r\n    disabled,\r\n    onBlur,\r\n    onChange,\r\n    onFocus,\r\n    onFocusVisible,\r\n    readOnly,\r\n    required\r\n  } = props;\r\n  const [checked, setCheckedState] = useControlled({\r\n    controlled: checkedProp,\r\n    default: Boolean(defaultChecked),\r\n    name: 'Switch',\r\n    state: 'checked'\r\n  });\r\n  const createHandleInputChange = otherProps => event => {\r\n    var _otherProps$onChange;\r\n    // Workaround for https://github.com/facebook/react/issues/9023\r\n    if (event.nativeEvent.defaultPrevented) {\r\n      return;\r\n    }\r\n    setCheckedState(event.target.checked);\r\n    onChange == null ? void 0 : onChange(event);\r\n    (_otherProps$onChange = otherProps.onChange) == null ? void 0 : _otherProps$onChange.call(otherProps, event);\r\n  };\r\n  const {\r\n    isFocusVisibleRef,\r\n    onBlur: handleBlurVisible,\r\n    onFocus: handleFocusVisible,\r\n    ref: focusVisibleRef\r\n  } = useIsFocusVisible();\r\n  const [focusVisible, setFocusVisible] = React.useState(false);\r\n  if (disabled && focusVisible) {\r\n    setFocusVisible(false);\r\n  }\r\n  React.useEffect(() => {\r\n    isFocusVisibleRef.current = focusVisible;\r\n  }, [focusVisible, isFocusVisibleRef]);\r\n  const inputRef = React.useRef(null);\r\n  const createHandleFocus = otherProps => event => {\r\n    var _otherProps$onFocus;\r\n    // Fix for https://github.com/facebook/react/issues/7769\r\n    if (!inputRef.current) {\r\n      inputRef.current = event.currentTarget;\r\n    }\r\n    handleFocusVisible(event);\r\n    if (isFocusVisibleRef.current === true) {\r\n      setFocusVisible(true);\r\n      onFocusVisible == null ? void 0 : onFocusVisible(event);\r\n    }\r\n    onFocus == null ? void 0 : onFocus(event);\r\n    (_otherProps$onFocus = otherProps.onFocus) == null ? void 0 : _otherProps$onFocus.call(otherProps, event);\r\n  };\r\n  const createHandleBlur = otherProps => event => {\r\n    var _otherProps$onBlur;\r\n    handleBlurVisible(event);\r\n    if (isFocusVisibleRef.current === false) {\r\n      setFocusVisible(false);\r\n    }\r\n    onBlur == null ? void 0 : onBlur(event);\r\n    (_otherProps$onBlur = otherProps.onBlur) == null ? void 0 : _otherProps$onBlur.call(otherProps, event);\r\n  };\r\n  const handleInputRef = useForkRef(focusVisibleRef, inputRef);\r\n  const getInputProps = (otherProps = {}) => _extends({\r\n    checked: checkedProp,\r\n    defaultChecked,\r\n    disabled,\r\n    readOnly,\r\n    ref: handleInputRef,\r\n    required,\r\n    type: 'checkbox'\r\n  }, otherProps, {\r\n    onChange: createHandleInputChange(otherProps),\r\n    onFocus: createHandleFocus(otherProps),\r\n    onBlur: createHandleBlur(otherProps)\r\n  });\r\n  return {\r\n    checked,\r\n    disabled: Boolean(disabled),\r\n    focusVisible,\r\n    getInputProps,\r\n    inputRef: handleInputRef,\r\n    readOnly: Boolean(readOnly)\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}