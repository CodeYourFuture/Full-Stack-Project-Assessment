{"ast":null,"code":"var _jsxFileName = \"/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/src/Videos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Videos(props) {\n  _s();\n\n  const [loadData, setLoadData] = useState([]);\n  const [titleData, setTitleData] = useState(\"\");\n  const [urlData, setUrlData] = useState(\"\"); // fetch(\"http://localhost:3000/videos\")\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //     return setLoadData(data);\n  //   });\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/videos\");\n\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n\n        const data = await response.json();\n        const videoId = data.url;\n        console.log(videoId);\n        return setLoadData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    getData();\n  }, [setLoadData]);\n\n  function cancelBtnHandler(e) {\n    props.setShow(false);\n  }\n\n  function addClickHandeler(e) {\n    e.preventDefault();\n    const newVideo = {\n      title: titleData,\n      url: urlData\n    }; //adding video\n\n    fetch(\"http://localhost:3000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVideo)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setLoadData(data);\n      console.log(titleData);\n      console.log(urlData);\n      setTitleData(\"\");\n      setUrlData(\"\");\n    }).catch(error => {\n      console.error(\"Error adding video:\", error);\n    });\n  }\n\n  function deleteBtnHandler(item) {\n    const deletevideo = {\n      id: item.id,\n      title: item.title,\n      url: item.url\n    }; //deleting video\n\n    fetch(`http://localhost:3000/videos/${item.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(deletevideo)\n    }).then(response => response.json()).then(data => {\n      setLoadData(data);\n    }).catch(error => {\n      console.error(\"Error deleting video:\", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [props.show && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formDiv\",\n        onSubmit: addClickHandeler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            value: titleData,\n            onChange: e => {\n              console.log(e.target.value);\n              setTitleData(e.target.value);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"url\",\n            children: \"Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"url\",\n            value: urlData,\n            onChange: e => setUrlData(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addCancelBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: cancelBtnHandler,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainShowVideos\",\n        children: loadData.length > 0 ? loadData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showVideo\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 5\n            },\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"350\",\n            height: \"200\",\n            src: `https://www.youtube.com/embed/${item.url}`,\n            title: \"YouTube video player\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnShowVideo\",\n            onClick: () => deleteBtnHandler(item),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No video yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Videos, \"hRwQAw4RCy89ad7Ui5yFZvkGOYc=\");\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/Users/shadifakhri/Documents/Full-Stack-Project-Assessment/Full-Stack-Project-Assessment/client/src/Videos.js"],"names":["React","useEffect","useState","Videos","props","loadData","setLoadData","titleData","setTitleData","urlData","setUrlData","getData","response","fetch","ok","Error","data","json","videoId","url","console","log","error","cancelBtnHandler","e","setShow","addClickHandeler","preventDefault","newVideo","title","method","headers","body","JSON","stringify","then","catch","deleteBtnHandler","item","deletevideo","id","show","target","value","length","map","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Videos(props) {\n  const [loadData, setLoadData] = useState([]);\n  const [titleData, setTitleData] = useState(\"\");\n  const [urlData, setUrlData] = useState(\"\");\n\n  // fetch(\"http://localhost:3000/videos\")\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //     return setLoadData(data);\n  //   });\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/videos\");\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n        const data = await response.json();\n        const videoId = data.url;\n        console.log(videoId);\n        return setLoadData(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    getData();\n  },[setLoadData]);\n\n  function cancelBtnHandler(e) {\n   \n    props.setShow(false);\n  }\n\n  function addClickHandeler(e) {\n    e.preventDefault();\n    const newVideo = { title: titleData, url: urlData };\n    //adding video\n    fetch(\"http://localhost:3000/videos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVideo),\n      \n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setLoadData(data);\n        console.log(titleData);\n        console.log(urlData);\n        setTitleData(\"\");\n        setUrlData(\"\");\n      })\n    .catch((error) => {\n      console.error(\"Error adding video:\", error);\n    });\n  }\nfunction deleteBtnHandler(item) {\n  const deletevideo = {\n    id: item.id,\n    title: item.title,\n    url: item.url,\n  };\n//deleting video\n  fetch(`http://localhost:3000/videos/${item.id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(deletevideo),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      setLoadData(data);\n    })\n    .catch((error) => {\n      console.error(\"Error deleting video:\", error);\n    });\n}\n  \n  return (\n    <>\n      <div className=\"main\">\n        {props.show && (\n          <form className=\"formDiv\" onSubmit={addClickHandeler}>\n            <div className=\"input-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                id=\"title\"\n                value={titleData}\n                onChange={(e) => {\n                  console.log(e.target.value);\n                  setTitleData(e.target.value);\n                }}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"url\">Url</label>\n              <input\n                id=\"url\"\n                value={urlData}\n                onChange={(e) => setUrlData(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"addCancelBtn\">\n              <button type=\"button\" onClick={cancelBtnHandler}>\n                Cancel\n              </button>\n              <button type=\"submit\">Add</button>\n            </div>\n          </form>\n        )}\n        <div className=\"mainShowVideos\">\n          {loadData.length > 0 ? (\n            loadData.map((item) => (\n              \n              <div key={item.id} className=\"showVideo\">\n                <p style={{ margin: 5 }}>{item.title}</p>\n                <iframe\n                  width=\"350\"\n                  height=\"200\"\n                  \n                  src={`https://www.youtube.com/embed/${item.url}`}\n                \n                  title=\"YouTube video player\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n                <button\n                  className=\"btnShowVideo\"\n                  onClick={() => deleteBtnHandler(item)}\n                >\n                  Delete\n                </button>\n              </div>\n            ))\n          ) : (\n            <p>No video yet.</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Videos;\n"]},"metadata":{},"sourceType":"module"}