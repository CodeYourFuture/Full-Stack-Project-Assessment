{"ast":null,"code":"var _jsxFileName = \"/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Uploadvideo() {\n  _s();\n\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n\n  function isValidURL(url) {\n    const pattern = /^(https?:\\/\\/)?[a-z0-9\\-._~:/?#[\\]@!$&'()*+,;=]+$/i;\n    return pattern.test(url);\n  }\n\n  const [title, setTitle] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (title.trim() === \"\") {\n      return alert(\"Title cannot be empty.\");\n    } // const currentDate = new Date();\n    //const formattedDate = currentDate.toISOString();\n\n\n    const urlParts = url.split(\"watch?\");\n\n    if (urlParts.length === 2) {\n      const formData = {\n        title: title,\n        rating: 0,\n        url: urlParts[0] + \"embed/\" + urlParts[1]\n      };\n\n      if (!isValidURL(formData.url)) {\n        return alert(\"Please enter a valid URL.\");\n      }\n\n      try {\n        setSubmissionStatus(\"success\");\n      } catch (error) {\n        setSubmissionStatus(\"error\");\n      }\n\n      try {\n        const response = await fetch(\"/videos\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n\n        if (response.ok) {\n          console.log(\"Form data submitted successfully\");\n        } else {\n          console.error(\"Form data submission failed\");\n        }\n      } catch (error) {\n        console.log(\"Error submitting form:\", error);\n      }\n    } else {\n      return alert(\"Please enter a valid url\");\n    }\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const handleButtonClick = () => {\n    if (!showForm) {\n      setShowForm(true);\n    }\n  };\n\n  const handleCancelButtonClick = () => {\n    if (showForm) {\n      setShowForm(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"alignUpload\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-light customBackground2\",\n      onClick: handleButtonClick,\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [submissionStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Form submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), submissionStatus === \"error\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There was an error submitting the form.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            type: \"text\",\n            value: title,\n            class: \"input\",\n            name: \"title\",\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"url\",\n            children: \"url:\\xA0\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"url\",\n            value: url,\n            class: \"input\",\n            type: \"text\",\n            name: \"url\",\n            onChange: e => setURL(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"formBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-light cancelBtn\",\n            onClick: handleCancelButtonClick,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-light uploadBtn\",\n            type: \"submit\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Uploadvideo, \"/IGjl/L1o8v6Nj7DgjUEwarkRVI=\");\n\n_c = Uploadvideo;\n\nfunction Searchvideo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"searchAlign\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"searchid\",\n      children: \"Search:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchid\",\n      type: \"text\",\n      class: \"searchVideo\",\n      name: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Searchvideo;\nexport default function Search() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(Uploadvideo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Searchvideo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Search;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Uploadvideo\");\n$RefreshReg$(_c2, \"Searchvideo\");\n$RefreshReg$(_c3, \"Search\");","map":{"version":3,"sources":["/home/mele/CodeYourFuture/Directory/htmlcssweek4/Full-Stack-Project-Assessment/client/src/Search.js"],"names":["React","useState","Uploadvideo","submissionStatus","setSubmissionStatus","isValidURL","url","pattern","test","title","setTitle","setURL","handleSubmit","event","preventDefault","trim","alert","urlParts","split","length","formData","rating","error","response","fetch","method","headers","body","JSON","stringify","ok","console","log","showForm","setShowForm","handleButtonClick","handleCancelButtonClick","e","target","value","Searchvideo","Search"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction Uploadvideo() {\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n\n  function isValidURL(url) {\n    const pattern = /^(https?:\\/\\/)?[a-z0-9\\-._~:/?#[\\]@!$&'()*+,;=]+$/i;\n    return pattern.test(url);\n  }\n\n  const [title, setTitle] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (title.trim() === \"\") {\n      return alert(\"Title cannot be empty.\");\n    }\n\n    // const currentDate = new Date();\n    //const formattedDate = currentDate.toISOString();\n    const urlParts = url.split(\"watch?\");\n    if (urlParts.length === 2) {\n      const formData = {\n        title: title,\n        rating: 0,\n        url: urlParts[0] + \"embed/\" + urlParts[1],\n      };\n      if (!isValidURL(formData.url)) {\n        return alert(\"Please enter a valid URL.\");\n      }\n      try {\n        setSubmissionStatus(\"success\");\n      } catch (error) {\n        setSubmissionStatus(\"error\");\n      }\n\n      try {\n        const response = await fetch(\"/videos\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        });\n        if (response.ok) {\n          console.log(\"Form data submitted successfully\");\n        } else {\n          console.error(\"Form data submission failed\");\n        }\n      } catch (error) {\n        console.log(\"Error submitting form:\", error);\n      }\n    } else {\n      return alert(\"Please enter a valid url\");\n    }\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const handleButtonClick = () => {\n    if (!showForm) {\n      setShowForm(true);\n    }\n  };\n  const handleCancelButtonClick = () => {\n    if (showForm) {\n      setShowForm(false);\n    }\n  };\n\n  return (\n    <div class=\"alignUpload\">\n      <button\n        class=\"btn btn-light customBackground2\"\n        onClick={handleButtonClick}\n      >\n        Upload Video\n      </button>\n      {showForm && (\n        <div class=\"container\">\n          {submissionStatus === \"success\" && (\n            <p>Form submitted successfully!</p>\n          )}\n          {submissionStatus === \"error\" && (\n            <p>There was an error submitting the form.</p>\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"title\">Title:</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                value={title}\n                class=\"input\"\n                name=\"title\"\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"url\">url:&nbsp;&nbsp;&nbsp;</label>\n              <input\n                id=\"url\"\n                value={url}\n                class=\"input\"\n                type=\"text\"\n                name=\"url\"\n                onChange={(e) => setURL(e.target.value)}\n                required\n              ></input>\n            </div>\n            <div class=\"formBtn\">\n              <button\n                class=\"btn btn-light cancelBtn\"\n                onClick={handleCancelButtonClick}\n              >\n                Cancel\n              </button>\n              <button class=\"btn btn-light uploadBtn\" type=\"submit\">\n                Upload\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\nfunction Searchvideo() {\n  return (\n    <div class = \"searchAlign\" >\n      <label for=\"searchid\">Search:</label>\n      <input\n        id=\"searchid\"\n        type=\"text\"\n        class=\"searchVideo\"\n        name=\"search\"\n      ></input>\n    </div>\n  );\n}\n\nexport default function Search() {\n  return (\n    <div class=\"search\">\n      <Uploadvideo />\n      <Searchvideo />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}