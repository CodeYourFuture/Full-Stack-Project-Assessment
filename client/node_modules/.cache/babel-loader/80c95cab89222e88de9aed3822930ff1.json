{"ast":null,"code":"import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\n\nfunction NoopTransition(_ref) {\n  let {\n    children,\n    in: inProp,\n    onExited,\n    mountOnEnter,\n    unmountOnExit\n  } = _ref;\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n\n  if (unmountOnExit) {\n    return null;\n  }\n\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n\n  return child;\n}\n\nexport default NoopTransition;","map":{"version":3,"sources":["C:/Users/meron/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/@restart/ui/esm/NoopTransition.js"],"names":["useEventCallback","useMergedRefs","cloneElement","useEffect","useRef","NoopTransition","children","in","inProp","onExited","mountOnEnter","unmountOnExit","ref","hasEnteredRef","handleExited","current","combinedRef","child"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,QAAgD,OAAhD;;AACA,SAASC,cAAT,OAMG;AAAA,MANqB;AACtBC,IAAAA,QADsB;AAEtBC,IAAAA,EAAE,EAAEC,MAFkB;AAGtBC,IAAAA,QAHsB;AAItBC,IAAAA,YAJsB;AAKtBC,IAAAA;AALsB,GAMrB;AACD,QAAMC,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMS,aAAa,GAAGT,MAAM,CAACI,MAAD,CAA5B;AACA,QAAMM,YAAY,GAAGd,gBAAgB,CAACS,QAAD,CAArC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,MAAJ,EAAYK,aAAa,CAACE,OAAd,GAAwB,IAAxB,CAAZ,KAA8C;AAC5CD,MAAAA,YAAY,CAACF,GAAG,CAACG,OAAL,CAAZ;AACD;AACF,GAJQ,EAIN,CAACP,MAAD,EAASM,YAAT,CAJM,CAAT;AAKA,QAAME,WAAW,GAAGf,aAAa,CAACW,GAAD,EAAMN,QAAQ,CAACM,GAAf,CAAjC;AACA,QAAMK,KAAK,GAAG,aAAaf,YAAY,CAACI,QAAD,EAAW;AAChDM,IAAAA,GAAG,EAAEI;AAD2C,GAAX,CAAvC;AAGA,MAAIR,MAAJ,EAAY,OAAOS,KAAP;;AACZ,MAAIN,aAAJ,EAAmB;AACjB,WAAO,IAAP;AACD;;AACD,MAAI,CAACE,aAAa,CAACE,OAAf,IAA0BL,YAA9B,EAA4C;AAC1C,WAAO,IAAP;AACD;;AACD,SAAOO,KAAP;AACD;;AACD,eAAeZ,cAAf","sourcesContent":["import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;"]},"metadata":{},"sourceType":"module"}