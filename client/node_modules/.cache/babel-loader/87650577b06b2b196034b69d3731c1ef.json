{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowingVideos(props) {\n  _s();\n\n  const [videos, setVideos] = useState(props.result);\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  function deleteVideo(id) {\n    const updatedVideos = videos.filter(video => video.id !== id);\n    setVideos(updatedVideos);\n  }\n\n  function handleRating(id, type) {\n    const updatedVideos = videos.map(video => {\n      if (video.id === id) {\n        if (type === \"thumbs-up\") {\n          return { ...video,\n            rating: video.rating + 1\n          };\n        } else if (type === \"thumbs-down\") {\n          return { ...video,\n            rating: video.rating - 1\n          };\n        }\n      }\n\n      return video;\n    });\n    setVideos(updatedVideos);\n  }\n\n  const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: sortedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-up\",\n          onClick: () => handleRating(video.id, \"thumbs-up\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: video.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-thumbs-down\",\n          onClick: () => handleRating(video.id, \"thumbs-down\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"allVideos\",\n        width: \"300\",\n        height: \"220\",\n        src: convertToEmbedUrl(video.url),\n        title: video.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteVideo(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowingVideos, \"m5XAOzZ20O9i4mgZED0RSfJqLe4=\");\n\n_c = ShowingVideos;\nexport default ShowingVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowingVideos\");","map":{"version":3,"sources":["/home/coder/Documents/CYF/Back-End/Full-Stack-Project-Assessment/client/src/component/ShowingVideos.jsx"],"names":["React","useState","ShowingVideos","props","videos","setVideos","result","convertToEmbedUrl","url","videoId","split","deleteVideo","id","updatedVideos","filter","video","handleRating","type","map","rating","sortedVideos","sort","a","b","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ShowingVideos(props) {\n  const [videos, setVideos] = useState(props.result);\n\n  function convertToEmbedUrl(url) {\n    const videoId = url.split(\"v=\")[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }\n\n  function deleteVideo(id) {\n    const updatedVideos = videos.filter((video) => video.id !== id);\n    setVideos(updatedVideos);\n  }\n\n  function handleRating(id, type) {\n    const updatedVideos = videos.map((video) => {\n      if (video.id === id) {\n        if (type === \"thumbs-up\") {\n          return { ...video, rating: video.rating + 1 };\n        } else if (type === \"thumbs-down\") {\n          return { ...video, rating: video.rating - 1 };\n        }\n      }\n      return video;\n    });\n\n    setVideos(updatedVideos);\n  }\n\n  const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n  return (\n    <div className=\"\">\n      {sortedVideos.map((video) => (\n        <div className=\"videos\" key={video.id}>\n          <p>{video.title}</p>\n          <div className=\"buttons\">\n            <i\n              className=\"fa-solid fa-thumbs-up\"\n              onClick={() => handleRating(video.id, \"thumbs-up\")}\n            ></i>\n            <h4>{video.rating}</h4>\n            <i\n              className=\"fa-solid fa-thumbs-down\"\n              onClick={() => handleRating(video.id, \"thumbs-down\")}\n            ></i>\n          </div>\n\n          <iframe\n            className=\"allVideos\"\n            width=\"300\"\n            height=\"220\"\n            src={convertToEmbedUrl(video.url)}\n            title={video.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <button onClick={() => deleteVideo(video.id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShowingVideos;\n"]},"metadata":{},"sourceType":"module"}