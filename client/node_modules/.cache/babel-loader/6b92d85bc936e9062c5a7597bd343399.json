{"ast":null,"code":"var _jsxFileName = \"/home/codeyourfuture/Desktop/homework CYF/Full-Stack-Project-Assessment/client/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(_ref) {\n  _s();\n\n  let {\n    form,\n    setVideolist,\n    videolist\n  } = _ref;\n  const [addvideo, setAddvideo] = useState({\n    'title': '',\n    'url': '',\n    uploadDate: moment().format('YYYY-MM-DD'),\n    uploadTime: ''\n  });\n\n  const handelAdd = obj => {\n    obj.preventDefault();\n\n    if (addvideo.url.includes('https://www.youtube.com/')) {\n      setVideolist([...videolist, addvideo]);\n    } else {\n      alert('Please enter vaild address');\n    }\n\n    fetch(\"http://localhost:5000/videos\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(obj)\n    }).then(res => res.json()).then(res => console.log(res));\n  };\n\n  const handlechange = event => {\n    setAddvideo({ ...addvideo,\n      [event.target.name]: event.target.value,\n      uploadTime: moment().format('hh:mm:ss')\n    });\n    console.log(addvideo); // const {name,value}=event.target\n    // setAddvideo((pre)=>{if(name==='title'){\n    //   return {'title':value,\n    //           'url':pre.url}\n    // }\n    // else {\n    //   return{'title':pre.title,\n    //          'url':value\n    //   }\n    // }}\n    // )\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handelAdd,\n      style: {\n        display: form ? 'inline' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: handlechange,\n        value: addvideo.title,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 92\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"url\",\n        onChange: handlechange,\n        value: addvideo.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"qeIqrMluzp1tcociwVnAXrAaNdo=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/codeyourfuture/Desktop/homework CYF/Full-Stack-Project-Assessment/client/src/components/Form.js"],"names":["React","useState","moment","Form","form","setVideolist","videolist","addvideo","setAddvideo","uploadDate","format","uploadTime","handelAdd","obj","preventDefault","url","includes","alert","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","console","log","handlechange","event","target","name","value","display","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,IAAT,OAA6C;AAAA;;AAAA,MAA/B;AAACC,IAAAA,IAAD;AAAMC,IAAAA,YAAN;AAAmBC,IAAAA;AAAnB,GAA+B;AAC3D,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAuBP,QAAQ,CAAC;AACpC,aAAQ,EAD4B;AAEpC,WAAM,EAF8B;AAGpCQ,IAAAA,UAAU,EAACP,MAAM,GAAGQ,MAAT,CAAgB,YAAhB,CAHyB;AAKpCC,IAAAA,UAAU,EAAC;AALyB,GAAD,CAApC;;AAQC,QAAMC,SAAS,GAAEC,GAAD,IAAO;AACvBA,IAAAA,GAAG,CAACC,cAAJ;;AACA,QAAGP,QAAQ,CAACQ,GAAT,CAAaC,QAAb,CAAsB,0BAAtB,CAAH,EACA;AAAEX,MAAAA,YAAY,CAAC,CAAC,GAAGC,SAAJ,EAAcC,QAAd,CAAD,CAAZ;AAAsC,KADxC,MAGI;AAEFU,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;;AACDC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,mCADD;AAEP,wBAAgB;AAFT,OAF2B;AAMpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,GAAf;AAN8B,KAAjC,CAAL,CAQCY,IARD,CAQMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EARX,EASCF,IATD,CASMC,GAAG,IAAEE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CATX;AAaD,GAtBC;;AAuBF,QAAMI,YAAY,GAAEC,KAAD,IAAS;AAC1BvB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACwB,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAoBF,KAAK,CAACC,MAAN,CAAaE,KAA/C;AAAqDvB,MAAAA,UAAU,EAACT,MAAM,GAAGQ,MAAT,CAAgB,UAAhB;AAAhE,KAAD,CAAX;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ,EAF0B,CAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACC,GAfD;;AAiBE,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEK,SAAhB;AAA2B,MAAA,KAAK,EAAE;AAACuB,QAAAA,OAAO,EAAE/B,IAAI,GAAG,QAAH,GAAc;AAA5B,OAAlC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAmB,QAAA,QAAQ,EAAE0B,YAA7B;AAA2C,QAAA,KAAK,EAAEvB,QAAQ,CAAC6B,KAA3D;AAAkE,QAAA,QAAQ;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFF,eAEqF;AAAA;AAAA;AAAA;AAAA,cAFrF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAiB,QAAA,QAAQ,EAAEN,YAA3B;AAAyC,QAAA,KAAK,EAAEvB,QAAQ,CAACQ;AAAzD;AAAA;AAAA;AAAA;AAAA,cAJF,eAIwE;AAAA;AAAA;AAAA;AAAA,cAJxE,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9DuBZ,I;;KAAAA,I","sourcesContent":["import React,{useState} from 'react'\nimport moment from 'moment'\n\nexport default function Form({form,setVideolist,videolist}) {\n const[addvideo,setAddvideo]=useState({\n  'title':'',\n  'url':'',\n  uploadDate:moment().format('YYYY-MM-DD'),\n\n  uploadTime:''\n\n})\n  const handelAdd=(obj)=>{\n  obj.preventDefault();\n  if(addvideo.url.includes('https://www.youtube.com/'))\n  { setVideolist([...videolist,addvideo])}\n\n  else{\n    \n    alert('Please enter vaild address')\n  }\n  fetch(\"http://localhost:5000/videos\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(obj),\n  })\n  .then(res=>res.json())\n  .then(res=>console.log(res))\n\n  \n\n}\nconst handlechange=(event)=>{\n  setAddvideo({...addvideo, [event.target.name]:event.target.value,uploadTime:moment().format('hh:mm:ss')})\n  console.log(addvideo);\n// const {name,value}=event.target\n// setAddvideo((pre)=>{if(name==='title'){\n//   return {'title':value,\n//           'url':pre.url}\n// }\n// else {\n//   return{'title':pre.title,\n//          'url':value\n\n//   }\n// }}\n// )\n}\n\n  return (\n    <div>\n      <form onSubmit={handelAdd} style={{display: form ? 'inline' : 'none'}}>\n        <label>Title</label>\n        <input name='title'onChange={handlechange} value={addvideo.title} required></input><br/>\n        <label>URL</label>\n        <input name='url'onChange={handlechange} value={addvideo.url}></input><br/>\n        <button >Add</button>\n        <button>Cancle</button>\n      </form>\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}