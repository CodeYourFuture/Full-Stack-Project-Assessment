{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { menuReducer } from './menuReducer';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useList } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { useCompoundParent } from '../utils/useCompound';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true\n  },\n  triggerElement: null\n};\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\r\n */\n\nexport function useMenu() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _useId, _React$useContext;\n\n  const {\n    listboxRef: listboxRefProp,\n    onItemsChange,\n    id: idParam\n  } = parameters;\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, listboxRefProp);\n  const listboxId = (_useId = useId(idParam)) != null ? _useId : '';\n  const {\n    state: {\n      open\n    },\n    dispatch: menuDispatch,\n    triggerElement,\n    registerPopup\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT; // store the initial open state to prevent focus stealing\n  // (the first menu items gets focued only when the menu is opened by the user)\n\n  const isInitiallyOpen = React.useRef(open);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n\n    if (itemId == null) {\n      return null;\n    }\n\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const {\n    dispatch: listDispatch,\n    getRootProps: getListRootProps,\n    contextValue: listContextValue,\n    state: {\n      highlightedValue\n    },\n    rootRef: mergedListRef\n  } = useList({\n    disabledItemsFocusable: true,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    getInitialState: () => ({\n      selectedValues: [],\n      highlightedValue: null\n    }),\n    isItemDisabled: id => {\n      var _subitems$get2;\n\n      return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;\n    },\n    items: subitemKeys,\n    getItemAsString: id => {\n      var _subitems$get3, _subitems$get4;\n\n      return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);\n    },\n    rootRef: handleRef,\n    onItemsChange,\n    reducerActionContext: {\n      listboxRef: rootRef\n    },\n    selectionMode: 'none',\n    stateReducer: menuReducer\n  });\n  useEnhancedEffect(() => {\n    registerPopup(listboxId);\n  }, [listboxId, registerPopup]);\n  React.useEffect(() => {\n    if (open && highlightedValue === subitemKeys[0] && !isInitiallyOpen.current) {\n      var _subitems$get5;\n\n      (_subitems$get5 = subitems.get(subitemKeys[0])) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null ? void 0 : _subitems$get5.focus();\n    }\n  }, [open, highlightedValue, subitems, subitemKeys]);\n  React.useEffect(() => {\n    var _rootRef$current; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {\n      var _subitems$get6;\n\n      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null ? void 0 : _subitems$get6.focus();\n    }\n  }, [highlightedValue, subitems]);\n\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur, _rootRef$current2;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {\n      return;\n    }\n\n    menuDispatch({\n      type: DropdownActionTypes.blur,\n      event\n    });\n  };\n\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      menuDispatch({\n        type: DropdownActionTypes.escapeKeyDown,\n        event\n      });\n    }\n  };\n\n  const getOwnListboxHandlers = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    };\n  };\n\n  const getListboxProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);\n    return _extends({}, getCombinedRootProps(otherHandlers), {\n      id: listboxId,\n      role: 'menu'\n    });\n  };\n\n  React.useDebugValue({\n    subitems,\n    highlightedValue\n  });\n  return {\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\n    dispatch: listDispatch,\n    getListboxProps,\n    highlightedValue,\n    listboxRef: mergedListRef,\n    menuItems: subitems,\n    open,\n    triggerElement\n  };\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/useMenu/useMenu.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","menuReducer","DropdownContext","useList","DropdownActionTypes","useCompoundParent","combineHooksSlotProps","FALLBACK_MENU_CONTEXT","dispatch","popupId","registerPopup","registerTrigger","state","open","triggerElement","useMenu","parameters","_useId","_React$useContext","listboxRef","listboxRefProp","onItemsChange","id","idParam","rootRef","useRef","handleRef","listboxId","menuDispatch","useContext","isInitiallyOpen","subitems","contextValue","compoundComponentContextValue","subitemKeys","useMemo","Array","from","keys","getItemDomElement","useCallback","itemId","_subitems$get$ref$cur","_subitems$get","get","ref","current","listDispatch","getRootProps","getListRootProps","listContextValue","highlightedValue","mergedListRef","disabledItemsFocusable","focusManagement","getInitialState","selectedValues","isItemDisabled","_subitems$get2","disabled","items","getItemAsString","_subitems$get3","_subitems$get4","label","innerText","reducerActionContext","selectionMode","stateReducer","useEffect","_subitems$get5","focus","_rootRef$current","contains","document","activeElement","_subitems$get6","createHandleBlur","otherHandlers","event","_otherHandlers$onBlur","_rootRef$current2","onBlur","call","defaultMuiPrevented","relatedTarget","type","blur","createHandleKeyDown","_otherHandlers$onKeyD","onKeyDown","key","escapeKeyDown","getOwnListboxHandlers","getListboxProps","getCombinedRootProps","role","useDebugValue","menuItems"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\r\nimport { menuReducer } from './menuReducer';\r\nimport { DropdownContext } from '../useDropdown/DropdownContext';\r\nimport { useList } from '../useList';\r\nimport { DropdownActionTypes } from '../useDropdown';\r\nimport { useCompoundParent } from '../utils/useCompound';\r\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\r\nconst FALLBACK_MENU_CONTEXT = {\r\n  dispatch: () => {},\r\n  popupId: '',\r\n  registerPopup: () => {},\r\n  registerTrigger: () => {},\r\n  state: {\r\n    open: true\r\n  },\r\n  triggerElement: null\r\n};\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useMenu API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu)\r\n */\r\nexport function useMenu(parameters = {}) {\r\n  var _useId, _React$useContext;\r\n  const {\r\n    listboxRef: listboxRefProp,\r\n    onItemsChange,\r\n    id: idParam\r\n  } = parameters;\r\n  const rootRef = React.useRef(null);\r\n  const handleRef = useForkRef(rootRef, listboxRefProp);\r\n  const listboxId = (_useId = useId(idParam)) != null ? _useId : '';\r\n  const {\r\n    state: {\r\n      open\r\n    },\r\n    dispatch: menuDispatch,\r\n    triggerElement,\r\n    registerPopup\r\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\r\n\r\n  // store the initial open state to prevent focus stealing\r\n  // (the first menu items gets focued only when the menu is opened by the user)\r\n  const isInitiallyOpen = React.useRef(open);\r\n  const {\r\n    subitems,\r\n    contextValue: compoundComponentContextValue\r\n  } = useCompoundParent();\r\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\r\n  const getItemDomElement = React.useCallback(itemId => {\r\n    var _subitems$get$ref$cur, _subitems$get;\r\n    if (itemId == null) {\r\n      return null;\r\n    }\r\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\r\n  }, [subitems]);\r\n  const {\r\n    dispatch: listDispatch,\r\n    getRootProps: getListRootProps,\r\n    contextValue: listContextValue,\r\n    state: {\r\n      highlightedValue\r\n    },\r\n    rootRef: mergedListRef\r\n  } = useList({\r\n    disabledItemsFocusable: true,\r\n    focusManagement: 'DOM',\r\n    getItemDomElement,\r\n    getInitialState: () => ({\r\n      selectedValues: [],\r\n      highlightedValue: null\r\n    }),\r\n    isItemDisabled: id => {\r\n      var _subitems$get2;\r\n      return (subitems == null || (_subitems$get2 = subitems.get(id)) == null ? void 0 : _subitems$get2.disabled) || false;\r\n    },\r\n    items: subitemKeys,\r\n    getItemAsString: id => {\r\n      var _subitems$get3, _subitems$get4;\r\n      return ((_subitems$get3 = subitems.get(id)) == null ? void 0 : _subitems$get3.label) || ((_subitems$get4 = subitems.get(id)) == null || (_subitems$get4 = _subitems$get4.ref.current) == null ? void 0 : _subitems$get4.innerText);\r\n    },\r\n    rootRef: handleRef,\r\n    onItemsChange,\r\n    reducerActionContext: {\r\n      listboxRef: rootRef\r\n    },\r\n    selectionMode: 'none',\r\n    stateReducer: menuReducer\r\n  });\r\n  useEnhancedEffect(() => {\r\n    registerPopup(listboxId);\r\n  }, [listboxId, registerPopup]);\r\n  React.useEffect(() => {\r\n    if (open && highlightedValue === subitemKeys[0] && !isInitiallyOpen.current) {\r\n      var _subitems$get5;\r\n      (_subitems$get5 = subitems.get(subitemKeys[0])) == null || (_subitems$get5 = _subitems$get5.ref) == null || (_subitems$get5 = _subitems$get5.current) == null ? void 0 : _subitems$get5.focus();\r\n    }\r\n  }, [open, highlightedValue, subitems, subitemKeys]);\r\n  React.useEffect(() => {\r\n    var _rootRef$current;\r\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\r\n    if ((_rootRef$current = rootRef.current) != null && _rootRef$current.contains(document.activeElement) && highlightedValue !== null) {\r\n      var _subitems$get6;\r\n      subitems == null || (_subitems$get6 = subitems.get(highlightedValue)) == null || (_subitems$get6 = _subitems$get6.ref.current) == null ? void 0 : _subitems$get6.focus();\r\n    }\r\n  }, [highlightedValue, subitems]);\r\n  const createHandleBlur = otherHandlers => event => {\r\n    var _otherHandlers$onBlur, _rootRef$current2;\r\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\r\n    if (event.defaultMuiPrevented) {\r\n      return;\r\n    }\r\n    if ((_rootRef$current2 = rootRef.current) != null && _rootRef$current2.contains(event.relatedTarget) || event.relatedTarget === triggerElement) {\r\n      return;\r\n    }\r\n    menuDispatch({\r\n      type: DropdownActionTypes.blur,\r\n      event\r\n    });\r\n  };\r\n  const createHandleKeyDown = otherHandlers => event => {\r\n    var _otherHandlers$onKeyD;\r\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\r\n    if (event.defaultMuiPrevented) {\r\n      return;\r\n    }\r\n    if (event.key === 'Escape') {\r\n      menuDispatch({\r\n        type: DropdownActionTypes.escapeKeyDown,\r\n        event\r\n      });\r\n    }\r\n  };\r\n  const getOwnListboxHandlers = (otherHandlers = {}) => ({\r\n    onBlur: createHandleBlur(otherHandlers),\r\n    onKeyDown: createHandleKeyDown(otherHandlers)\r\n  });\r\n  const getListboxProps = (otherHandlers = {}) => {\r\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListRootProps);\r\n    return _extends({}, getCombinedRootProps(otherHandlers), {\r\n      id: listboxId,\r\n      role: 'menu'\r\n    });\r\n  };\r\n  React.useDebugValue({\r\n    subitems,\r\n    highlightedValue\r\n  });\r\n  return {\r\n    contextValue: _extends({}, compoundComponentContextValue, listContextValue),\r\n    dispatch: listDispatch,\r\n    getListboxProps,\r\n    highlightedValue,\r\n    listboxRef: mergedListRef,\r\n    menuItems: subitems,\r\n    open,\r\n    triggerElement\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}