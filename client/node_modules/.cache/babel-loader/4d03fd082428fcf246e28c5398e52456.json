{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n//   const fetchVideos = () => {\n//     fetch(\"http://localhost:5000/videos\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setVideos(data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   const handleAddVideo = (title, url) => {\n//     const video = {\n//       title: title,\n//       url: url,\n//     };\n//     fetch(\"http://localhost:5000/videos\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(video),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video added successfully\n//           fetchVideos(); // Fetch the updated list of videos\n//         } else {\n//           // Failed to add video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   const handleVote = (videoId, increment) => {\n//     const updatedVideos = videos.map((video) => {\n//       if (video.id === videoId) {\n//         return { ...video, votes: video.votes + increment };\n//       }\n//       return video;\n//     });\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         votes: updatedVideos.find((video) => video.id === videoId).votes,\n//       }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Vote updated successfully\n//           setVideos(updatedVideos);\n//         } else {\n//           // Failed to update vote\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   const handleRemoveVideo = (videoId) => {\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video removed successfully\n//           setVideos(videos.filter((video) => video.id !== videoId));\n//         } else {\n//           // Failed to remove video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n//   return (\n//     <div>\n//       <h1>Video Website</h1>\n//       <VideoList\n//         videos={videos}\n//         handleVote={handleVote}\n//         handleRemove={handleRemoveVideo}\n//       />\n//       <AddVideoForm handleAddVideo={handleAddVideo} />\n//     </div>\n//   );\n// };\n// export default App;","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import VideoList from \"./components/VideoList\";\n// import AddVideoForm from \"./components/AddVideoForm\";\n\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n\n//   const fetchVideos = () => {\n//     fetch(\"http://localhost:5000/videos\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setVideos(data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleAddVideo = (title, url) => {\n//     const video = {\n//       title: title,\n//       url: url,\n//     };\n\n//     fetch(\"http://localhost:5000/videos\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(video),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video added successfully\n//           fetchVideos(); // Fetch the updated list of videos\n//         } else {\n//           // Failed to add video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleVote = (videoId, increment) => {\n//     const updatedVideos = videos.map((video) => {\n//       if (video.id === videoId) {\n//         return { ...video, votes: video.votes + increment };\n//       }\n//       return video;\n//     });\n\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         votes: updatedVideos.find((video) => video.id === videoId).votes,\n//       }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Vote updated successfully\n//           setVideos(updatedVideos);\n//         } else {\n//           // Failed to update vote\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const handleRemoveVideo = (videoId) => {\n//     fetch(`http://localhost:5000/videos/${videoId}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.id) {\n//           // Video removed successfully\n//           setVideos(videos.filter((video) => video.id !== videoId));\n//         } else {\n//           // Failed to remove video\n//           console.error(data.message);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Video Website</h1>\n//       <VideoList\n//         videos={videos}\n//         handleVote={handleVote}\n//         handleRemove={handleRemoveVideo}\n//       />\n//       <AddVideoForm handleAddVideo={handleAddVideo} />\n//     </div>\n//   );\n// };\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}