{"ast":null,"code":"'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\nexport default platform.isStandardBrowserEnv ? // Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      const cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n\n      if (secure === true) {\n        cookie.push('secure');\n      }\n\n      document.cookie = cookie.join('; ');\n    },\n    read: function read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() : // Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();","map":{"version":3,"sources":["C:/Users/onura/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/axios/lib/helpers/cookies.js"],"names":["utils","platform","isStandardBrowserEnv","standardBrowserEnv","write","name","value","expires","path","domain","secure","cookie","push","encodeURIComponent","isNumber","Date","toGMTString","isString","document","join","read","match","RegExp","decodeURIComponent","remove","now","nonStandardBrowserEnv"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAeA,QAAQ,CAACC,oBAAT,GAEf;AACG,SAASC,kBAAT,GAA8B;AAC7B,SAAO;AACLC,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2D;AAChE,YAAMC,MAAM,GAAG,EAAf;AACAA,MAAAA,MAAM,CAACC,IAAP,CAAYP,IAAI,GAAG,GAAP,GAAaQ,kBAAkB,CAACP,KAAD,CAA3C;;AAEA,UAAIN,KAAK,CAACc,QAAN,CAAeP,OAAf,CAAJ,EAA6B;AAC3BI,QAAAA,MAAM,CAACC,IAAP,CAAY,aAAa,IAAIG,IAAJ,CAASR,OAAT,EAAkBS,WAAlB,EAAzB;AACD;;AAED,UAAIhB,KAAK,CAACiB,QAAN,CAAeT,IAAf,CAAJ,EAA0B;AACxBG,QAAAA,MAAM,CAACC,IAAP,CAAY,UAAUJ,IAAtB;AACD;;AAED,UAAIR,KAAK,CAACiB,QAAN,CAAeR,MAAf,CAAJ,EAA4B;AAC1BE,QAAAA,MAAM,CAACC,IAAP,CAAY,YAAYH,MAAxB;AACD;;AAED,UAAIC,MAAM,KAAK,IAAf,EAAqB;AACnBC,QAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ;AACD;;AAEDM,MAAAA,QAAQ,CAACP,MAAT,GAAkBA,MAAM,CAACQ,IAAP,CAAY,IAAZ,CAAlB;AACD,KAtBI;AAwBLC,IAAAA,IAAI,EAAE,SAASA,IAAT,CAAcf,IAAd,EAAoB;AACxB,YAAMgB,KAAK,GAAGH,QAAQ,CAACP,MAAT,CAAgBU,KAAhB,CAAsB,IAAIC,MAAJ,CAAW,eAAejB,IAAf,GAAsB,WAAjC,CAAtB,CAAd;AACA,aAAQgB,KAAK,GAAGE,kBAAkB,CAACF,KAAK,CAAC,CAAD,CAAN,CAArB,GAAkC,IAA/C;AACD,KA3BI;AA6BLG,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBnB,IAAhB,EAAsB;AAC5B,WAAKD,KAAL,CAAWC,IAAX,EAAiB,EAAjB,EAAqBU,IAAI,CAACU,GAAL,KAAa,QAAlC;AACD;AA/BI,GAAP;AAiCD,CAlCD,EAHa,GAuCf;AACG,SAASC,qBAAT,GAAiC;AAChC,SAAO;AACLtB,IAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB,CAAE,CADrB;AAELgB,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AAAE,aAAO,IAAP;AAAc,KAFjC;AAGLI,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB,CAAE;AAHvB,GAAP;AAKD,CAND,EAxCF","sourcesContent":["'use strict';\r\n\r\nimport utils from './../utils.js';\r\nimport platform from '../platform/index.js';\r\n\r\nexport default platform.isStandardBrowserEnv ?\r\n\r\n// Standard browser envs support document.cookie\r\n  (function standardBrowserEnv() {\r\n    return {\r\n      write: function write(name, value, expires, path, domain, secure) {\r\n        const cookie = [];\r\n        cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n        if (utils.isNumber(expires)) {\r\n          cookie.push('expires=' + new Date(expires).toGMTString());\r\n        }\r\n\r\n        if (utils.isString(path)) {\r\n          cookie.push('path=' + path);\r\n        }\r\n\r\n        if (utils.isString(domain)) {\r\n          cookie.push('domain=' + domain);\r\n        }\r\n\r\n        if (secure === true) {\r\n          cookie.push('secure');\r\n        }\r\n\r\n        document.cookie = cookie.join('; ');\r\n      },\r\n\r\n      read: function read(name) {\r\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n        return (match ? decodeURIComponent(match[3]) : null);\r\n      },\r\n\r\n      remove: function remove(name) {\r\n        this.write(name, '', Date.now() - 86400000);\r\n      }\r\n    };\r\n  })() :\r\n\r\n// Non standard browser env (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return {\r\n      write: function write() {},\r\n      read: function read() { return null; },\r\n      remove: function remove() {}\r\n    };\r\n  })();\r\n"]},"metadata":{},"sourceType":"module"}