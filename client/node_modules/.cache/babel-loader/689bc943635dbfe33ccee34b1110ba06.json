{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Portal } from '../Portal';\nimport { unstable_useModal as useModal } from '../unstable_useModal';\nimport { FocusTrap } from '../FocusTrap';\nimport { getModalUtilityClass } from './modalClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\n};\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\r\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\r\n * *   [Menu](https://mui.com/material-ui/api/menu/)\r\n * *   [Popover](https://mui.com/material-ui/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n *\r\n * Demos:\r\n *\r\n * - [Modal](https://mui.com/base-ui/react-modal/)\r\n *\r\n * API:\r\n *\r\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\r\n */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\n  var _slots$root;\n\n  const {\n    children,\n    closeAfterTransition = false,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    onBackdropClick,\n    open,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const propsWithDefaults = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal(_extends({}, propsWithDefaults, {\n    rootRef: forwardedRef\n  }));\n\n  const ownerState = _extends({}, propsWithDefaults, {\n    exited,\n    hasTransition\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    getSlotProps: getRootProps,\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps(_extends({}, otherHandlers, {\n        onClick: e => {\n          if (onBackdropClick) {\n            onBackdropClick(e);\n          }\n\n          if (otherHandlers != null && otherHandlers.onClick) {\n            otherHandlers.onClick(e);\n          }\n        }\n      }));\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   * @default false\r\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\r\n   * An HTML element or function that returns one.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * The `children` will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden or unmounted.\r\n   * @default false\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Disable the scroll lock behavior.\r\n   * @default false\r\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   * @default false\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   * @default false\r\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * A function called when a transition enters.\r\n   */\n  onTransitionEnter: PropTypes.func,\n\n  /**\r\n   * A function called when a transition has exited.\r\n   */\n  onTransitionExited: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * The props used for each slot inside the Modal.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\r\n   * The components used for each slot inside the Modal.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Modal };","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/Modal/Modal.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","useSlotProps","useClassNamesOverride","unstable_composeClasses","composeClasses","Portal","unstable_useModal","useModal","FocusTrap","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","slots","root","backdrop","Modal","forwardRef","props","forwardedRef","_slots$root","children","closeAfterTransition","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","slotProps","other","propsWithDefaults","getRootProps","getBackdropProps","getTransitionProps","portalRef","isTopModal","hasTransition","rootRef","classes","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","getSlotProps","className","BackdropComponent","backdropProps","otherHandlers","onClick","e","ref","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","bool","oneOfType","func","onClose","onTransitionEnter","onTransitionExited","shape","object"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\r\nimport { useSlotProps } from '../utils';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\r\nimport { Portal } from '../Portal';\r\nimport { unstable_useModal as useModal } from '../unstable_useModal';\r\nimport { FocusTrap } from '../FocusTrap';\r\nimport { getModalUtilityClass } from './modalClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    open,\r\n    exited\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', !open && exited && 'hidden'],\r\n    backdrop: ['backdrop']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getModalUtilityClass));\r\n};\r\n\r\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * *   [Dialog](https://mui.com/material-ui/api/dialog/)\r\n * *   [Drawer](https://mui.com/material-ui/api/drawer/)\r\n * *   [Menu](https://mui.com/material-ui/api/menu/)\r\n * *   [Popover](https://mui.com/material-ui/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/material-ui/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n *\r\n * Demos:\r\n *\r\n * - [Modal](https://mui.com/base-ui/react-modal/)\r\n *\r\n * API:\r\n *\r\n * - [Modal API](https://mui.com/base-ui/react-modal/components-api/#modal)\r\n */\r\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(props, forwardedRef) {\r\n  var _slots$root;\r\n  const {\r\n      children,\r\n      closeAfterTransition = false,\r\n      container,\r\n      disableAutoFocus = false,\r\n      disableEnforceFocus = false,\r\n      disableEscapeKeyDown = false,\r\n      disablePortal = false,\r\n      disableRestoreFocus = false,\r\n      disableScrollLock = false,\r\n      hideBackdrop = false,\r\n      keepMounted = false,\r\n      onBackdropClick,\r\n      open,\r\n      slotProps = {},\r\n      slots = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const propsWithDefaults = _extends({}, props, {\r\n    closeAfterTransition,\r\n    disableAutoFocus,\r\n    disableEnforceFocus,\r\n    disableEscapeKeyDown,\r\n    disablePortal,\r\n    disableRestoreFocus,\r\n    disableScrollLock,\r\n    hideBackdrop,\r\n    keepMounted\r\n  });\r\n  const {\r\n    getRootProps,\r\n    getBackdropProps,\r\n    getTransitionProps,\r\n    portalRef,\r\n    isTopModal,\r\n    exited,\r\n    hasTransition\r\n  } = useModal(_extends({}, propsWithDefaults, {\r\n    rootRef: forwardedRef\r\n  }));\r\n  const ownerState = _extends({}, propsWithDefaults, {\r\n    exited,\r\n    hasTransition\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const childProps = {};\r\n  if (children.props.tabIndex === undefined) {\r\n    childProps.tabIndex = '-1';\r\n  }\r\n\r\n  // It's a Transition like component\r\n  if (hasTransition) {\r\n    const {\r\n      onEnter,\r\n      onExited\r\n    } = getTransitionProps();\r\n    childProps.onEnter = onEnter;\r\n    childProps.onExited = onExited;\r\n  }\r\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'div';\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    getSlotProps: getRootProps,\r\n    className: classes.root,\r\n    ownerState\r\n  });\r\n  const BackdropComponent = slots.backdrop;\r\n  const backdropProps = useSlotProps({\r\n    elementType: BackdropComponent,\r\n    externalSlotProps: slotProps.backdrop,\r\n    getSlotProps: otherHandlers => {\r\n      return getBackdropProps(_extends({}, otherHandlers, {\r\n        onClick: e => {\r\n          if (onBackdropClick) {\r\n            onBackdropClick(e);\r\n          }\r\n          if (otherHandlers != null && otherHandlers.onClick) {\r\n            otherHandlers.onClick(e);\r\n          }\r\n        }\r\n      }));\r\n    },\r\n    className: classes.backdrop,\r\n    ownerState\r\n  });\r\n  if (!keepMounted && !open && (!hasTransition || exited)) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(Portal, {\r\n    ref: portalRef,\r\n    container: container,\r\n    disablePortal: disablePortal,\r\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\r\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\r\n        disableEnforceFocus: disableEnforceFocus,\r\n        disableAutoFocus: disableAutoFocus,\r\n        disableRestoreFocus: disableRestoreFocus,\r\n        isEnabled: isTopModal,\r\n        open: open,\r\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\r\n      })]\r\n    }))\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * A single child content element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   * @default false\r\n   */\r\n  closeAfterTransition: PropTypes.bool,\r\n  /**\r\n   * An HTML element or function that returns one.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\r\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\r\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\r\n  disableAutoFocus: PropTypes.bool,\r\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\r\n  disableEnforceFocus: PropTypes.bool,\r\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n  /**\r\n   * The `children` will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\r\n  disablePortal: PropTypes.bool,\r\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden or unmounted.\r\n   * @default false\r\n   */\r\n  disableRestoreFocus: PropTypes.bool,\r\n  /**\r\n   * Disable the scroll lock behavior.\r\n   * @default false\r\n   */\r\n  disableScrollLock: PropTypes.bool,\r\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   * @default false\r\n   */\r\n  hideBackdrop: PropTypes.bool,\r\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   * @default false\r\n   */\r\n  keepMounted: PropTypes.bool,\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * A function called when a transition enters.\r\n   */\r\n  onTransitionEnter: PropTypes.func,\r\n  /**\r\n   * A function called when a transition has exited.\r\n   */\r\n  onTransitionExited: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n  /**\r\n   * The props used for each slot inside the Modal.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Modal.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    backdrop: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport { Modal };"]},"metadata":{},"sourceType":"module"}