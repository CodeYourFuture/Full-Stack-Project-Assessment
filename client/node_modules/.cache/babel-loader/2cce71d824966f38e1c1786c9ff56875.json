{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\n\nvar flatten = require('array-flatten');\n\nvar Layer = require('./layer');\n\nvar methods = require('methods');\n/**\n * Module variables.\n * @private\n */\n\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n  debug('new %o', path); // route handlers for various http methods\n\n  this.methods = {};\n}\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods); // append automatic head\n\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n/**\n * dispatch req, res into this route\n * @private\n */\n\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    } // signal to exit router\n\n\n    if (err && err === 'router') {\n      return done(err);\n    }\n\n    var layer = stack[idx++];\n\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type;\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function (method) {\n  Route.prototype[method] = function () {\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type;\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path);\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});","map":{"version":3,"sources":["/Users/admin/Desktop/Newsletter-Signup/Full-Stack-Project-Assessment/client/node_modules/express/lib/router/route.js"],"names":["debug","require","flatten","Layer","methods","slice","Array","prototype","toString","Object","module","exports","Route","path","stack","_handles_method","method","_all","name","toLowerCase","Boolean","_options","keys","get","head","push","i","length","toUpperCase","dispatch","req","res","done","idx","route","next","err","layer","handle_error","handle_request","all","handles","call","arguments","handle","type","msg","TypeError","undefined","forEach","Error"],"mappings":"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","sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n"]},"metadata":{},"sourceType":"script"}