{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Video(prop) {\n  const videoId = getVideoIdFromUrl(prop.videoObj.url);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h5 className=\"videoTitle\">{prop.videoObj.title}</h5>\n    //   <iframe\n    //     width=\"100%\"\n    //     height=\"200\"\n    //     src={`https://www.youtube.com/embed/${videoId}`}\n    //     title=\"YouTube video player\"\n    //   ></iframe>\n    //   <p>Res</p>\n    //   <div className=\"btnCounter\">\n    //     <button type=\"button\"> &#128077; </button>\n    //     <p>{prop.videoObj.rating} </p>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#128078;\n    //     </button>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#xF5DE;\n    //     </button>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `https://www.youtube.com/embed/${videoId}`,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        title: \"YouTube video player\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          children: prop.videoObj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \" \\uD83D\\uDC4D \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this), \"//     \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [prop.videoObj.rating, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, this), \"//     \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          children: \"//     \\uD83D\\uDC4E //     \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }, this), \"//     \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          children: \"//     \\uF5DE //     \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            far: true,\n            icon: \"thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this)\n  );\n}\n\n_c = Video;\nexport default Video;\n\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/Video.jsx"],"names":["React","Video","prop","videoId","getVideoIdFromUrl","videoObj","url","title","rating","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,QAAMC,OAAO,GAAGC,iBAAiB,CAACF,IAAI,CAACG,QAAL,CAAcC,GAAf,CAAjC;AACA;AAAA;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMJ;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAQ,QAAA,GAAG,EAAG,iCAAgCH,OAAQ,EAAtD;AAAyD,QAAA,WAAW,EAAC,GAArE;AACA,QAAA,KAAK,EAAC,yEADN;AAEA,QAAA,KAAK,EAAC,sBAFN;AAGC,QAAA,eAAe;AAHhB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,YAAV;AAAA,oBAAwBD,IAAI,CAACG,QAAL,CAAcE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,0BAIS;AAAA,qBAAIL,IAAI,CAACG,QAAL,CAAcG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJT,0BAKS;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALT,0BAQS;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBART,eAWE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,KAAK,EAAC,iBAAlB;AAAA,iCAAoC;AAAO,YAAA,GAAG,MAAV;AAAW,YAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BE;AAqDD;;KAvDQP,K;AAwDT,eAAeA,KAAf;;AACA,SAASG,iBAAT,CAA2BE,GAA3B,EAAgC;AAC9B,QAAMH,OAAO,GAAGG,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,SAAON,OAAP;AACD","sourcesContent":["import React from \"react\";\n\n\nfunction Video(prop) {\n  const videoId = getVideoIdFromUrl(prop.videoObj.url);\n  return (\n    // <div>\n\n    //   <h5 className=\"videoTitle\">{prop.videoObj.title}</h5>\n    //   <iframe\n    //     width=\"100%\"\n    //     height=\"200\"\n    //     src={`https://www.youtube.com/embed/${videoId}`}\n    //     title=\"YouTube video player\"\n    //   ></iframe>\n    //   <p>Res</p>\n    //   <div className=\"btnCounter\">\n\n\n    //     <button type=\"button\"> &#128077; </button>\n    //     <p>{prop.videoObj.rating} </p>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#128078;\n    //     </button>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#xF5DE;\n    //     </button>\n    //   </div>\n    // </div>\n\n\n\n\n\n<div class=\"card\">\n  <iframe src={`https://www.youtube.com/embed/${videoId}`} frameborder=\"0\"\n  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  title=\"YouTube video player\"\n   allowfullscreen></iframe>\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{prop.videoObj.title}</h5>\n    <p class=\"card-text\"></p>\n    <button type=\"button\"> &#128077; </button>\n    //     <p>{prop.videoObj.rating} </p>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#128078;\n    //     </button>\n    //     <button type=\"button\" className=\"btn btn-danger\">\n    //     &#xF5DE;\n    //     </button>\n    <a href=\"#\" class=\"btn btn-primary\">< span far icon=\"thumbs-up\" /></a>\n  </div>\n</div>\n\n\n\n\n  );\n}\nexport default Video;\nfunction getVideoIdFromUrl(url) {\n  const videoId = url.split(\"v=\")[1];\n  return videoId;\n}\n"]},"metadata":{},"sourceType":"module"}