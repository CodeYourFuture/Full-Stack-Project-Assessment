{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dilo\\\\Documents\\\\CYF\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport VideoList from \"./VideoList\";\nimport VideoForm from \"./VideoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://127.0.0.1:5000\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetch(API_BASE_URL).then(response => response.json()).then(data => {\n      // Ensure each video has a rating property\n      const videosWithRating = data.map(video => ({ ...video,\n        rating: video.rating || 0\n      }));\n      setVideos(videosWithRating);\n    }).catch(error => console.error(\"Error fetching videos:\", error));\n  }, []);\n\n  const handleVote = (id, type) => {\n    setVideos(prevVideos => prevVideos.map(video => {\n      if (video.id === id) {\n        return { ...video,\n          rating: type === \"up\" ? video.rating + 1 : video.rating - 1\n        };\n      }\n\n      return video;\n    }));\n  };\n\n  const handleDelete = id => {\n    fetch(`${API_BASE_URL}/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n    }).catch(error => console.error(\"Error deleting video:\", error));\n  };\n\n  const handleAdd = newVideo => {\n    fetch(API_BASE_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVideo)\n    }).then(response => response.json()).then(data => {\n      setVideos(prevVideos => [...prevVideos, { ...newVideo,\n        id: data.id,\n        rating: 0\n      }]);\n    }).catch(error => console.error(\"Error adding video:\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Recommendation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoForm, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos,\n      onVote: handleVote,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dilo/Documents/CYF/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","useEffect","VideoList","VideoForm","API_BASE_URL","App","videos","setVideos","fetch","then","response","json","data","videosWithRating","map","video","rating","catch","error","console","handleVote","id","type","prevVideos","handleDelete","method","filter","handleAdd","newVideo","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoForm from \"./VideoForm\";\r\n\r\nconst API_BASE_URL = \"http://127.0.0.1:5000\";\r\n\r\nconst App = () => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(API_BASE_URL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Ensure each video has a rating property\r\n        const videosWithRating = data.map((video) => ({\r\n          ...video,\r\n          rating: video.rating || 0,\r\n        }));\r\n        setVideos(videosWithRating);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching videos:\", error));\r\n  }, []);\r\n\r\n  const handleVote = (id, type) => {\r\n    setVideos((prevVideos) =>\r\n      prevVideos.map((video) => {\r\n        if (video.id === id) {\r\n          return {\r\n            ...video,\r\n            rating: type === \"up\" ? video.rating + 1 : video.rating - 1,\r\n          };\r\n        }\r\n        return video;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    fetch(`${API_BASE_URL}/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        setVideos((prevVideos) =>\r\n          prevVideos.filter((video) => video.id !== id)\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error deleting video:\", error));\r\n  };\r\n\r\n  const handleAdd = (newVideo) => {\r\n    fetch(API_BASE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newVideo),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setVideos((prevVideos) => [\r\n          ...prevVideos,\r\n          { ...newVideo, id: data.id, rating: 0 },\r\n        ]);\r\n      })\r\n      .catch((error) => console.error(\"Error adding video:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Video Recommendation</h1>\r\n      <VideoForm onAdd={handleAdd} />\r\n      <VideoList videos={videos} onVote={handleVote} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}