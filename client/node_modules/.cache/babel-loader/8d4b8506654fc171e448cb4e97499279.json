{"ast":null,"code":"var _jsxFileName = \"/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      videoUrl: '',\n      videos: [{\n        id: 'video1',\n        url: 'https://www.youtube.com/watch?v=video1',\n        votes: 0\n      }, {\n        id: 'video2',\n        url: 'https://www.youtube.com/watch?v=video2',\n        votes: 0\n      }, {\n        id: 'video3',\n        url: 'https://www.youtube.com/watch?v=video3',\n        votes: 0\n      }]\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        videoUrl: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const videoUrl = this.state.videoUrl;\n      const videoId = extractVideoId(videoUrl); // Create a new video object\n\n      const newVideo = {\n        id: videoId,\n        url: videoUrl,\n        votes: 0\n      }; // Add the new video to the videos array in the state\n\n      this.setState(prevState => ({\n        videos: [...prevState.videos, newVideo]\n      })); // Clear the input field\n\n      this.setState({\n        videoUrl: ''\n      });\n    };\n\n    this.handleVote = (videoId, voteType) => {\n      this.setState(prevState => {\n        const updatedVideos = prevState.videos.map(video => {\n          if (video.id === videoId) {\n            if (voteType === 'up') {\n              video.votes++;\n            } else if (voteType === 'down') {\n              video.votes--;\n            }\n          }\n\n          return video;\n        });\n        return {\n          videos: updatedVideos\n        };\n      });\n    };\n\n    this.handleRemove = videoId => {\n      this.setState(prevState => {\n        const updatedVideos = prevState.videos.filter(video => video.id !== videoId);\n        return {\n          videos: updatedVideos\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      videoUrl,\n      videos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Video Recommendation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter YouTube video URL\",\n            value: videoUrl,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-list\",\n          children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\",\n            children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: \"YouTube Video\",\n              src: `https://www.youtube.com/embed/${video.id}`,\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleVote(video.id, 'up'),\n                children: \"Upvote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"votes\",\n                children: video.votes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleVote(video.id, 'down'),\n                children: \"Downvote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.handleRemove(video.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, video.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Extracts the YouTube video ID from the URL\n// Extracts the YouTube video ID from the URL\n\n\nfunction extractVideoId(url) {\n  const videoIdRegex = /(?:youtube\\.com\\/(?:[^/]+\\/[^/]+\\/|(?:v|e(?:mbed)?)\\/|[^/]+\\?v=)|youtu\\.be\\/)([^\"&?/ ]{11})/;\n  const match = url.match(videoIdRegex);\n  return match ? match[1] : null;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ebrahim/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","Component","App","state","videoUrl","videos","id","url","votes","handleChange","event","setState","target","value","handleSubmit","preventDefault","videoId","extractVideoId","newVideo","prevState","handleVote","voteType","updatedVideos","map","video","handleRemove","filter","render","videoIdRegex","match"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    videoUrl: '',\n    videos: [\n      {\n        id: 'video1',\n        url: 'https://www.youtube.com/watch?v=video1',\n        votes: 0,\n      },\n      {\n        id: 'video2',\n        url: 'https://www.youtube.com/watch?v=video2',\n        votes: 0,\n      },\n      {\n        id: 'video3',\n        url: 'https://www.youtube.com/watch?v=video3',\n        votes: 0,\n      },\n    ],\n  };\n\n  handleChange = (event) => {\n    this.setState({ videoUrl: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const videoUrl = this.state.videoUrl;\n    const videoId = extractVideoId(videoUrl);\n\n    // Create a new video object\n    const newVideo = {\n      id: videoId,\n      url: videoUrl,\n      votes: 0,\n    };\n\n    // Add the new video to the videos array in the state\n    this.setState((prevState) => ({\n      videos: [...prevState.videos, newVideo],\n    }));\n\n    // Clear the input field\n    this.setState({ videoUrl: '' });\n  };\n\n  handleVote = (videoId, voteType) => {\n    this.setState((prevState) => {\n      const updatedVideos = prevState.videos.map((video) => {\n        if (video.id === videoId) {\n          if (voteType === 'up') {\n            video.votes++;\n          } else if (voteType === 'down') {\n            video.votes--;\n          }\n        }\n        return video;\n      });\n      return { videos: updatedVideos };\n    });\n  };\n\n  handleRemove = (videoId) => {\n    this.setState((prevState) => {\n      const updatedVideos = prevState.videos.filter((video) => video.id !== videoId);\n      return { videos: updatedVideos };\n    });\n  };\n\n  render() {\n    const { videoUrl, videos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Video Recommendation</h1>\n        </header>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter YouTube video URL\"\n              value={videoUrl}\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\">Add Video</button>\n          </form>\n          <div className=\"video-list\">\n            {videos.map((video) => (\n              <div className=\"video\" key={video.id}>\n                <iframe\n                  title=\"YouTube Video\"\n                  src={`https://www.youtube.com/embed/${video.id}`}\n                  allowFullScreen\n                ></iframe>\n                <div className=\"video-actions\">\n                  <button onClick={() => this.handleVote(video.id, 'up')}>Upvote</button>\n                  <span className=\"votes\">{video.votes}</span>\n                  <button onClick={() => this.handleVote(video.id, 'down')}>Downvote</button>\n                  <button onClick={() => this.handleRemove(video.id)}>Remove</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Extracts the YouTube video ID from the URL\n// Extracts the YouTube video ID from the URL\nfunction extractVideoId(url) {\n  const videoIdRegex = /(?:youtube\\.com\\/(?:[^/]+\\/[^/]+\\/|(?:v|e(?:mbed)?)\\/|[^/]+\\?v=)|youtu\\.be\\/)([^\"&?/ ]{11})/;\n  const match = url.match(videoIdRegex);\n  return match ? match[1] : null;\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}