{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display in the card header.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The Avatar element to display.\r\n   */\n  avatar: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `title` text, and optional `subheader` text\r\n   * with the Typography component.\r\n   * @default false\r\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\r\n   * The content of the component.\r\n   */\n  subheader: PropTypes.node,\n\n  /**\r\n   * These props will be forwarded to the subheader\r\n   * (as long as disableTypography is not `true`).\r\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\r\n   * The content of the component.\r\n   */\n  title: PropTypes.node,\n\n  /**\r\n   * These props will be forwarded to the title\r\n   * (as long as disableTypography is not `true`).\r\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/material/CardHeader/CardHeader.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","Typography","useThemeProps","styled","cardHeaderClasses","getCardHeaderUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","avatar","action","content","title","subheader","CardHeaderRoot","name","slot","overridesResolver","props","styles","display","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","CardHeader","forwardRef","inProps","ref","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","variant","children","color","as","process","env","NODE_ENV","propTypes","node","object","string","elementType","bool","sx","oneOfType","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\r\nimport Typography from '../Typography';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport styled from '../styles/styled';\r\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    avatar: ['avatar'],\r\n    action: ['action'],\r\n    content: ['content'],\r\n    title: ['title'],\r\n    subheader: ['subheader']\r\n  };\r\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\r\n};\r\nconst CardHeaderRoot = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => _extends({\r\n    [`& .${cardHeaderClasses.title}`]: styles.title,\r\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\r\n  }, styles.root)\r\n})({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: 16\r\n});\r\nconst CardHeaderAvatar = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Avatar',\r\n  overridesResolver: (props, styles) => styles.avatar\r\n})({\r\n  display: 'flex',\r\n  flex: '0 0 auto',\r\n  marginRight: 16\r\n});\r\nconst CardHeaderAction = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Action',\r\n  overridesResolver: (props, styles) => styles.action\r\n})({\r\n  flex: '0 0 auto',\r\n  alignSelf: 'flex-start',\r\n  marginTop: -4,\r\n  marginRight: -8,\r\n  marginBottom: -4\r\n});\r\nconst CardHeaderContent = styled('div', {\r\n  name: 'MuiCardHeader',\r\n  slot: 'Content',\r\n  overridesResolver: (props, styles) => styles.content\r\n})({\r\n  flex: '1 1 auto'\r\n});\r\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiCardHeader'\r\n  });\r\n  const {\r\n      action,\r\n      avatar,\r\n      className,\r\n      component = 'div',\r\n      disableTypography = false,\r\n      subheader: subheaderProp,\r\n      subheaderTypographyProps,\r\n      title: titleProp,\r\n      titleTypographyProps\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const ownerState = _extends({}, props, {\r\n    component,\r\n    disableTypography\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  let title = titleProp;\r\n  if (title != null && title.type !== Typography && !disableTypography) {\r\n    title = /*#__PURE__*/_jsx(Typography, _extends({\r\n      variant: avatar ? 'body2' : 'h5',\r\n      className: classes.title,\r\n      component: \"span\",\r\n      display: \"block\"\r\n    }, titleTypographyProps, {\r\n      children: title\r\n    }));\r\n  }\r\n  let subheader = subheaderProp;\r\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\r\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\r\n      variant: avatar ? 'body2' : 'body1',\r\n      className: classes.subheader,\r\n      color: \"text.secondary\",\r\n      component: \"span\",\r\n      display: \"block\"\r\n    }, subheaderTypographyProps, {\r\n      children: subheader\r\n    }));\r\n  }\r\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    as: component,\r\n    ref: ref,\r\n    ownerState: ownerState\r\n  }, other, {\r\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\r\n      className: classes.avatar,\r\n      ownerState: ownerState,\r\n      children: avatar\r\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\r\n      className: classes.content,\r\n      ownerState: ownerState,\r\n      children: [title, subheader]\r\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\r\n      className: classes.action,\r\n      ownerState: ownerState,\r\n      children: action\r\n    })]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The action to display in the card header.\r\n   */\r\n  action: PropTypes.node,\r\n  /**\r\n   * The Avatar element to display.\r\n   */\r\n  avatar: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `title` text, and optional `subheader` text\r\n   * with the Typography component.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  subheader: PropTypes.node,\r\n  /**\r\n   * These props will be forwarded to the subheader\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  subheaderTypographyProps: PropTypes.object,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  title: PropTypes.node,\r\n  /**\r\n   * These props will be forwarded to the title\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  titleTypographyProps: PropTypes.object\r\n} : void 0;\r\nexport default CardHeader;"]},"metadata":{},"sourceType":"module"}