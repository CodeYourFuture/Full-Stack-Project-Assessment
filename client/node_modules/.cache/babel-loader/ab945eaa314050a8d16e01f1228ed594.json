{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isHostComponent } from './isHostComponent';\n/**\r\n * Type of the ownerState based on the type of an element it applies to.\r\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\r\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\r\n */\n\n/**\r\n * Appends the ownerState object to the props, merging with the existing one if necessary.\r\n *\r\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\r\n * @param otherProps Props of the element.\r\n * @param ownerState\r\n */\n\nexport function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Documents/CYF/Full-Stack-Project-Assessment/client/node_modules/@mui/base/utils/appendOwnerState.js"],"names":["_extends","isHostComponent","appendOwnerState","elementType","otherProps","ownerState","undefined"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,UAAnD,EAA+D;AACpE,MAAIF,WAAW,KAAKG,SAAhB,IAA6BL,eAAe,CAACE,WAAD,CAAhD,EAA+D;AAC7D,WAAOC,UAAP;AACD;;AACD,SAAOJ,QAAQ,CAAC,EAAD,EAAKI,UAAL,EAAiB;AAC9BC,IAAAA,UAAU,EAAEL,QAAQ,CAAC,EAAD,EAAKI,UAAU,CAACC,UAAhB,EAA4BA,UAA5B;AADU,GAAjB,CAAf;AAGD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { isHostComponent } from './isHostComponent';\r\n\r\n/**\r\n * Type of the ownerState based on the type of an element it applies to.\r\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\r\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\r\n */\r\n\r\n/**\r\n * Appends the ownerState object to the props, merging with the existing one if necessary.\r\n *\r\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\r\n * @param otherProps Props of the element.\r\n * @param ownerState\r\n */\r\nexport function appendOwnerState(elementType, otherProps, ownerState) {\r\n  if (elementType === undefined || isHostComponent(elementType)) {\r\n    return otherProps;\r\n  }\r\n  return _extends({}, otherProps, {\r\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}