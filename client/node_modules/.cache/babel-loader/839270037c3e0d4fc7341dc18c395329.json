{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\cuney\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\Full-Stack-Project-Assessment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nmodule.exports = function (Base) {\n  return /*#__PURE__*/function (_Base) {\n    _inherits(_class, _Base);\n    function _class() {\n      _classCallCheck(this, _class);\n      return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n    }\n    _createClass(_class, [{\n      key: \"warn\",\n      value: function warn(code, message) {\n        var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (this.file) {\n          data.file = this.file;\n        }\n        if (this.cwd) {\n          data.cwd = this.cwd;\n        }\n        data.code = message instanceof Error && message.code || code;\n        data.tarCode = code;\n        if (!this.strict && data.recoverable !== false) {\n          if (message instanceof Error) {\n            data = Object.assign(message, data);\n            message = message.message;\n          }\n          this.emit('warn', data.tarCode, message, data);\n        } else if (message instanceof Error) {\n          this.emit('error', Object.assign(message, data));\n        } else {\n          this.emit('error', Object.assign(new Error(\"\".concat(code, \": \").concat(message)), data));\n        }\n      }\n    }]);\n    return _class;\n  }(Base);\n};","map":null,"metadata":{},"sourceType":"script"}