{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nvar AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return _extends(_defineProperty({}, \"& .\".concat(avatarGroupClasses.avatar), styles.avatar), styles.root);\n  }\n})(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {}, _defineProperty(_ref2, \"& .\".concat(avatarClasses.root), {\n    border: \"2px solid \".concat((theme.vars || theme).palette.background.default),\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }), _defineProperty(_ref2, \"display\", 'flex'), _defineProperty(_ref2, \"flexDirection\", 'row-reverse'), _ref2;\n});\nvar AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.avatar;\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    border: \"2px solid \".concat((theme.vars || theme).palette.background.default),\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  };\n});\nvar AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  var childrenProp = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      total = props.total,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var clampedMax = max < 2 ? 2 : max;\n\n  var ownerState = _extends({}, props, {\n    max: max,\n    spacing: spacing,\n    component: component,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  var totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  var maxAvatars = Math.min(children.length, clampedMax - 1);\n  var extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  var marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  var additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft: marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map(function (child, index) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, function (props) {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","unstable_composeClasses","composeClasses","styled","useThemeProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","border","vars","palette","background","default","boxSizing","marginLeft","AvatarGroupAvatar","AvatarGroup","forwardRef","inProps","ref","_slotProps$additional","childrenProp","children","className","component","componentsProps","max","slotProps","spacing","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","undefined","additionalAvatarSlotProps","additionalAvatar","as","style","slice","reverse","map","index","cloneElement","propTypes","node","object","string","elementType","shape","number","Error","oneOfType","oneOf","sx","arrayOf","func","bool"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}