{"ast":null,"code":"import _defineProperty from \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"defaultProps\", \"mixins\", \"overrides\", \"palette\", \"props\", \"styleOverrides\"],\n    _excluded2 = [\"type\", \"mode\"];\nimport { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n\n  var _inputTheme$defaultPr = inputTheme.defaultProps,\n      defaultProps = _inputTheme$defaultPr === void 0 ? {} : _inputTheme$defaultPr,\n      _inputTheme$mixins = inputTheme.mixins,\n      mixins = _inputTheme$mixins === void 0 ? {} : _inputTheme$mixins,\n      _inputTheme$overrides = inputTheme.overrides,\n      overrides = _inputTheme$overrides === void 0 ? {} : _inputTheme$overrides,\n      _inputTheme$palette = inputTheme.palette,\n      palette = _inputTheme$palette === void 0 ? {} : _inputTheme$palette,\n      _inputTheme$props = inputTheme.props,\n      props = _inputTheme$props === void 0 ? {} : _inputTheme$props,\n      _inputTheme$styleOver = inputTheme.styleOverrides,\n      styleOverrides = _inputTheme$styleOver === void 0 ? {} : _inputTheme$styleOver,\n      other = _objectWithoutPropertiesLoose(inputTheme, _excluded);\n\n  var theme = _extends({}, other, {\n    components: {}\n  }); // default props\n\n\n  Object.keys(defaultProps).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  }); // CSS overrides\n\n  Object.keys(styleOverrides).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(function (component) {\n    var componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  }); // theme.spacing\n\n  theme.spacing = createSpacing(inputTheme.spacing); // theme.mixins.gutters\n\n  var breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  var spacing = theme.spacing;\n  theme.mixins = _extends({\n    gutters: function gutters() {\n      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, _defineProperty({}, breakpoints.up('sm'), _extends({\n        paddingLeft: spacing(3),\n        paddingRight: spacing(3)\n      }, styles[breakpoints.up('sm')])));\n    }\n  }, mixins);\n\n  var typeInput = palette.type,\n      modeInput = palette.mode,\n      paletteRest = _objectWithoutPropertiesLoose(palette, _excluded2);\n\n  var finalMode = modeInput || typeInput || 'light';\n  theme.palette = _extends({\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode\n  }, paletteRest);\n  return theme;\n}","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/material/styles/adaptV4Theme.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","createBreakpoints","createSpacing","adaptV4Theme","inputTheme","process","env","NODE_ENV","console","warn","join","defaultProps","mixins","overrides","palette","props","styleOverrides","other","theme","components","Object","keys","forEach","component","componentValue","spacing","breakpoints","gutters","styles","paddingLeft","paddingRight","up","typeInput","type","modeInput","mode","paletteRest","finalMode","text","hint"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultProps\", \"mixins\", \"overrides\", \"palette\", \"props\", \"styleOverrides\"],\n  _excluded2 = [\"type\", \"mode\"];\nimport { createBreakpoints, createSpacing } from '@mui/system';\nexport default function adaptV4Theme(inputTheme) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(['MUI: adaptV4Theme() is deprecated.', 'Follow the upgrade guide on https://mui.com/r/migration-v4#theme.'].join('\\n'));\n  }\n  const {\n      defaultProps = {},\n      mixins = {},\n      overrides = {},\n      palette = {},\n      props = {},\n      styleOverrides = {}\n    } = inputTheme,\n    other = _objectWithoutPropertiesLoose(inputTheme, _excluded);\n  const theme = _extends({}, other, {\n    components: {}\n  });\n\n  // default props\n  Object.keys(defaultProps).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = defaultProps[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(props).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.defaultProps = props[component];\n    theme.components[component] = componentValue;\n  });\n\n  // CSS overrides\n  Object.keys(styleOverrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = styleOverrides[component];\n    theme.components[component] = componentValue;\n  });\n  Object.keys(overrides).forEach(component => {\n    const componentValue = theme.components[component] || {};\n    componentValue.styleOverrides = overrides[component];\n    theme.components[component] = componentValue;\n  });\n\n  // theme.spacing\n  theme.spacing = createSpacing(inputTheme.spacing);\n\n  // theme.mixins.gutters\n  const breakpoints = createBreakpoints(inputTheme.breakpoints || {});\n  const spacing = theme.spacing;\n  theme.mixins = _extends({\n    gutters: (styles = {}) => {\n      return _extends({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, {\n        [breakpoints.up('sm')]: _extends({\n          paddingLeft: spacing(3),\n          paddingRight: spacing(3)\n        }, styles[breakpoints.up('sm')])\n      });\n    }\n  }, mixins);\n  const {\n      type: typeInput,\n      mode: modeInput\n    } = palette,\n    paletteRest = _objectWithoutPropertiesLoose(palette, _excluded2);\n  const finalMode = modeInput || typeInput || 'light';\n  theme.palette = _extends({\n    // theme.palette.text.hint\n    text: {\n      hint: finalMode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.38)'\n    },\n    mode: finalMode,\n    type: finalMode\n  }, paletteRest);\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}