{"ast":null,"code":"var _jsxFileName = \"/Users/jansofta/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// update10\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport VideoComponent from \"./VideoComponent\";\nimport AddYoutubeVideo from \"./AddYoutubeVideo\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  console.log(videos);\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const fetchVideos = async () => {\n    try {\n      // const response = await axios.get(\"http://localhost:5000/videos\");\n      const response = await axios.get(\"https://back-end-full-stack-project-assessment.onrender.com/videos\");\n      console.log(\"Response from backend:\", response.data);\n      const sortedVideos = response.data.sort((a, b) => b.rating - a.rating);\n      setVideos(sortedVideos);\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n\n  const handleAddVideo = async newVideo => {\n    try {\n      if (!newVideo.title || !isYouTubeUrlValid(newVideo.url)) {\n        alert(\"Please enter a valid title and YouTube URL.\");\n        return;\n      } // const response = await axios.post(\"http://localhost:5000/videos\", {\n\n\n      const response = await axios.post(\"https://back-end-full-stack-project-assessment.onrender.com/videos\", { ...newVideo,\n        timestamp: new Date().toISOString()\n      });\n      newVideo.id = response.data.id;\n      setVideos([...videos, newVideo]);\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n    }\n  };\n\n  const handleUpVote = async id => {\n    try {\n      // await axios.post(`http://localhost:5000/videos/${id}/upvote`);\n      await axios.post(`https://back-end-full-stack-project-assessment.onrender.com/videos/${id}/upvote`);\n      const updatedVideos = videos.map(video => video.id === id ? { ...video,\n        rating: video.rating + 1\n      } : video);\n      setVideos(updatedVideos.sort((a, b) => b.rating - a.rating));\n    } catch (error) {\n      console.error(\"Error upvoting video:\", error);\n    }\n  };\n\n  const handleDownVote = async id => {\n    try {\n      // await axios.post(`http://localhost:5000/videos/${id}/downvote`);\n      await axios.post(`https://back-end-full-stack-project-assessment.onrender.com/videos/${id}/downvote`);\n      const updatedVideos = videos.map(video => video.id === id ? { ...video,\n        rating: Math.max(video.rating - 1, 0)\n      } : video);\n      setVideos(updatedVideos.sort((a, b) => b.rating - a.rating));\n    } catch (error) {\n      console.error(\"Error downvoting video:\", error);\n    }\n  };\n\n  const handleRemove = async id => {\n    try {\n      // await axios.delete(`http://localhost:5000/videos/${id}`);\n      await axios.delete(`https://back-end-full-stack-project-assessment.onrender.com/videos/${id}`);\n      const updatedVideos = videos.filter(video => video.id !== id);\n      setVideos(updatedVideos);\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  };\n\n  const isYouTubeUrlValid = url => {\n    const youtubeUrlPattern = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+/;\n    return youtubeUrlPattern.test(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-list\",\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(VideoComponent, {\n          video: video,\n          onUpVote: handleUpVote,\n          onDownVote: handleDownVote,\n          onRemove: handleRemove\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddYoutubeVideo, {\n        onAddVideo: handleAddVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App; // update9 this code works when i had not started do any html and css updates\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// import axios from \"axios\";\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n//   const fetchVideos = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/videos\");\n//       const sortedVideos = response.data.sort((a, b) => b.rating - a.rating); // Order videos by most upvotes\n//       setVideos(sortedVideos);\n//     } catch (error) {\n//       console.error(\"Error fetching videos:\", error);\n//     }\n//   };\n//   const handleAddVideo = async (newVideo) => {\n//     try {\n//       if (!newVideo.title || !isYouTubeUrlValid(newVideo.url)) {\n//         alert(\"Please enter a valid title and YouTube URL.\");\n//         return;\n//       }\n//       const response = await axios.post(\"http://localhost:5000/videos\", {\n//         ...newVideo,\n//         timestamp: new Date().toISOString(), // Store the current timestamp\n//       });\n//       newVideo.id = response.data.id;\n//       setVideos([...videos, newVideo]);\n//     } catch (error) {\n//       console.error(\"Error adding video:\", error);\n//     }\n//   };\n//   const handleUpVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/upvote`);\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       );\n//       setVideos(updatedVideos.sort((a, b) => b.rating - a.rating)); // Reorder after upvote\n//     } catch (error) {\n//       console.error(\"Error upvoting video:\", error);\n//     }\n//   };\n//   const handleDownVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/downvote`);\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       );\n//       setVideos(updatedVideos.sort((a, b) => b.rating - a.rating)); // Reorder after downvote\n//     } catch (error) {\n//       console.error(\"Error downvoting video:\", error);\n//     }\n//   };\n//   const handleRemove = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/videos/${id}`);\n//       const updatedVideos = videos.filter((video) => video.id !== id);\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n//   const isYouTubeUrlValid = (url) => {\n//     const youtubeUrlPattern =\n//       /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+/;\n//     return youtubeUrlPattern.test(url);\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// };\n// export default App;\n// update8\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// import axios from \"axios\";\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n//   const fetchVideos = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/videos\"); // Updated the URL\n//       setVideos(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching videos:\", error);\n//     }\n//   };\n//   const handleAddVideo = async (newVideo) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:5000/videos\",\n//         newVideo\n//       ); // Updated the URL\n//       newVideo.id = response.data.id;\n//       setVideos([...videos, newVideo]);\n//     } catch (error) {\n//       console.error(\"Error adding video:\", error);\n//     }\n//   };\n//   const handleUpVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/upvote`); // Updated the URL\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error upvoting video:\", error);\n//     }\n//   };\n//   const handleDownVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/downvote`); // Updated the URL\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error downvoting video:\", error);\n//     }\n//   };\n//   const handleRemove = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/videos/${id}`); // Updated the URL\n//       const updatedVideos = videos.filter((video) => video.id !== id);\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// };\n// export default App;\n// update7\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// import axios from \"axios\";\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n//   const fetchVideos = async () => {\n//     try {\n//       const response = await axios.get(\"/localhost:5000/videos\"); // Make a GET request to fetch videos\n//       setVideos(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching videos:\", error);\n//     }\n//   };\n//   const handleAddVideo = async (newVideo) => {\n//     try {\n//       const response = await axios.post(\"/videos\", newVideo); // Make a POST request to add a video\n//       newVideo.id = response.data.id;\n//       setVideos([...videos, newVideo]);\n//     } catch (error) {\n//       console.error(\"Error adding video:\", error);\n//     }\n//   };\n//   const handleUpVote = async (id) => {\n//     try {\n//       await axios.post(`/videos/${id}/upvote`); // Make a POST request to upvote a video\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error upvoting video:\", error);\n//     }\n//   };\n//   const handleDownVote = async (id) => {\n//     try {\n//       await axios.post(`/videos/${id}/downvote`); // Make a POST request to downvote a video\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error downvoting video:\", error);\n//     }\n//   };\n//   const handleRemove = async (id) => {\n//     try {\n//       await axios.delete(`/videos/${id}`); // Make a DELETE request to remove a video\n//       const updatedVideos = videos.filter((video) => video.id !== id);\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />{\" \"}\n//         {/* Use the updated component */}\n//       </header>\n//     </div>\n//   );\n// };\n// export default App;\n// update6 - this version work with no axios\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n//   const handleAddVideo = (newVideo) => {\n//     setVideos((prevVideos) => [...prevVideos, newVideo]);\n//   };\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {sortedVideos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// update5\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n//   const handleAddVideo = (newVideo) => {\n//     setVideos((prevVideos) => [...prevVideos, newVideo]);\n//   };\n//   // Sort the videos based on the rating (number of upvotes) in descending order\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {sortedVideos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// update4\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n//   const handleAddVideo = (newVideo) => {\n//     setVideos((prevVideos) => [...prevVideos, newVideo]);\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// update3\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\"; // Import the VideoComponent component\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// Update2\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// const videoData = [\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n// function VideoComponent({ video, onVote, onRemove }) {\n//   return (\n//     <div className=\"video-component\">\n//       <h2>{video.title}</h2>\n//       <iframe\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         src={`https://www.youtube.com/embed/${video.url.split(\"v=\")[1]}`}\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.rating}</p>\n//       <button onClick={() => onVote(video.id)}>Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n//   const handleVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onVote={handleVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// Update 1\n// import React from \"react\";\n// import \"./App.css\";\n// const videoData = [\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <ul>\n//           {videoData.map((video) => (\n//             <li key={video.id}>\n//               <a href={video.url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 {video.title}\n//               </a>\n//             </li>\n//           ))}\n//         </ul>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// original\n// import \"./App.css\";\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jansofta/Documents/GitHub/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","useEffect","VideoComponent","AddYoutubeVideo","axios","App","videos","setVideos","console","log","fetchVideos","response","get","data","sortedVideos","sort","a","b","rating","error","handleAddVideo","newVideo","title","isYouTubeUrlValid","url","alert","post","timestamp","Date","toISOString","id","handleUpVote","updatedVideos","map","video","handleDownVote","Math","max","handleRemove","delete","filter","youtubeUrlPattern","test"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CACrB,oEADqB,CAAvB;AAGAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,QAAQ,CAACE,IAA/C;AACA,YAAMC,YAAY,GAAGH,QAAQ,CAACE,IAAT,CAAcE,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAA1C,CAArB;AACAX,MAAAA,SAAS,CAACO,YAAD,CAAT;AACD,KARD,CAQE,OAAOK,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACW,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD;AACF,GAZD;;AAcA,QAAMC,cAAc,GAAG,MAAOC,QAAP,IAAoB;AACzC,QAAI;AACF,UAAI,CAACA,QAAQ,CAACC,KAAV,IAAmB,CAACC,iBAAiB,CAACF,QAAQ,CAACG,GAAV,CAAzC,EAAyD;AACvDC,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACA;AACD,OAJC,CAMF;;;AACA,YAAMd,QAAQ,GAAG,MAAMP,KAAK,CAACsB,IAAN,CACrB,oEADqB,EAErB,EACE,GAAGL,QADL;AAEEM,QAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAFb,OAFqB,CAAvB;AAOAR,MAAAA,QAAQ,CAACS,EAAT,GAAcnB,QAAQ,CAACE,IAAT,CAAciB,EAA5B;AACAvB,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYe,QAAZ,CAAD,CAAT;AACD,KAhBD,CAgBE,OAAOF,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACW,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,GApBD;;AAsBA,QAAMY,YAAY,GAAG,MAAOD,EAAP,IAAc;AACjC,QAAI;AACF;AACA,YAAM1B,KAAK,CAACsB,IAAN,CACH,sEAAqEI,EAAG,SADrE,CAAN;AAGA,YAAME,aAAa,GAAG1B,MAAM,CAAC2B,GAAP,CAAYC,KAAD,IAC/BA,KAAK,CAACJ,EAAN,KAAaA,EAAb,GAAkB,EAAE,GAAGI,KAAL;AAAYhB,QAAAA,MAAM,EAAEgB,KAAK,CAAChB,MAAN,GAAe;AAAnC,OAAlB,GAA2DgB,KADvC,CAAtB;AAGA3B,MAAAA,SAAS,CAACyB,aAAa,CAACjB,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAA1C,CAAD,CAAT;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,GAbD;;AAeA,QAAMgB,cAAc,GAAG,MAAOL,EAAP,IAAc;AACnC,QAAI;AACF;AACA,YAAM1B,KAAK,CAACsB,IAAN,CACH,sEAAqEI,EAAG,WADrE,CAAN;AAGA,YAAME,aAAa,GAAG1B,MAAM,CAAC2B,GAAP,CAAYC,KAAD,IAC/BA,KAAK,CAACJ,EAAN,KAAaA,EAAb,GACI,EAAE,GAAGI,KAAL;AAAYhB,QAAAA,MAAM,EAAEkB,IAAI,CAACC,GAAL,CAASH,KAAK,CAAChB,MAAN,GAAe,CAAxB,EAA2B,CAA3B;AAApB,OADJ,GAEIgB,KAHgB,CAAtB;AAKA3B,MAAAA,SAAS,CAACyB,aAAa,CAACjB,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAA1C,CAAD,CAAT;AACD,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACW,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD;AACF,GAfD;;AAiBA,QAAMmB,YAAY,GAAG,MAAOR,EAAP,IAAc;AACjC,QAAI;AACF;AACA,YAAM1B,KAAK,CAACmC,MAAN,CACH,sEAAqET,EAAG,EADrE,CAAN;AAGA,YAAME,aAAa,GAAG1B,MAAM,CAACkC,MAAP,CAAeN,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaA,EAAtC,CAAtB;AACAvB,MAAAA,SAAS,CAACyB,aAAD,CAAT;AACD,KAPD,CAOE,OAAOb,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,GAXD;;AAaA,QAAMI,iBAAiB,GAAIC,GAAD,IAAS;AACjC,UAAMiB,iBAAiB,GACrB,sDADF;AAEA,WAAOA,iBAAiB,CAACC,IAAlB,CAAuBlB,GAAvB,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGlB,MAAM,CAAC2B,GAAP,CAAYC,KAAD,iBACV,QAAC,cAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,QAAQ,EAAEH,YAHZ;AAIE,UAAA,UAAU,EAAEI,cAJd;AAKE,UAAA,QAAQ,EAAEG;AALZ,WACOJ,KAAK,CAACJ,EADb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE,QAAC,eAAD;AAAiB,QAAA,UAAU,EAAEV;AAA7B;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjHD;;GAAMf,G;;KAAAA,G;AAmHN,eAAeA,GAAfsourcesContent":["// update10\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport VideoComponent from \"./VideoComponent\";\nimport AddYoutubeVideo from \"./AddYoutubeVideo\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  console.log(videos);\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const fetchVideos = async () => {\n    try {\n      // const response = await axios.get(\"http://localhost:5000/videos\");\n      const response = await axios.get(\n        \"https://back-end-full-stack-project-assessment.onrender.com/videos\"\n      );\n      console.log(\"Response from backend:\", response.data);\n      const sortedVideos = response.data.sort((a, b) => b.rating - a.rating);\n      setVideos(sortedVideos);\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n    }\n  };\n\n  const handleAddVideo = async (newVideo) => {\n    try {\n      if (!newVideo.title || !isYouTubeUrlValid(newVideo.url)) {\n        alert(\"Please enter a valid title and YouTube URL.\");\n        return;\n      }\n\n      // const response = await axios.post(\"http://localhost:5000/videos\", {\n      const response = await axios.post(\n        \"https://back-end-full-stack-project-assessment.onrender.com/videos\",\n        {\n          ...newVideo,\n          timestamp: new Date().toISOString(),\n        }\n      );\n      newVideo.id = response.data.id;\n      setVideos([...videos, newVideo]);\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n    }\n  };\n\n  const handleUpVote = async (id) => {\n    try {\n      // await axios.post(`http://localhost:5000/videos/${id}/upvote`);\n      await axios.post(\n        `https://back-end-full-stack-project-assessment.onrender.com/videos/${id}/upvote`\n      );\n      const updatedVideos = videos.map((video) =>\n        video.id === id ? { ...video, rating: video.rating + 1 } : video\n      );\n      setVideos(updatedVideos.sort((a, b) => b.rating - a.rating));\n    } catch (error) {\n      console.error(\"Error upvoting video:\", error);\n    }\n  };\n\n  const handleDownVote = async (id) => {\n    try {\n      // await axios.post(`http://localhost:5000/videos/${id}/downvote`);\n      await axios.post(\n        `https://back-end-full-stack-project-assessment.onrender.com/videos/${id}/downvote`\n      );\n      const updatedVideos = videos.map((video) =>\n        video.id === id\n          ? { ...video, rating: Math.max(video.rating - 1, 0) }\n          : video\n      );\n      setVideos(updatedVideos.sort((a, b) => b.rating - a.rating));\n    } catch (error) {\n      console.error(\"Error downvoting video:\", error);\n    }\n  };\n\n  const handleRemove = async (id) => {\n    try {\n      // await axios.delete(`http://localhost:5000/videos/${id}`);\n      await axios.delete(\n        `https://back-end-full-stack-project-assessment.onrender.com/videos/${id}`\n      );\n      const updatedVideos = videos.filter((video) => video.id !== id);\n      setVideos(updatedVideos);\n    } catch (error) {\n      console.error(\"Error deleting video:\", error);\n    }\n  };\n\n  const isYouTubeUrlValid = (url) => {\n    const youtubeUrlPattern =\n      /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+/;\n    return youtubeUrlPattern.test(url);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Video Recommendation</h1>\n        <div className=\"video-list\">\n          {videos.map((video) => (\n            <VideoComponent\n              key={video.id}\n              video={video}\n              onUpVote={handleUpVote}\n              onDownVote={handleDownVote}\n              onRemove={handleRemove}\n            />\n          ))}\n        </div>\n        <AddYoutubeVideo onAddVideo={handleAddVideo} />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n\n// update9 this code works when i had not started do any html and css updates\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// import axios from \"axios\";\n\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n\n//   const fetchVideos = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/videos\");\n//       const sortedVideos = response.data.sort((a, b) => b.rating - a.rating); // Order videos by most upvotes\n//       setVideos(sortedVideos);\n//     } catch (error) {\n//       console.error(\"Error fetching videos:\", error);\n//     }\n//   };\n\n//   const handleAddVideo = async (newVideo) => {\n//     try {\n//       if (!newVideo.title || !isYouTubeUrlValid(newVideo.url)) {\n//         alert(\"Please enter a valid title and YouTube URL.\");\n//         return;\n//       }\n\n//       const response = await axios.post(\"http://localhost:5000/videos\", {\n//         ...newVideo,\n//         timestamp: new Date().toISOString(), // Store the current timestamp\n//       });\n//       newVideo.id = response.data.id;\n//       setVideos([...videos, newVideo]);\n//     } catch (error) {\n//       console.error(\"Error adding video:\", error);\n//     }\n//   };\n\n//   const handleUpVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/upvote`);\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       );\n//       setVideos(updatedVideos.sort((a, b) => b.rating - a.rating)); // Reorder after upvote\n//     } catch (error) {\n//       console.error(\"Error upvoting video:\", error);\n//     }\n//   };\n\n//   const handleDownVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/downvote`);\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       );\n//       setVideos(updatedVideos.sort((a, b) => b.rating - a.rating)); // Reorder after downvote\n//     } catch (error) {\n//       console.error(\"Error downvoting video:\", error);\n//     }\n//   };\n\n//   const handleRemove = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/videos/${id}`);\n//       const updatedVideos = videos.filter((video) => video.id !== id);\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n\n//   const isYouTubeUrlValid = (url) => {\n//     const youtubeUrlPattern =\n//       /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+/;\n//     return youtubeUrlPattern.test(url);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// update8\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// import axios from \"axios\";\n\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n\n//   const fetchVideos = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/videos\"); // Updated the URL\n//       setVideos(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching videos:\", error);\n//     }\n//   };\n\n//   const handleAddVideo = async (newVideo) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:5000/videos\",\n//         newVideo\n//       ); // Updated the URL\n//       newVideo.id = response.data.id;\n//       setVideos([...videos, newVideo]);\n//     } catch (error) {\n//       console.error(\"Error adding video:\", error);\n//     }\n//   };\n\n//   const handleUpVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/upvote`); // Updated the URL\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error upvoting video:\", error);\n//     }\n//   };\n\n//   const handleDownVote = async (id) => {\n//     try {\n//       await axios.post(`http://localhost:5000/videos/${id}/downvote`); // Updated the URL\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error downvoting video:\", error);\n//     }\n//   };\n\n//   const handleRemove = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/videos/${id}`); // Updated the URL\n//       const updatedVideos = videos.filter((video) => video.id !== id);\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// update7\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n// import axios from \"axios\";\n\n// const App = () => {\n//   const [videos, setVideos] = useState([]);\n\n//   useEffect(() => {\n//     fetchVideos();\n//   }, []);\n\n//   const fetchVideos = async () => {\n//     try {\n//       const response = await axios.get(\"/localhost:5000/videos\"); // Make a GET request to fetch videos\n//       setVideos(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching videos:\", error);\n//     }\n//   };\n\n//   const handleAddVideo = async (newVideo) => {\n//     try {\n//       const response = await axios.post(\"/videos\", newVideo); // Make a POST request to add a video\n//       newVideo.id = response.data.id;\n//       setVideos([...videos, newVideo]);\n//     } catch (error) {\n//       console.error(\"Error adding video:\", error);\n//     }\n//   };\n\n//   const handleUpVote = async (id) => {\n//     try {\n//       await axios.post(`/videos/${id}/upvote`); // Make a POST request to upvote a video\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error upvoting video:\", error);\n//     }\n//   };\n\n//   const handleDownVote = async (id) => {\n//     try {\n//       await axios.post(`/videos/${id}/downvote`); // Make a POST request to downvote a video\n//       const updatedVideos = videos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       );\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error downvoting video:\", error);\n//     }\n//   };\n\n//   const handleRemove = async (id) => {\n//     try {\n//       await axios.delete(`/videos/${id}`); // Make a DELETE request to remove a video\n//       const updatedVideos = videos.filter((video) => video.id !== id);\n//       setVideos(updatedVideos);\n//     } catch (error) {\n//       console.error(\"Error deleting video:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />{\" \"}\n//         {/* Use the updated component */}\n//       </header>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// update6 - this version work with no axios\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n\n//   const handleAddVideo = (newVideo) => {\n//     setVideos((prevVideos) => [...prevVideos, newVideo]);\n//   };\n\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {sortedVideos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// update5\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n\n//   const handleAddVideo = (newVideo) => {\n//     setVideos((prevVideos) => [...prevVideos, newVideo]);\n//   };\n\n//   // Sort the videos based on the rating (number of upvotes) in descending order\n//   const sortedVideos = [...videos].sort((a, b) => b.rating - a.rating);\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {sortedVideos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// update4\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\";\n// import AddYoutubeVideo from \"./AddYoutubeVideo\";\n\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n\n//   const handleAddVideo = (newVideo) => {\n//     setVideos((prevVideos) => [...prevVideos, newVideo]);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//         <AddYoutubeVideo onAddVideo={handleAddVideo} />\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// update3\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import VideoComponent from \"./VideoComponent\"; // Import the VideoComponent component\n\n// const videoData = [\n//   // Copy and paste the data from exampleresponse.json here\n//   // Make sure to preserve the structure of each video object\n\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n\n//   const handleUpVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n\n//   const handleDownVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id\n//           ? { ...video, rating: Math.max(video.rating - 1, 0) }\n//           : video\n//       )\n//     );\n//   };\n\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onUpVote={handleUpVote}\n//               onDownVote={handleDownVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// Update2\n\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n\n// const videoData = [\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n\n// function VideoComponent({ video, onVote, onRemove }) {\n//   return (\n//     <div className=\"video-component\">\n//       <h2>{video.title}</h2>\n//       <iframe\n//         title={video.title}\n//         width=\"560\"\n//         height=\"315\"\n//         src={`https://www.youtube.com/embed/${video.url.split(\"v=\")[1]}`}\n//         frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//         allowFullScreen\n//       ></iframe>\n//       <p>Votes: {video.rating}</p>\n//       <button onClick={() => onVote(video.id)}>Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n\n// function App() {\n//   const [videos, setVideos] = useState(videoData);\n\n//   const handleVote = (id) => {\n//     setVideos((prevVideos) =>\n//       prevVideos.map((video) =>\n//         video.id === id ? { ...video, rating: video.rating + 1 } : video\n//       )\n//     );\n//   };\n\n//   const handleRemove = (id) => {\n//     setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <div className=\"video-list\">\n//           {videos.map((video) => (\n//             <VideoComponent\n//               key={video.id}\n//               video={video}\n//               onVote={handleVote}\n//               onRemove={handleRemove}\n//             />\n//           ))}\n//         </div>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// Update 1\n// import React from \"react\";\n// import \"./App.css\";\n\n// const videoData = [\n//   {\n//     id: 523523,\n//     title: \"Never Gonna Give You Up\",\n//     url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n//     rating: 23,\n//   },\n//   {\n//     id: 523427,\n//     title: \"The Coding Train\",\n//     url: \"https://www.youtube.com/watch?v=HerCR8bw_GE\",\n//     rating: 230,\n//   },\n//   {\n//     id: 82653,\n//     title: \"Mac & Cheese | Basics with Babish\",\n//     url: \"https://www.youtube.com/watch?v=FUeyrEN14Rk\",\n//     rating: 2111,\n//   },\n//   {\n//     id: 858566,\n//     title: \"Videos for Cats to Watch - 8 Hour Bird Bonanza\",\n//     url: \"https://www.youtube.com/watch?v=xbs7FT7dXYc\",\n//     rating: 11,\n//   },\n//   {\n//     id: 453538,\n//     title:\n//       \"The Complete London 2012 Opening Ceremony | London 2012 Olympic Games\",\n//     url: \"https://www.youtube.com/watch?v=4As0e4de-rI\",\n//     rating: 3211,\n//   },\n//   {\n//     id: 283634,\n//     title: \"Learn Unity - Beginner's Game Development Course\",\n//     url: \"https://www.youtube.com/watch?v=gB1F9G0JXOo\",\n//     rating: 211,\n//   },\n//   {\n//     id: 562824,\n//     title: \"Cracking Enigma in 2021 - Computerphile\",\n//     url: \"https://www.youtube.com/watch?v=RzWB5jL5RX0\",\n//     rating: 111,\n//   },\n//   {\n//     id: 442452,\n//     title: \"Coding Adventure: Chess AI\",\n//     url: \"https://www.youtube.com/watch?v=U4ogK0MIzqk\",\n//     rating: 671,\n//   },\n//   {\n//     id: 536363,\n//     title: \"Coding Adventure: Ant and Slime Simulations\",\n//     url: \"https://www.youtube.com/watch?v=X-iSQQgOd1A\",\n//     rating: 76,\n//   },\n//   {\n//     id: 323445,\n//     title: \"Why the Tour de France is so brutal\",\n//     url: \"https://www.youtube.com/watch?v=ZacOS8NBK6U\",\n//     rating: 73,\n//   },\n// ];\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//         <ul>\n//           {videoData.map((video) => (\n//             <li key={video.id}>\n//               <a href={video.url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 {video.title}\n//               </a>\n//             </li>\n//           ))}\n//         </ul>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// original\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>Video Recommendation</h1>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}