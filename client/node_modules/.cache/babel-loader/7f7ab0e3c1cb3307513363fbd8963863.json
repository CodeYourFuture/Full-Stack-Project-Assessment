{"ast":null,"code":"var _jsxFileName = \"/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport Rating from \"./Rating\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoComponent = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [filteredVideos, setFilteredVideos] = useState([]);\n  const [videoList, setVideoList] = useState([]);\n  const [sortedVideoList, setSortedVideoList] = useState([]); // const [ascending, setAscending] =useState(false)\n  //  const searchVideos = (searchTerm) => {\n  //    const filtered = videos.filter((video) =>\n  //      video.title.toLowerCase().includes(searchTerm.toLowerCase())\n  //    );\n  //    setFilteredVideos(filtered);\n  //  };\n  // const removeVideo = (videoId) => {\n  //   const updatedVideoList = videoList.filter(\n  //     (video) => video.id !== videoId\n  //   );\n  //   setVideos(updatedVideoList);\n  //   setSortedVideoList(\n  //     [...updatedVideoList].sort((a, b) => b.rating - a.rating)\n  //   );\n  // };\n\n  async function fetchData() {\n    try {\n      const url = \"http://localhost:5000/videos\";\n      const fetchURL = `${url}`; // `http://localhost:5000/videos`;\n\n      const response = await fetch(fetchURL);\n\n      if (response.ok) {\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setVideos(data.videos);\n        const sortedList = [...data.videos].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"useEffect\");\n  }, []);\n\n  const addVideo = newVideo => {\n    const time = moment().format(\"YYYY-MM-DD HH:mm\");\n    const addnewVideo = [...videos, { ...newVideo,\n      rating: 0,\n      time\n    }];\n    console.log(addnewVideo);\n    setVideos(addnewVideo);\n    setSortedVideoList([...addnewVideo].sort((a, b) => b.rating - a.rating));\n  };\n\n  const displayedVideos = filteredVideos.length > 0 ? filteredVideos : videos; // function handleDeleteVideo(videoID) {\n  //   fetch(`http://localhost:5000/video/${videoID}`, {\n  //     method: \"DELETE\",\n  //     headers: {\n  //       Content_Type: \"application/json\",\n  //     },\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) {\n  //         throw new Error(`${videoID} could not be found`);\n  //       }\n  //       console.log(response);\n  //       getAllVideos();\n  //     })\n  //     .catch((error) => console.log(error));\n  // }\n\n  const handleDelete = id => {\n    setVideos(videos.filter(video => video.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sortedVideoList.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: videos.Url,\n        title: videos.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        rating: videos.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddVideoForm, {\n        addVideo: addVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(video.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoComponent, \"Wy8E/NC4DGsueIZxwLJoUwCwsqU=\");\n\n_c = VideoComponent;\nexport default VideoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoComponent\");","map":{"version":3,"sources":["/Users/mickeyhaile/Documents/GitHub/Full-Stack-Project-Assessment/client/src/VideoComponent.jsx"],"names":["Rating","React","useState","useEffect","VideoComponent","videos","setVideos","filteredVideos","setFilteredVideos","videoList","setVideoList","sortedVideoList","setSortedVideoList","fetchData","url","fetchURL","response","fetch","ok","console","log","data","json","sortedList","sort","a","b","rating","error","addVideo","newVideo","time","moment","format","addnewVideo","displayedVideos","length","handleDelete","id","filter","video","map","index","title","Url"],"mappings":"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","sourcesContent":["\nimport Rating from \"./Rating\";\nimport React, { useState, useEffect } from \"react\";\n\nconst VideoComponent = () => {\nconst [videos, setVideos] = useState([]);\n   const [filteredVideos, setFilteredVideos] = useState([]);\n   const [videoList, setVideoList] = useState([]);\n   const [sortedVideoList, setSortedVideoList] = useState([]);\n  // const [ascending, setAscending] =useState(false)\n  \n\n   \n  //  const searchVideos = (searchTerm) => {\n  //    const filtered = videos.filter((video) =>\n  //      video.title.toLowerCase().includes(searchTerm.toLowerCase())\n  //    );\n  //    setFilteredVideos(filtered);\n  //  };\n    // const removeVideo = (videoId) => {\n    //   const updatedVideoList = videoList.filter(\n    //     (video) => video.id !== videoId\n    //   );\n    //   setVideos(updatedVideoList);\n    //   setSortedVideoList(\n    //     [...updatedVideoList].sort((a, b) => b.rating - a.rating)\n    //   );\n    // };\n  \n   \n  async function fetchData() {\n    try {\n      const url = \"http://localhost:5000/videos\";\n      const fetchURL = `${url}`;\n      // `http://localhost:5000/videos`;\n      const response = await fetch(fetchURL );\n      if(response.ok){\n        console.log(response);\n        const data = await response.json();\n        console.log(data);\n        setVideos(data.videos);\n        const sortedList = [...(data.videos)].sort((a, b) => b.rating - a.rating);\n        setSortedVideoList(sortedList);\n      }\n    } catch (error) {\n      \n      console.log(error);\n    }\n  }\n   \n\n  useEffect(() => {\n    fetchData();\n    console.log(\"useEffect\");\n  }, []);\n\n  const addVideo = (newVideo) => {\n    const time = moment().format(\"YYYY-MM-DD HH:mm\");\n    const addnewVideo = [...videos, { ...newVideo, rating: 0, time }];\n    console.log(addnewVideo);\n    setVideos(addnewVideo);\n    setSortedVideoList([...addnewVideo].sort((a, b) => b.rating - a.rating));\n  };\n     const displayedVideos =\n       filteredVideos.length > 0 ? filteredVideos : videos;\n  \n  // function handleDeleteVideo(videoID) {\n    \n  //   fetch(`http://localhost:5000/video/${videoID}`, {\n  //     method: \"DELETE\",\n  //     headers: {\n  //       Content_Type: \"application/json\",\n  //     },\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) {\n  //         throw new Error(`${videoID} could not be found`);\n  //       }\n  //       console.log(response);\n  //       getAllVideos();\n  //     })\n  //     .catch((error) => console.log(error));\n  // }\n\n \n\n  const handleDelete = (id) => {\n    setVideos(videos.filter((video) => video.id !== id));\n  };\n  return (\n    <div>\n      {sortedVideoList.map((video, index) => (\n        <div key={index} className=\"video-card\">\n          <h3>{video.title}</h3>\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={videos.Url}\n            title={videos.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <Rating rating={videos.rating} />\n          <AddVideoForm addVideo={addVideo} />\n          <button onClick={() => handleDelete(video.id)}>Remove</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoComponent;\n"]},"metadata":{},"sourceType":"module"}