{"ast":null,"code":"export default function composeClasses(slots, getUtilityClass) {\n  var classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var output = {};\n  Object.keys(slots).forEach( // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  function (slot) {\n    output[slot] = slots[slot].reduce(function (acc, key) {\n      if (key) {\n        var utilityClass = getUtilityClass(key);\n\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/node_modules/@mui/utils/esm/composeClasses/composeClasses.js"],"names":["composeClasses","slots","getUtilityClass","classes","undefined","output","Object","keys","forEach","slot","reduce","acc","key","utilityClass","push","join"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,eAA/B,EAAqE;AAAA,MAArBC,OAAqB,uEAAXC,SAAW;AAClF,MAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,OAAnB,EACA;AACA;AACA,YAAAC,IAAI,EAAI;AACNJ,IAAAA,MAAM,CAACI,IAAD,CAAN,GAAeR,KAAK,CAACQ,IAAD,CAAL,CAAYC,MAAZ,CAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9C,UAAIA,GAAJ,EAAS;AACP,YAAMC,YAAY,GAAGX,eAAe,CAACU,GAAD,CAApC;;AACA,YAAIC,YAAY,KAAK,EAArB,EAAyB;AACvBF,UAAAA,GAAG,CAACG,IAAJ,CAASD,YAAT;AACD;;AACD,YAAIV,OAAO,IAAIA,OAAO,CAACS,GAAD,CAAtB,EAA6B;AAC3BD,UAAAA,GAAG,CAACG,IAAJ,CAASX,OAAO,CAACS,GAAD,CAAhB;AACD;AACF;;AACD,aAAOD,GAAP;AACD,KAXc,EAWZ,EAXY,EAWRI,IAXQ,CAWH,GAXG,CAAf;AAYD,GAhBD;AAiBA,SAAOV,MAAP;AACD","sourcesContent":["export default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}"]},"metadata":{},"sourceType":"module"}