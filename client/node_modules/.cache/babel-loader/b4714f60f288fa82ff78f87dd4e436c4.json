{"ast":null,"code":"export function toModifierMap(modifiers) {\n  const result = {};\n\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  } // eslint-disable-next-line no-unused-expressions\n\n\n  modifiers == null ? void 0 : modifiers.forEach(m => {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray() {\n  let map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(k => {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig(_ref) {\n  let {\n    enabled,\n    enableEvents,\n    placement,\n    flip,\n    offset,\n    fixed,\n    containerPadding,\n    arrowElement,\n    popperConfig = {}\n  } = _ref;\n\n  var _modifiers$eventListe, _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n\n  const modifiers = toModifierMap(popperConfig.modifiers);\n  return Object.assign({}, popperConfig, {\n    placement,\n    enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(Object.assign({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents,\n        options: (_modifiers$eventListe = modifiers.eventListeners) == null ? void 0 : _modifiers$eventListe.options\n      },\n      preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n        options: containerPadding ? Object.assign({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: Object.assign({\n          offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: Object.assign({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: Object.assign({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}","map":{"version":3,"sources":["C:/Users/meron/Documents/GitHub/Full-Stack-Project-Assessment/client/node_modules/@restart/ui/esm/mergeOptionsWithPopperConfig.js"],"names":["toModifierMap","modifiers","result","Array","isArray","forEach","m","name","toModifierArray","map","Object","keys","k","mergeOptionsWithPopperConfig","enabled","enableEvents","placement","flip","offset","fixed","containerPadding","arrowElement","popperConfig","_modifiers$eventListe","_modifiers$preventOve","_modifiers$preventOve2","_modifiers$offset","_modifiers$arrow","assign","strategy","eventListeners","options","preventOverflow","padding","arrow","element"],"mappings":"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","sourcesContent":["export function toModifierMap(modifiers) {\n  const result = {};\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  }\n\n  // eslint-disable-next-line no-unused-expressions\n  modifiers == null ? void 0 : modifiers.forEach(m => {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map = {}) {\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(k => {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig({\n  enabled,\n  enableEvents,\n  placement,\n  flip,\n  offset,\n  fixed,\n  containerPadding,\n  arrowElement,\n  popperConfig = {}\n}) {\n  var _modifiers$eventListe, _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n  const modifiers = toModifierMap(popperConfig.modifiers);\n  return Object.assign({}, popperConfig, {\n    placement,\n    enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(Object.assign({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents,\n        options: (_modifiers$eventListe = modifiers.eventListeners) == null ? void 0 : _modifiers$eventListe.options\n      },\n      preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n        options: containerPadding ? Object.assign({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: Object.assign({\n          offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: Object.assign({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: Object.assign({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}"]},"metadata":{},"sourceType":"module"}