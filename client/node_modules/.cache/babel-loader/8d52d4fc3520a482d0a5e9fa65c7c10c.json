{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/VideosList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Video from \"./Video\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideosList() {\n  _s();\n\n  const videosList = exampleresponse;\n  const [video, setVideo] = useState(videosList);\n  useEffect();\n\n  const newVideo = newInput => {\n    newInput.id = video.length + 1;\n    newInput.rating = 0;\n    setVideo([...video, newInput]);\n  };\n\n  const deleteVideoItem = videoId => {\n    const videoDeleted = video.filter(el => el.id !== videoId);\n    setVideo(videoDeleted);\n  };\n\n  const sortedVideos = [...video].sort((a, b) => b.rating - a.rating);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddVideo, {\n      onVidAdd: newVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: sortedVideos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n        videoObj: video,\n        deleteVideo: deleteVideoItem\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VideosList, \"mJblV2aimwdYDcZrs1VekQF35hg=\");\n\n_c = VideosList;\nexport default VideosList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideosList\");","map":{"version":3,"sources":["/home/coder/CYF/react-learn/Full-Stack-Project-Assessment/client/src/components/VideosList.jsx"],"names":["React","useEffect","useState","Video","AddVideo","exampleresponse","VideosList","videosList","video","setVideo","newVideo","newInput","id","length","rating","deleteVideoItem","videoId","videoDeleted","filter","el","sortedVideos","sort","a","b","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAO,cAAP;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAMC,UAAU,GAAGF,eAAnB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,UAAD,CAAlC;AACDN,EAAAA,SAAS;;AACR,QAAMS,QAAQ,GAAIC,QAAD,IAAc;AAC7BA,IAAAA,QAAQ,CAACC,EAAT,GAAcJ,KAAK,CAACK,MAAN,GAAe,CAA7B;AACAF,IAAAA,QAAQ,CAACG,MAAT,GAAkB,CAAlB;AACAL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,QAAX,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMI,eAAe,GAAIC,OAAD,IAAa;AACnC,UAAMC,YAAY,GAAGT,KAAK,CAACU,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACP,EAAH,KAAUI,OAA/B,CAArB;AACAP,IAAAA,QAAQ,CAACQ,YAAD,CAAR;AACD,GAHD;;AAKA,QAAMG,YAAY,GAAG,CAAC,GAAGZ,KAAJ,EAAWa,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACT,MAAF,GAAWQ,CAAC,CAACR,MAAvC,CAArB;AACA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGU,YAAY,CAACI,GAAb,CAAkBhB,KAAD,iBAChB,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA,KAAjB;AAAuC,QAAA,WAAW,EAAEO;AAApD,SAA6BP,KAAK,CAACI,EAAnC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD;;GA3BQN,U;;KAAAA,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Video from \"./Video\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\nimport \"../index.css\";\n\nfunction VideosList() {\n\n  const videosList = exampleresponse;\n  const [video, setVideo] = useState(videosList);\n useEffect()\n  const newVideo = (newInput) => {\n    newInput.id = video.length + 1;\n    newInput.rating = 0;\n    setVideo([...video, newInput]);\n  };\n\n  const deleteVideoItem = (videoId) => {\n    const videoDeleted = video.filter((el) => el.id !== videoId);\n    setVideo(videoDeleted);\n  };\n\n  const sortedVideos = [...video].sort((a, b) => b.rating - a.rating);\n  return (\n    <>\n      <AddVideo onVidAdd={newVideo} />\n      <div className=\"container mt-5\">\n        {sortedVideos.map((video) => (\n          <Video videoObj={video} key={video.id} deleteVideo={deleteVideoItem} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default VideosList;\n"]},"metadata":{},"sourceType":"module"}