{"ast":null,"code":"var _jsxFileName = \"/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideoPlay.jsx\",\n    _s = $RefreshSig$();\n\n// import { useState } from \"react\";\n// import AddVideo from \"./AddVideo\";\n// import exampleresponse from \"../exampleresponse.json\";\n// function VideoPlay() {\n//   const [vote, setVote] = useState(0);\n//   const [vid,setVid] = useState([]);\n//   const voteIncrease = () => {\n//     setVote((prev) => prev + 1);\n//   };\n//   const voteDecrease = () => {\n//     setVote((prev) => {\n//       return prev > 0 ? prev - 1 : 0;\n//     });\n//   };\n//   const newVideoAdd =(newInput)=>{\n//     setVid([...vid,newInput]);\n//   }\n//   return exampleresponse.map((el) => (\n//     <div className=\"container mt-5\">\n//       <AddVideo onVidAdd={newVideoAdd}/>\n//       <div className=\"card\">\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{el.title}</h5>\n//           <div className=\"embed-responsive embed-responsive-16by9\">\n//             <video className=\"embed-responsive-item\" controls>\n//               <source src={el.url} type=\"video\" />\n//               Your browser does not support the video tag.\n//             </video>\n//           </div>\n//           <div className=\"btnCounter\">\n//             <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\"> + </button>\n//             <p>Vote: {vote}</p>\n//             <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">  - </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   ));\n// }\n// export default VideoPlay;\n// import React, { useState } from \"react\";\n// import AddVideo from \"./AddVideo\";\n// import exampleresponse from \"../exampleresponse.json\";\n// function VideoPlay() {\n//   const [vote, setVote] = useState(0);\n//   const [vid, setVid] = useState(exampleresponse);\n//   const voteIncrease = () => {\n//     setVote((prev) => prev + 1);\n//   };\n//   const voteDecrease = () => {\n//     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n//   };\n//   const newVideoAdd = (newInput) => {\n//     setVid([...vid, newInput]);\n//   };\n//   return (\n//     <div className=\"container mt-5\">\n//       <AddVideo onVidAdd={newVideoAdd} />\n//       {vid.map((el, index) => (\n//         <div className=\"card\" key={index}>\n//          <h5 className=\"card-title\">{el.title}</h5>\n//           <div className=\"embed-responsive embed-responsive-16by9\">\n//           <iframe width=\"560\" height=\"315\" src={el.url}\n//           title=\"YouTube video player\" frameborder=\"0\"\n//           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//           allowfullscreen></iframe>\n//            </div>\n//            <div className=\"btnCounter\">\n//              <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\"> + </button>\n//              <p>Vote: {vote}</p>\n//              <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">  - </button>\n//            </div>\n//          </div>\n//       ))}\n//     </div>\n//   );\n// }\n// export default VideoPlay;\n// import React, { useState } from \"react\";\n// import AddVideo from \"./AddVideo\";\n// import exampleresponse from \"../exampleresponse.json\";\n// function VideoPlay(videoId) {\n//      url.split(\"v=\")[1];\n//   const [vote, setVote] = useState(0);\n//   const [vid, setVid] = useState(exampleresponse);\n//   const voteIncrease = () => {\n//     setVote((prev) => prev + 1);\n//   };\n//   const voteDecrease = () => {\n//     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n//   };\n//   const newVideoAdd = (newInput) => {\n//     setVid([...vid, newInput]);\n//   };\n//   return (\n//     <div className=\"container mt-5\">\n//       <AddVideo onVidAdd={newVideoAdd} />\n//       {vid.map((el, index) => (\n//         const videoId = getVideoIdFromUrl(el.url)\n//         <div className=\"videoCard\" key={index}>\n//           <h5 className=\"card-title\">{el.title}</h5>\n//           <iframe\n//             width=\"560\"\n//             height=\"315\"\n//             src={`https://www.youtube.com/embed/${videoId}`}\n//             title=\"YouTube video player\"\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//           <div className=\"btnCounter\">\n//             <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\">\n//               +\n//             </button>\n//             <p>Vote: {vote}</p>\n//             <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">\n//               -\n//             </button>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n//   function getVideoIdFromUrl(url) {\n//     const videoId = url.split(\"v=\")[1];\n//     return videoId;\n//   }\n// }\n// export default VideoPlay;\nimport React, { useState } from \"react\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoPlay(videoId) {\n  _s();\n\n  const [vote, setVote] = useState(0);\n  const [vid, setVid] = useState(exampleresponse);\n\n  const voteIncrease = () => {\n    setVote(prev => prev + 1);\n  };\n\n  const voteDecrease = () => {\n    setVote(prev => prev > 0 ? prev - 1 : 0);\n  };\n\n  const newVideoAdd = newInput => {\n    setVid([...vid, newInput]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(AddVideo, {\n      onVidAdd: newVideoAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), vid.map((el, index) => {\n      //const videoId = getVideoIdFromUrl(el.url);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: el.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"560\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${videoId}`,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnCounter\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: voteIncrease,\n            type: \"button\",\n            className: \"btn btn-success\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Vote: \", vote]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: voteDecrease,\n            type: \"button\",\n            className: \"btn btn-danger\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoPlay, \"UQupeEZgptGm7c6/cPdhVeAsC4o=\");\n\n_c = VideoPlay;\nexport default VideoPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlay\");","map":{"version":3,"sources":["/home/coder/CYF/DataBase/Full-Stack-Project-Assessment/client/src/components/VideoPlay.jsx"],"names":["React","useState","AddVideo","exampleresponse","VideoPlay","videoId","vote","setVote","vid","setVid","voteIncrease","prev","voteDecrease","newVideoAdd","newInput","map","el","index","title"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAACE,eAAD,CAA9B;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAAEI,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBL,IAAAA,OAAO,CAAEI,IAAD,IAAWA,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAlC,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAIC,QAAD,IAAc;AAChCL,IAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAASM,QAAT,CAAD,CAAN;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,EAGGL,GAAG,CAACO,GAAJ,CAAQ,CAACC,EAAD,EAAKC,KAAL,KAAe;AACtB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BD,EAAE,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,GAAG,EAAG,iCAAgCb,OAAQ,EAHhD;AAIE,UAAA,KAAK,EAAC,sBAJR;AAKE,UAAA,WAAW,EAAC,GALd;AAME,UAAA,KAAK,EAAC,0FANR;AAOE,UAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAHF,eAaE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAEK,YAAjB;AAA+B,YAAA,IAAI,EAAC,QAApC;AAA6C,YAAA,SAAS,EAAC,iBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,iCAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,OAAO,EAAEM,YAAjB;AAA+B,YAAA,IAAI,EAAC,QAApC;AAA6C,YAAA,SAAS,EAAC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA,SAAgCK,KAAhC;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA5BA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAnDQb,S;;KAAAA,S;AAuDT,eAAeA,SAAf","sourcesContent":["// import { useState } from \"react\";\n// import AddVideo from \"./AddVideo\";\n\n// import exampleresponse from \"../exampleresponse.json\";\n\n// function VideoPlay() {\n//   const [vote, setVote] = useState(0);\n//   const [vid,setVid] = useState([]);\n//   const voteIncrease = () => {\n//     setVote((prev) => prev + 1);\n//   };\n//   const voteDecrease = () => {\n//     setVote((prev) => {\n//       return prev > 0 ? prev - 1 : 0;\n//     });\n//   };\n\n//   const newVideoAdd =(newInput)=>{\n//     setVid([...vid,newInput]);\n//   }\n\n//   return exampleresponse.map((el) => (\n//     <div className=\"container mt-5\">\n//       <AddVideo onVidAdd={newVideoAdd}/>\n//       <div className=\"card\">\n\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{el.title}</h5>\n//           <div className=\"embed-responsive embed-responsive-16by9\">\n//             <video className=\"embed-responsive-item\" controls>\n//               <source src={el.url} type=\"video\" />\n//               Your browser does not support the video tag.\n//             </video>\n//           </div>\n//           <div className=\"btnCounter\">\n//             <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\"> + </button>\n//             <p>Vote: {vote}</p>\n//             <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">  - </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   ));\n// }\n\n// export default VideoPlay;\n\n// import React, { useState } from \"react\";\n// import AddVideo from \"./AddVideo\";\n// import exampleresponse from \"../exampleresponse.json\";\n\n// function VideoPlay() {\n//   const [vote, setVote] = useState(0);\n//   const [vid, setVid] = useState(exampleresponse);\n\n//   const voteIncrease = () => {\n//     setVote((prev) => prev + 1);\n//   };\n\n//   const voteDecrease = () => {\n//     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n//   };\n\n//   const newVideoAdd = (newInput) => {\n//     setVid([...vid, newInput]);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <AddVideo onVidAdd={newVideoAdd} />\n//       {vid.map((el, index) => (\n//         <div className=\"card\" key={index}>\n//          <h5 className=\"card-title\">{el.title}</h5>\n//           <div className=\"embed-responsive embed-responsive-16by9\">\n\n//           <iframe width=\"560\" height=\"315\" src={el.url}\n//           title=\"YouTube video player\" frameborder=\"0\"\n//           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//           allowfullscreen></iframe>\n\n//            </div>\n//            <div className=\"btnCounter\">\n//              <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\"> + </button>\n//              <p>Vote: {vote}</p>\n//              <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">  - </button>\n//            </div>\n//          </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default VideoPlay;\n\n// import React, { useState } from \"react\";\n// import AddVideo from \"./AddVideo\";\n// import exampleresponse from \"../exampleresponse.json\";\n\n// function VideoPlay(videoId) {\n//      url.split(\"v=\")[1];\n\n\n\n//   const [vote, setVote] = useState(0);\n//   const [vid, setVid] = useState(exampleresponse);\n\n//   const voteIncrease = () => {\n//     setVote((prev) => prev + 1);\n//   };\n\n//   const voteDecrease = () => {\n//     setVote((prev) => (prev > 0 ? prev - 1 : 0));\n//   };\n\n//   const newVideoAdd = (newInput) => {\n//     setVid([...vid, newInput]);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <AddVideo onVidAdd={newVideoAdd} />\n\n//       {vid.map((el, index) => (\n//         const videoId = getVideoIdFromUrl(el.url)\n\n\n//         <div className=\"videoCard\" key={index}>\n//           <h5 className=\"card-title\">{el.title}</h5>\n\n//           <iframe\n//             width=\"560\"\n//             height=\"315\"\n//             src={`https://www.youtube.com/embed/${videoId}`}\n//             title=\"YouTube video player\"\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n\n//           <div className=\"btnCounter\">\n//             <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\">\n//               +\n//             </button>\n//             <p>Vote: {vote}</p>\n//             <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">\n//               -\n//             </button>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n//   function getVideoIdFromUrl(url) {\n//     const videoId = url.split(\"v=\")[1];\n//     return videoId;\n//   }\n// }\n\n// export default VideoPlay;\nimport React, { useState } from \"react\";\nimport AddVideo from \"./AddVideo\";\nimport exampleresponse from \"../exampleresponse.json\";\n\nfunction VideoPlay(videoId) {\n  const [vote, setVote] = useState(0);\n  const [vid, setVid] = useState(exampleresponse);\n\n  const voteIncrease = () => {\n    setVote((prev) => prev + 1);\n  };\n\n  const voteDecrease = () => {\n    setVote((prev) => (prev > 0 ? prev - 1 : 0));\n  };\n\n  const newVideoAdd = (newInput) => {\n    setVid([...vid, newInput]);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <AddVideo onVidAdd={newVideoAdd}  />\n\n      {vid.map((el, index) => {\n        //const videoId = getVideoIdFromUrl(el.url);\n\n        return (\n          <div className=\"videoCard\" key={index}>\n            <h5 className=\"card-title\">{el.title}</h5>\n\n            <iframe\n              width=\"560\"\n              height=\"315\"\n              src={`https://www.youtube.com/embed/${videoId}`}\n              title=\"YouTube video player\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n\n            <div className=\"btnCounter\">\n              <button onClick={voteIncrease} type=\"button\" className=\"btn btn-success\">\n                +\n              </button>\n              <p>Vote: {vote}</p>\n              <button onClick={voteDecrease} type=\"button\" className=\"btn btn-danger\">\n                -\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n\n\nexport default VideoPlay;\n"]},"metadata":{},"sourceType":"module"}