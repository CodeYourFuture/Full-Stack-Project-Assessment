{"ast":null,"code":"var _jsxFileName = \"/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/src/Video.js\";\nimport React from \"react\";\nimport \"./Video.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = _ref => {\n  let {\n    video,\n    onVoteUp,\n    onVoteDown,\n    onRemove\n  } = _ref;\n  const videoId = extractVideoIdFromUrl(video.url);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: video.title,\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videoId}`,\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vote\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onVoteUp,\n        children: \"\\uD83D\\uDC4D Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: video.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onVoteDown,\n        children: \"\\uD83D\\uDC4E Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRemove,\n      children: \"Remove Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Video;\n\nfunction extractVideoIdFromUrl(url) {\n  const regex = /[?&]v=([^?&]+)/;\n  const match = url.match(regex);\n  return match ? match[1] : \"\";\n}\n\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/coder/Documents/CYF1/Full-Stack-Project-Assessment/client/src/Video.js"],"names":["React","Video","video","onVoteUp","onVoteDown","onRemove","videoId","extractVideoIdFromUrl","url","title","rating","regex","match"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,QAA+C;AAAA,MAA9C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,GAA8C;AAC3D,QAAMC,OAAO,GAAGC,qBAAqB,CAACL,KAAK,CAACM,GAAP,CAArC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA,gBAAKN,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEP,KAAK,CAACO,KADf;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,MAAM,EAAC,KAHT;AAIE,MAAA,GAAG,EAAG,iCAAgCH,OAAQ,EAJhD;AAKE,MAAA,KAAK,EAAC,0FALR;AAME,MAAA,eAAe;AANjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEH,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOD,KAAK,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtBD;;KAAMJ,K;;AAwBN,SAASM,qBAAT,CAA+BC,GAA/B,EAAoC;AAClC,QAAMG,KAAK,GAAG,gBAAd;AACA,QAAMC,KAAK,GAAGJ,GAAG,CAACI,KAAJ,CAAUD,KAAV,CAAd;AACA,SAAOC,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,EAA1B;AACD;;AAED,eAAeX,KAAf","sourcesContent":["import React from \"react\";\nimport \"./Video.css\";\n\nconst Video = ({ video, onVoteUp, onVoteDown, onRemove }) => {\n  const videoId = extractVideoIdFromUrl(video.url);\n\n  return (\n    <div className=\"video\">\n      <h2>{video.title}</h2>\n      <iframe\n        title={video.title}\n        width=\"560\"\n        height=\"315\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n      <div className=\"vote\">\n        <button onClick={onVoteUp}>&#128077; Up</button>\n        <span>{video.rating}</span>\n        <button onClick={onVoteDown}>&#128078; Down</button>\n      </div>\n      <button onClick={onRemove}>Remove Video</button>\n    </div>\n  );\n};\n\nfunction extractVideoIdFromUrl(url) {\n  const regex = /[?&]v=([^?&]+)/;\n  const match = url.match(regex);\n  return match ? match[1] : \"\";\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}