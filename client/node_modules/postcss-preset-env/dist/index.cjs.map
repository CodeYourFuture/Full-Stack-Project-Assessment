{"version":3,"file":"index.cjs","sources":["../src/patch/postcss-system-ui-font-family.js","../src/lib/plugins-by-id.js","../src/lib/get-transformed-insertions.js","../src/lib/get-unsupported-browsers-by-feature.js","../src/lib/ids-by-execution-order.js","../src/lib/write-to-exports.js","../src/lib/get-options-for-browsers-by-feature.js","../src/index.js"],"sourcesContent":["export default function postcssSystemUiFont() {\n\treturn {\n\t\tpostcssPlugin: 'postcss-system-ui-font',\n\t\tDeclaration(/** @type {import('postcss').Declaration} */ node) {\n\t\t\tif (propertyRegExp.test(node.prop)) {\n\t\t\t\tif (!node.value.includes(systemUiFamily.join(', '))) {\n\t\t\t\t\tnode.value = node.value.replace(systemUiMatch, systemUiReplace);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\npostcssSystemUiFont.postcss = true;\n\nconst propertyRegExp = /(?:^(?:-|\\\\002d){2})|(?:^font(?:-family)?$)/i;\nconst whitespace = '[\\\\f\\\\n\\\\r\\\\x09\\\\x20]';\nconst systemUiFamily = [\n\t'system-ui',\n\t/* macOS 10.11-10.12 */ '-apple-system',\n\t/* Windows 6+ */ 'Segoe UI',\n\t/* Android 4+ */ 'Roboto',\n\t/* Ubuntu 10.10+ */ 'Ubuntu',\n\t/* Gnome 3+ */ 'Cantarell',\n\t/* KDE Plasma 5+ */ 'Noto Sans',\n\t/* fallback */ 'sans-serif',\n];\nconst systemUiMatch = new RegExp(`(^|,|${whitespace}+)(?:system-ui${whitespace}*)(?:,${whitespace}*(?:${systemUiFamily.join('|')})${whitespace}*)?(,|$)`, 'i');\nconst systemUiReplace = `$1${systemUiFamily.join(', ')}$2`;\n","import postcssAttributeCaseInsensitive from 'postcss-attribute-case-insensitive';\nimport postcssBlankPseudo from 'css-blank-pseudo';\nimport postcssColorFunctionalNotation from 'postcss-color-functional-notation';\nimport postcssColorHexAlpha from 'postcss-color-hex-alpha';\nimport postcssColorRebeccapurple from 'postcss-color-rebeccapurple';\nimport postcssCustomMedia from 'postcss-custom-media';\nimport postcssCustomProperties from 'postcss-custom-properties';\nimport postcssCustomSelectors from 'postcss-custom-selectors';\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\nimport postcssDoublePositionGradients from 'postcss-double-position-gradients';\nimport postcssEnvFunction from 'postcss-env-function';\nimport postcssFocusVisible from 'postcss-focus-visible';\nimport postcssFocusWithin from 'postcss-focus-within';\nimport postcssFontVariant from 'postcss-font-variant';\nimport postcssFontFamilySystemUi from '../patch/postcss-system-ui-font-family';\nimport postcssGapProperties from 'postcss-gap-properties';\nimport postcssHasPseudo from 'css-has-pseudo';\nimport postcssImageSetPolyfill from 'postcss-image-set-function';\nimport postcssInitial from 'postcss-initial';\nimport postcssLabFunction from 'postcss-lab-function';\nimport postcssLogical from 'postcss-logical';\nimport postcssMediaMinmax from 'postcss-media-minmax';\nimport postcssNesting from 'postcss-nesting';\nimport postcssOverflowShorthand from 'postcss-overflow-shorthand';\nimport postcssPageBreak from 'postcss-page-break';\nimport postcssPlace from 'postcss-place';\nimport postcssPrefersColorScheme from 'css-prefers-color-scheme';\nimport postcssPseudoClassAnyLink from 'postcss-pseudo-class-any-link';\nimport postcssReplaceOverflowWrap from 'postcss-replace-overflow-wrap';\nimport postcssSelectorNot from 'postcss-selector-not';\n\n// postcss plugins ordered by id\nexport default {\n\t'all-property': postcssInitial,\n\t'any-link-pseudo-class': postcssPseudoClassAnyLink,\n\t'blank-pseudo-class': postcssBlankPseudo,\n\t'break-properties': postcssPageBreak,\n\t'case-insensitive-attributes': postcssAttributeCaseInsensitive,\n\t'color-functional-notation': postcssColorFunctionalNotation,\n\t'custom-media-queries': postcssCustomMedia,\n\t'custom-properties': postcssCustomProperties,\n\t'custom-selectors': postcssCustomSelectors,\n\t'dir-pseudo-class': postcssDirPseudoClass,\n\t'double-position-gradients': postcssDoublePositionGradients,\n\t'environment-variables': postcssEnvFunction,\n\t'focus-visible-pseudo-class': postcssFocusVisible,\n\t'focus-within-pseudo-class': postcssFocusWithin,\n\t'font-variant-property': postcssFontVariant,\n\t'gap-properties': postcssGapProperties,\n\t'has-pseudo-class': postcssHasPseudo,\n\t'hexadecimal-alpha-notation': postcssColorHexAlpha,\n\t'image-set-function': postcssImageSetPolyfill,\n\t'lab-function': postcssLabFunction,\n\t'logical-properties-and-values': postcssLogical,\n\t'media-query-ranges': postcssMediaMinmax,\n\t'nesting-rules': postcssNesting,\n\t'not-pseudo-class': postcssSelectorNot,\n\t'overflow-property': postcssOverflowShorthand,\n\t'overflow-wrap-property': postcssReplaceOverflowWrap,\n\t'place-properties': postcssPlace,\n\t'prefers-color-scheme-query': postcssPrefersColorScheme,\n\t'rebeccapurple-color': postcssColorRebeccapurple,\n\t'system-ui-font-family': postcssFontFamilySystemUi,\n};\n","// return a list of features to be inserted before or after cssdb features\nexport default function getTransformedInsertions(insertions, placement) {\n\treturn Object.keys(insertions).map(\n\t\tid => [].concat(insertions[id]).map(\n\t\t\tplugin => ({\n\t\t\t\t[placement]: true,\n\t\t\t\tplugin,\n\t\t\t\tid,\n\t\t\t}),\n\t\t),\n\t).reduce(\n\t\t(array, feature) => array.concat(feature), [],\n\t);\n}\n","import * as caniuse from 'caniuse-lite';\n\n// return a list of browsers that do not support the feature\nexport default function getUnsupportedBrowsersByFeature(feature) {\n\tconst caniuseFeature = caniuse.features[feature];\n\n\t// if feature support can be determined\n\tif (caniuseFeature) {\n\t\tconst stats = caniuse.feature(caniuseFeature).stats;\n\n\t\t// return an array of browsers and versions that do not support the feature\n\t\tconst results = Object.keys(stats).reduce(\n\t\t\t(browsers, browser) => browsers.concat(\n\t\t\t\tObject.keys(stats[browser]).filter(\n\t\t\t\t\tversion => stats[browser][version].indexOf('y') !== 0,\n\t\t\t\t).map(\n\t\t\t\t\tversion => `${browser} ${version}`,\n\t\t\t\t),\n\t\t\t),\n\t\t\t[],\n\t\t);\n\n\t\treturn results;\n\t} else {\n\t\t// otherwise, return that the feature does not work in any browser\n\t\treturn [ '> 0%' ];\n\t}\n}\n","// ids ordered by required execution, then alphabetically\nexport default [\n\t'custom-media-queries',\n\t'custom-properties',\n\t'environment-variables', // run environment-variables here to access transpiled custom media params and properties\n\t'image-set-function', // run images-set-function before nesting-rules so that it may fix nested media\n\t'media-query-ranges', // run media-query-range and\n\t'prefers-color-scheme-query', // run prefers-color-scheme-query here to prevent duplicate transpilation after nesting-rules\n\t'nesting-rules',\n\t'custom-selectors', // run custom-selectors after nesting-rules to correctly transpile &:--custom-selector\n\t'any-link-pseudo-class',\n\t'case-insensitive-attributes',\n\t'focus-visible-pseudo-class',\n\t'focus-within-pseudo-class',\n\t'matches-pseudo-class', // run matches-pseudo-class and\n\t'not-pseudo-class', // run not-pseudo-class after other selectors have been transpiled\n\t'logical-properties-and-values', // run logical-properties-and-values before dir-pseudo-class\n\t'dir-pseudo-class',\n\t'all-property', // run all-property before other property polyfills\n\t'color-functional-notation',\n\t'double-position-gradients',\n\t'hexadecimal-alpha-notation',\n\t'lab-function',\n\t'rebeccapurple-color',\n\t'color-mod-function', // run color-mod after other color modifications have finished\n\t'blank-pseudo-class',\n\t'break-properties',\n\t'font-variant-property',\n\t'has-pseudo-class',\n\t'gap-properties',\n\t'overflow-property',\n\t'overflow-wrap-property',\n\t'place-properties',\n\t'system-ui-font-family',\n];\n","/* eslint max-params: [\"error\", 4] */\n\nimport fs from 'fs';\nimport path from 'path';\n\n/* Write Exports to CSS File\n/* ========================================================================== */\n\nfunction getCustomMediaAsCss(customMedia) {\n\tconst cssContent = Object.keys(customMedia).reduce((cssLines, name) => {\n\t\tcssLines.push(`@custom-media ${name} ${customMedia[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `${cssContent}\\n`;\n\n\treturn css;\n}\n\nfunction getCustomPropertiesAsCss(customProperties) {\n\tconst cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n\t\tcssLines.push(`\\t${name}: ${customProperties[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `:root {\\n${cssContent}\\n}\\n`;\n\n\treturn css;\n}\n\nfunction getCustomSelectorsAsCss(customSelectors) {\n\tconst cssContent = Object.keys(customSelectors).reduce((cssLines, name) => {\n\t\tcssLines.push(`@custom-selector ${name} ${customSelectors[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `${cssContent}\\n`;\n\n\treturn css;\n}\n\nasync function writeExportsToCssFile(to, customMedia, customProperties, customSelectors) {\n\tconst customPropertiesAsCss = getCustomPropertiesAsCss(customProperties);\n\tconst customMediaAsCss = getCustomMediaAsCss(customMedia);\n\tconst customSelectorsAsCss = getCustomSelectorsAsCss(customSelectors);\n\tconst css = `${customMediaAsCss}\\n${customSelectorsAsCss}\\n${customPropertiesAsCss}`;\n\n\tawait writeFile(to, css);\n}\n\n/* Write Exports to JSON file\n/* ========================================================================== */\n\nasync function writeExportsToJsonFile(to, customMedia, customProperties, customSelectors) {\n\tconst jsonContent = JSON.stringify({\n\t\t'custom-media': customMedia,\n\t\t'custom-properties': customProperties,\n\t\t'custom-selectors': customSelectors,\n\t}, null, '  ');\n\tconst json = `${jsonContent}\\n`;\n\n\tawait writeFile(to, json);\n}\n\n/* Write Exports to Common JS file\n/* ========================================================================== */\n\nfunction getObjectWithKeyAsCjs(key, object) {\n\tconst jsContents = Object.keys(object).reduce((jsLines, name) => {\n\t\tjsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(object[name])}'`);\n\n\t\treturn jsLines;\n\t}, []).join(',\\n');\n\tconst cjs = `\\n\\t${key}: {\\n${jsContents}\\n\\t}`;\n\n\treturn cjs;\n}\n\nasync function writeExportsToCjsFile(to, customMedia, customProperties, customSelectors) {\n\tconst customMediaAsCjs = getObjectWithKeyAsCjs('customMedia', customMedia);\n\tconst customPropertiesAsCjs = getObjectWithKeyAsCjs('customProperties', customProperties);\n\tconst customSelectorsAsCjs = getObjectWithKeyAsCjs('customSelectors', customSelectors);\n\tconst cjs = `module.exports = {${customMediaAsCjs},${customPropertiesAsCjs},${customSelectorsAsCjs}\\n};\\n`;\n\n\tawait writeFile(to, cjs);\n}\n\n/* Write Exports to Module JS file\n/* ========================================================================== */\n\nfunction getObjectWithKeyAsMjs(key, object) {\n\tconst mjsContents = Object.keys(object).reduce((mjsLines, name) => {\n\t\tmjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(object[name])}'`);\n\n\t\treturn mjsLines;\n\t}, []).join(',\\n');\n\tconst mjs = `export const ${key} = {\\n${mjsContents}\\n};\\n`;\n\n\treturn mjs;\n}\n\nasync function writeExportsToMjsFile(to, customMedia, customProperties, customSelectors) {\n\tconst customMediaAsMjs = getObjectWithKeyAsMjs('customMedia', customMedia);\n\tconst customPropertiesAsMjs = getObjectWithKeyAsMjs('customProperties', customProperties);\n\tconst customSelectorsAsMjs = getObjectWithKeyAsMjs('customSelectors', customSelectors);\n\tconst mjs = `${customMediaAsMjs}\\n${customPropertiesAsMjs}\\n${customSelectorsAsMjs}`;\n\n\tawait writeFile(to, mjs);\n}\n\n/* Write Exports to Exports\n/* ========================================================================== */\n\nexport default function writeToExports(customExports, destinations) {\n\treturn Promise.all([].concat(destinations).map(async destination => {\n\t\tif (destination instanceof Function) {\n\t\t\tawait destination({\n\t\t\t\tcustomMedia: getObjectWithStringifiedKeys(customExports.customMedia),\n\t\t\t\tcustomProperties: getObjectWithStringifiedKeys(customExports.customProperties),\n\t\t\t\tcustomSelectors: getObjectWithStringifiedKeys(customExports.customSelectors),\n\t\t\t});\n\t\t} else {\n\t\t\t// read the destination as an object\n\t\t\tconst opts = destination === Object(destination) ? destination : { to: String(destination) };\n\n\t\t\t// transformer for Exports into a JSON-compatible object\n\t\t\tconst toJSON = opts.toJSON || getObjectWithStringifiedKeys;\n\n\t\t\tif ('customMedia' in opts || 'customProperties' in opts || 'customSelectors' in opts) {\n\t\t\t\t// write directly to an object as customProperties\n\t\t\t\topts.customMedia = toJSON(customExports.customMedia);\n\t\t\t\topts.customProperties = toJSON(customExports.customProperties);\n\t\t\t\topts.customSelectors = toJSON(customExports.customSelectors);\n\t\t\t} else if ('custom-media' in opts || 'custom-properties' in opts || 'custom-selectors' in opts) {\n\t\t\t\t// write directly to an object as custom-properties\n\t\t\t\topts['custom-media'] = toJSON(customExports.customMedia);\n\t\t\t\topts['custom-properties'] = toJSON(customExports.customProperties);\n\t\t\t\topts['custom-selectors'] = toJSON(customExports.customSelectors);\n\t\t\t} else {\n\t\t\t\t// destination pathname\n\t\t\t\tconst to = String(opts.to || '');\n\n\t\t\t\t// type of file being written to\n\t\t\t\tconst type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();\n\n\t\t\t\t// transformed Exports\n\t\t\t\tconst customMediaJSON = toJSON(customExports.customMedia);\n\t\t\t\tconst customPropertiesJSON = toJSON(customExports.customProperties);\n\t\t\t\tconst customSelectorsJSON = toJSON(customExports.customSelectors);\n\n\t\t\t\tif (type === 'css') {\n\t\t\t\t\tawait writeExportsToCssFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'js') {\n\t\t\t\t\tawait writeExportsToCjsFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tawait writeExportsToJsonFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'mjs') {\n\t\t\t\t\tawait writeExportsToMjsFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nfunction getObjectWithStringifiedKeys(object) {\n\treturn Object.keys(object).reduce((objectJSON, key) => {\n\t\tobjectJSON[key] = String(object[key]);\n\n\t\treturn objectJSON;\n\t}, {});\n}\n\nfunction writeFile(to, text) {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.writeFile(to, text, error => {\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction escapeForJS(string) {\n\treturn string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n}\n","import browserslist from 'browserslist';\nimport getUnsupportedBrowsersByFeature from './get-unsupported-browsers-by-feature';\n\n// add extra options for certain browsers by feature\nexport default function getOptionsForBrowsersByFeature(browsers, feature) {\n\tconst supportedBrowsers = browserslist(browsers, { ignoreUnknownVersions: true });\n\n\tswitch (feature.id) {\n\t\tcase 'nesting-rules':\n\t\t\t{\n\t\t\t\t// Nesting rules can transform selectors to use :is pseudo.\n\t\t\t\t// This is more spec compliant but it's not supported by all browsers.\n\t\t\t\t// If we can't use :is pseudo according to preset-env options, we add an extra option to avoid :is pseudo.\n\t\t\t\tif (needsOptionFor('css-matches-pseudo', supportedBrowsers)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnoIsPseudoSelector: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {};\n\n\t\tdefault:\n\t\t\treturn {};\n\t}\n}\n\nfunction needsOptionFor(feature, supportedBrowsers) {\n\tconst unsupportedIn = getUnsupportedBrowsersByFeature(feature);\n\tif (supportedBrowsers.some(\n\t\tsupportedBrowser => browserslist(unsupportedIn, {\n\t\t\tignoreUnknownVersions: true,\n\t\t}).some(\n\t\t\tpolyfillBrowser => polyfillBrowser === supportedBrowser,\n\t\t),\n\t)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","import autoprefixer from 'autoprefixer';\nimport browserslist from 'browserslist';\nimport cssdb from 'cssdb';\nimport plugins from './lib/plugins-by-id';\nimport getTransformedInsertions from './lib/get-transformed-insertions';\nimport getUnsupportedBrowsersByFeature from './lib/get-unsupported-browsers-by-feature';\nimport idsByExecutionOrder from './lib/ids-by-execution-order';\nimport writeToExports from './lib/write-to-exports';\nimport getOptionsForBrowsersByFeature from './lib/get-options-for-browsers-by-feature';\n\nconst plugin = opts => {\n\t// initialize options\n\tconst features = Object(Object(opts).features);\n\tconst insertBefore = Object(Object(opts).insertBefore);\n\tconst insertAfter = Object(Object(opts).insertAfter);\n\tconst browsers = Object(opts).browsers;\n\tconst stage = 'stage' in Object(opts)\n\t\t? opts.stage === false\n\t\t\t? 5\n\t\t\t: parseInt(opts.stage) || 0\n\t\t: 2;\n\tconst autoprefixerOptions = Object(opts).autoprefixer;\n\tconst sharedOpts = initializeSharedOpts(Object(opts));\n\tconst stagedAutoprefixer = autoprefixerOptions === false\n\t\t? () => {}\n\t\t: autoprefixer(Object.assign({ overrideBrowserslist: browsers }, autoprefixerOptions));\n\n\t// polyfillable features (those with an available postcss plugin)\n\tconst polyfillableFeatures = cssdb.concat(\n\t\t// additional features to be inserted before cssdb features\n\t\tgetTransformedInsertions(insertBefore, 'insertBefore'),\n\t\t// additional features to be inserted after cssdb features\n\t\tgetTransformedInsertions(insertAfter, 'insertAfter'),\n\t).filter(\n\t\t// inserted features or features with an available postcss plugin\n\t\tfeature => feature.insertBefore || feature.id in plugins,\n\t).sort(\n\t\t// features sorted by execution order and then insertion order\n\t\t(a, b) => idsByExecutionOrder.indexOf(a.id) - idsByExecutionOrder.indexOf(b.id) || (a.insertBefore ? -1 : b.insertBefore ? 1 : 0) || (a.insertAfter ? 1 : b.insertAfter ? -1 : 0),\n\t).map(\n\t\t// polyfillable features as an object\n\t\tfeature => {\n\t\t\t// target browsers for the polyfill\n\t\t\tconst unsupportedBrowsers = getUnsupportedBrowsersByFeature(feature.caniuse);\n\n\t\t\treturn feature.insertBefore || feature.insertAfter ? {\n\t\t\t\tbrowsers: unsupportedBrowsers,\n\t\t\t\tplugin:   feature.plugin,\n\t\t\t\tid:       `${feature.insertBefore ? 'before' : 'after'}-${feature.id}`,\n\t\t\t\tstage:    6,\n\t\t\t} : {\n\t\t\t\tbrowsers: unsupportedBrowsers,\n\t\t\t\tplugin:   plugins[feature.id],\n\t\t\t\tid:       feature.id,\n\t\t\t\tstage:    feature.stage,\n\t\t\t};\n\t\t},\n\t);\n\n\t// staged features (those at or above the selected stage)\n\tconst stagedFeatures = polyfillableFeatures.filter(\n\t\tfeature => feature.id in features\n\t\t\t? features[feature.id]\n\t\t\t: feature.stage >= stage,\n\t).map(\n\t\tfeature => {\n\t\t\tlet options;\n\t\t\tlet plugin;\n\n\t\t\toptions = getOptionsForBrowsersByFeature(browsers, feature);\n\n\t\t\tif (features[feature.id] === true) {\n\t\t\t\t// if the plugin is enabled\n\t\t\t\toptions = sharedOpts ? Object.assign({}, options, sharedOpts) : undefined;\n\t\t\t} else {\n\t\t\t\toptions = sharedOpts\n\t\t\t\t\t// if the plugin has shared options and individual options\n\t\t\t\t\t? Object.assign({}, options, sharedOpts, features[feature.id])\n\t\t\t\t\t// if the plugin has individual options\n\t\t\t\t\t: Object.assign({}, options, features[feature.id]);\n\t\t\t}\n\n\t\t\tif (feature.plugin.postcss) {\n\t\t\t\tplugin = feature.plugin(options);\n\t\t\t} else {\n\t\t\t\tplugin = feature.plugin;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbrowsers: feature.browsers,\n\t\t\t\tplugin,\n\t\t\t\tid: feature.id,\n\t\t\t};\n\t\t},\n\t);\n\n\t// browsers supported by the configuration\n\tconst supportedBrowsers = browserslist(browsers, { ignoreUnknownVersions: true });\n\n\t// features supported by the stage and browsers\n\tconst supportedFeatures = stagedFeatures.filter(\n\t\tfeature => feature.id in features\n\t\t\t? features[feature.id]\n\t\t\t: supportedBrowsers.some(\n\t\t\t\tsupportedBrowser => browserslist(feature.browsers, {\n\t\t\t\t\tignoreUnknownVersions: true,\n\t\t\t\t}).some(\n\t\t\t\t\tpolyfillBrowser => polyfillBrowser === supportedBrowser,\n\t\t\t\t),\n\t\t\t),\n\t);\n\n\tconst usedPlugins = supportedFeatures.map(feature => feature.plugin);\n\tusedPlugins.push(stagedAutoprefixer);\n\n\treturn {\n\t\tpostcssPlugin: 'postcss-preset-env',\n\t\tplugins: usedPlugins,\n\t\tOnceExit: function() {\n\t\t\tif ( Object( opts ).exportTo ) {\n\t\t\t\twriteToExports( sharedOpts.exportTo, opts.exportTo );\n\t\t\t}\n\t\t},\n\t};\n};\n\nconst initializeSharedOpts = opts => {\n\tif ('importFrom' in opts || 'exportTo' in opts || 'preserve' in opts) {\n\t\tconst sharedOpts = {};\n\n\t\tif ('importFrom' in opts) {\n\t\t\tsharedOpts.importFrom = opts.importFrom;\n\t\t}\n\n\t\tif ('exportTo' in opts) {\n\t\t\tsharedOpts.exportTo = {\n\t\t\t\tcustomMedia: {},\n\t\t\t\tcustomProperties: {},\n\t\t\t\tcustomSelectors: {},\n\t\t\t};\n\t\t}\n\n\t\tif ('preserve' in opts) {\n\t\t\tsharedOpts.preserve = opts.preserve;\n\t\t}\n\n\t\treturn sharedOpts;\n\t}\n\n\treturn false;\n};\n\nplugin.postcss = true;\n\nexport default plugin;\n"],"names":["postcssSystemUiFont","postcssPlugin","Declaration","node","propertyRegExp","test","prop","value","includes","systemUiFamily","join","replace","systemUiMatch","systemUiReplace","postcss","whitespace","RegExp","postcssInitial","postcssPseudoClassAnyLink","postcssBlankPseudo","postcssPageBreak","postcssAttributeCaseInsensitive","postcssColorFunctionalNotation","postcssCustomMedia","postcssCustomProperties","postcssCustomSelectors","postcssDirPseudoClass","postcssDoublePositionGradients","postcssEnvFunction","postcssFocusVisible","postcssFocusWithin","postcssFontVariant","postcssGapProperties","postcssHasPseudo","postcssColorHexAlpha","postcssImageSetPolyfill","postcssLabFunction","postcssLogical","postcssMediaMinmax","postcssNesting","postcssSelectorNot","postcssOverflowShorthand","postcssReplaceOverflowWrap","postcssPlace","postcssPrefersColorScheme","postcssColorRebeccapurple","postcssFontFamilySystemUi","getTransformedInsertions","insertions","placement","Object","keys","map","id","concat","plugin","reduce","array","feature","getUnsupportedBrowsersByFeature","caniuseFeature","caniuse","features","stats","browsers","browser","filter","version","indexOf","async","writeExportsToCssFile","to","customMedia","customProperties","customSelectors","customPropertiesAsCss","cssLines","name","push","getCustomPropertiesAsCss","customMediaAsCss","getCustomMediaAsCss","customSelectorsAsCss","getCustomSelectorsAsCss","css","writeFile","getObjectWithKeyAsCjs","key","object","jsLines","escapeForJS","getObjectWithKeyAsMjs","mjsLines","writeToExports","customExports","destinations","Promise","all","destination","Function","getObjectWithStringifiedKeys","opts","String","toJSON","type","path","extname","slice","toLowerCase","customMediaJSON","customPropertiesJSON","customSelectorsJSON","cjs","writeExportsToCjsFile","json","JSON","stringify","writeExportsToJsonFile","mjs","writeExportsToMjsFile","objectJSON","text","resolve","reject","fs","error","string","getOptionsForBrowsersByFeature","supportedBrowsers","browserslist","ignoreUnknownVersions","unsupportedIn","some","supportedBrowser","polyfillBrowser","needsOptionFor","noIsPseudoSelector","insertBefore","insertAfter","stage","parseInt","autoprefixerOptions","autoprefixer","sharedOpts","initializeSharedOpts","stagedAutoprefixer","assign","overrideBrowserslist","stagedFeatures","cssdb","plugins","sort","a","b","idsByExecutionOrder","unsupportedBrowsers","options","undefined","usedPlugins","OnceExit","exportTo","importFrom","preserve"],"mappings":"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"}